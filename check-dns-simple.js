#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ–º–µ–Ω–∞ workclick.cz
 * –ó–∞–ø—É—Å–∫: node check-dns-simple.js
 */

const dns = require('dns').promises;
const https = require('https');
const http = require('http');

const DOMAIN = 'workclick.cz';
const EXPECTED_IPS = ['151.101.1.195', '151.101.65.195'];
const FIREBASE_URL = 'https://workclick-cz.web.app';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è workclick.cz\n');

async function checkDNS() {
    try {
        console.log('üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º A –∑–∞–ø–∏—Å–∏...');
        const addresses = await dns.resolve4(DOMAIN);
        console.log(`   –ù–∞–π–¥–µ–Ω—ã IP –∞–¥—Ä–µ—Å–∞: ${addresses.join(', ')}`);
        
        const allCorrect = EXPECTED_IPS.every(ip => addresses.includes(ip));
        if (allCorrect) {
            console.log('   ‚úÖ –í—Å–µ IP –∞–¥—Ä–µ—Å–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!');
            return true;
        } else {
            console.log('   ‚ùå –ù–µ –≤—Å–µ IP –∞–¥—Ä–µ—Å–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
            console.log(`   –û–∂–∏–¥–∞–µ–º—ã–µ: ${EXPECTED_IPS.join(', ')}`);
            return false;
        }
    } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ DNS: ${error.message}`);
        return false;
    }
}

async function checkCNAME() {
    try {
        console.log('üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º CNAME –∑–∞–ø–∏—Å—å –¥–ª—è www...');
        const cname = await dns.resolveCname(`www.${DOMAIN}`);
        console.log(`   CNAME: www.${DOMAIN} ‚Üí ${cname[0]}`);
        
        if (cname[0] === 'workclick-cz.web.app') {
            console.log('   ‚úÖ CNAME –∑–∞–ø–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!');
            return true;
        } else {
            console.log('   ‚ùå CNAME –∑–∞–ø–∏—Å—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
            console.log('   –û–∂–∏–¥–∞–µ—Ç—Å—è: workclick-cz.web.app');
            return false;
        }
    } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ CNAME: ${error.message}`);
        return false;
    }
}

async function checkWebsite() {
    return new Promise((resolve) => {
        console.log('üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞...');
        
        const req = https.get(`https://${DOMAIN}`, (res) => {
            console.log(`   –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
            if (res.statusCode === 200) {
                console.log('   ‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!');
                resolve(true);
            } else {
                console.log('   ‚ö†Ô∏è –°–∞–π—Ç –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ 200');
                resolve(false);
            }
        });
        
        req.on('error', (error) => {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${error.message}`);
            resolve(false);
        });
        
        req.setTimeout(10000, () => {
            console.log('   ‚è∞ –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
            req.destroy();
            resolve(false);
        });
    });
}

async function checkFirebaseSite() {
    return new Promise((resolve) => {
        console.log('üî• –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase —Å–∞–π—Ç...');
        
        const req = https.get(FIREBASE_URL, (res) => {
            console.log(`   –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
            if (res.statusCode === 200) {
                console.log('   ‚úÖ Firebase —Å–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!');
                resolve(true);
            } else {
                console.log('   ‚ùå Firebase —Å–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                resolve(false);
            }
        });
        
        req.on('error', (error) => {
            console.log(`   ‚ùå –û—à–∏–±–∫–∞ Firebase: ${error.message}`);
            resolve(false);
        });
        
        req.setTimeout(10000, () => {
            console.log('   ‚è∞ –¢–∞–π–º–∞—É—Ç Firebase');
            req.destroy();
            resolve(false);
        });
    });
}

async function main() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É DNS –Ω–∞—Å—Ç—Ä–æ–µ–∫...\n');
    
    const dnsOk = await checkDNS();
    const cnameOk = await checkCNAME();
    const websiteOk = await checkWebsite();
    const firebaseOk = await checkFirebaseSite();
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:');
    console.log(`   DNS A –∑–∞–ø–∏—Å–∏: ${dnsOk ? '‚úÖ' : '‚ùå'}`);
    console.log(`   CNAME –∑–∞–ø–∏—Å—å: ${cnameOk ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: ${websiteOk ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Firebase —Å–∞–π—Ç: ${firebaseOk ? '‚úÖ' : '‚ùå'}`);
    
    if (dnsOk && cnameOk && websiteOk && firebaseOk) {
        console.log('\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –î–æ–º–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
        console.log(`üåê –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://${DOMAIN}`);
    } else {
        console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã.');
        console.log('üìñ –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ docs/VEDOS_DNS_SETUP.md');
        
        if (!dnsOk) {
            console.log('\nüîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è DNS:');
            console.log('1. –í–æ–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å Vedos');
            console.log('2. –ù–∞–π–¥–∏—Ç–µ –¥–æ–º–µ–Ω workclick.cz');
            console.log('3. –î–æ–±–∞–≤—å—Ç–µ A –∑–∞–ø–∏—Å–∏: 151.101.1.195, 151.101.65.195');
        }
        
        if (!cnameOk) {
            console.log('\nüîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CNAME:');
            console.log('1. –î–æ–±–∞–≤—å—Ç–µ CNAME –∑–∞–ø–∏—Å—å: www ‚Üí workclick-cz.web.app');
        }
        
        if (!websiteOk) {
            console.log('\n‚è∞ DNS –∑–∞–ø–∏—Å–∏ –µ—â–µ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–∏–ª–∏—Å—å');
            console.log('–ü–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ 60 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ DNS');
        }
    }
    
    console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: docs/VEDOS_DNS_SETUP.md');
    console.log('üìã –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç: FINAL_DOMAIN_SETUP_SUCCESS.md');
}

main().catch(console.error); 