/**
 * üöÄ Deploy Fixes - –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
 * –í–µ—Ä—Å–∏—è: 1.0.0
 * –î–∞—Ç–∞: 30.07.2025
 * 
 * –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

class DeployFixes {
    constructor() {
        this.projectRoot = process.cwd();
        this.deployLog = [];
    }

    log(message) {
        const timestamp = new Date().toISOString();
        const logMessage = `[${timestamp}] ${message}`;
        console.log(logMessage);
        this.deployLog.push(logMessage);
    }

    async run() {
        this.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º...');

        try {
            // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            await this.checkStatus();

            // –®–∞–≥ 2: –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
            await this.buildProject();

            // –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
            await this.testProject();

            // –®–∞–≥ 4: –î–µ–ø–ª–æ–π
            await this.deployProject();

            // –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è
            await this.verifyDeployment();

            this.log('‚úÖ –î–µ–ø–ª–æ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
            this.saveDeployLog();

        } catch (error) {
            this.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ: ${error.message}`);
            this.saveDeployLog();
            process.exit(1);
        }
    }

    async checkStatus() {
        this.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞...');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
        const criticalFiles = [
            'public/js/firebase-integration.js',
            'public/js/components/modern-ui.js',
            'public/css/tailwind-optimized.css',
            'public/js/utils/error-monitor.js',
            'public/auth/login.html',
            'public/index.html'
        ];

        for (const file of criticalFiles) {
            if (!fs.existsSync(path.join(this.projectRoot, file))) {
                throw new Error(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${file}`);
            }
        }

        this.log('‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º git —Å—Ç–∞—Ç—É—Å
        try {
            const gitStatus = execSync('git status --porcelain', { encoding: 'utf8' });
            if (gitStatus.trim()) {
                this.log('üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è');
                this.log(gitStatus);
            } else {
                this.log('‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —á–∏—Å—Ç–∞—è');
            }
        } catch (error) {
            this.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å git —Å—Ç–∞—Ç—É—Å');
        }
    }

    async buildProject() {
        this.log('üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...');

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json
            if (fs.existsSync(path.join(this.projectRoot, 'package.json'))) {
                this.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
                execSync('npm install', { stdio: 'inherit' });

                this.log('üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...');
                execSync('npm run build', { stdio: 'inherit' });
            } else {
                this.log('‚ö†Ô∏è package.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É');
            }
        } catch (error) {
            this.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ: ${error.message}`);
            // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç
        }
    }

    async testProject() {
        this.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å JavaScript —Ñ–∞–π–ª–æ–≤
        const jsFiles = [
            'public/js/firebase-integration.js',
            'public/js/components/modern-ui.js',
            'public/js/utils/error-monitor.js'
        ];

        for (const file of jsFiles) {
            try {
                const content = fs.readFileSync(path.join(this.projectRoot, file), 'utf8');
                // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
                new Function(content);
                this.log(`‚úÖ ${file} - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω`);
            } catch (error) {
                throw new Error(`–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ ${file}: ${error.message}`);
            }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML —Ñ–∞–π–ª—ã
        const htmlFiles = [
            'public/auth/login.html',
            'public/index.html'
        ];

        for (const file of htmlFiles) {
            try {
                const content = fs.readFileSync(path.join(this.projectRoot, file), 'utf8');
                if (!content.includes('<!DOCTYPE html>')) {
                    throw new Error(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π HTML –≤ ${file}`);
                }
                this.log(`‚úÖ ${file} - HTML –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω`);
            } catch (error) {
                throw new Error(`–û—à–∏–±–∫–∞ –≤ ${file}: ${error.message}`);
            }
        }
    }

    async deployProject() {
        this.log('üöÄ –î–µ–ø–ª–æ–π –ø—Ä–æ–µ–∫—Ç–∞...');

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ firebase.json
            if (fs.existsSync(path.join(this.projectRoot, 'firebase.json'))) {
                this.log('üî• –î–µ–ø–ª–æ–π –Ω–∞ Firebase Hosting...');
                execSync('firebase deploy --only hosting', { stdio: 'inherit' });
            } else {
                this.log('‚ö†Ô∏è firebase.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π');
            }
        } catch (error) {
            throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ: ${error.message}`);
        }
    }

    async verifyDeployment() {
        this.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–ª–æ—è...');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞
        try {
            const https = require('https');
            const url = 'https://workclick-cz.web.app';
            
            const response = await new Promise((resolve, reject) => {
                https.get(url, (res) => {
                    resolve(res.statusCode);
                }).on('error', reject);
            });

            if (response === 200) {
                this.log('‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è');
            } else {
                this.log(`‚ö†Ô∏è –°–∞–π—Ç –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å ${response}`);
            }
        } catch (error) {
            this.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞: ${error.message}`);
        }
    }

    saveDeployLog() {
        const logFile = path.join(this.projectRoot, 'deploy-log.json');
        const logData = {
            timestamp: new Date().toISOString(),
            log: this.deployLog,
            summary: {
                totalSteps: this.deployLog.length,
                success: this.deployLog.some(log => log.includes('‚úÖ')),
                errors: this.deployLog.filter(log => log.includes('‚ùå')).length,
                warnings: this.deployLog.filter(log => log.includes('‚ö†Ô∏è')).length
            }
        };

        fs.writeFileSync(logFile, JSON.stringify(logData, null, 2));
        this.log(`üìù –õ–æ–≥ –¥–µ–ø–ª–æ—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ${logFile}`);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    const deployer = new DeployFixes();
    deployer.run().catch(console.error);
}

module.exports = DeployFixes; 