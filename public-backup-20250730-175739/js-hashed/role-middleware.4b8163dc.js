// üõ°Ô∏è RoleMiddleware - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –∏ –¥–æ—Å—Ç—É–ø–æ–≤ (v8.0.1)
// –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Firebase Anonymous Auth –∏ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AppInitializer

class RoleMiddleware {
  constructor() {
    this.roleRoutes = {
      candidate: ['dashboard', 'profile', 'applications', 'saved-jobs'],
      client: ['employer-dashboard', 'post-job', 'applications', 'company'],
      agency: ['agency-dashboard', 'candidates', 'contracts', 'agency-profile'],
      admin: ['admin-dashboard', 'users', 'moderation', 'analytics']
    };
    
    this.publicPages = [
      '/', '/index.html', '/auth/confirm.html', '/test-demo-fix.html'
    ];
    
    this.isInitialized = false;
    this.currentRole = null;
    this.authManager = null;
    
    console.log('üõ°Ô∏è RoleMiddleware v8.0.1 —Å–æ–∑–¥–∞–Ω');
  }

  async init() {
    if (this.isInitialized) {
      console.log('üõ°Ô∏è RoleMiddleware —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return;
    }

    try {
      console.log('üõ°Ô∏è RoleMiddleware: –Ω–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
      
      // –ü–æ–ª—É—á–∞–µ–º AuthManager —á–µ—Ä–µ–∑ AppInitializer
      if (window.appInitializer) {
        this.authManager = window.appInitializer.getComponent('authManager');
        if (!this.authManager) {
          console.log('‚è≥ –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AuthManager...');
          this.authManager = await window.appInitializer.waitForComponent('authManager');
        }
      } else {
        // Fallback –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        this.authManager = window.authManager;
      }
      
      if (!this.authManager) {
        console.warn('‚ö†Ô∏è AuthManager –Ω–µ –Ω–∞–π–¥–µ–Ω, RoleMiddleware —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ');
      }
      
      this.isInitialized = true;
      console.log('üõ°Ô∏è RoleMiddleware v8.0.1 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–∞
      this.checkAccess();
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ RoleMiddleware:', error);
      throw error;
    }
  }

  async checkAccess() {
    if (!this.isInitialized) {
      console.log('‚è≥ RoleMiddleware –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É');
      setTimeout(() => this.checkAccess(), 500);
      return;
    }

    const currentPath = window.location.pathname;
    console.log(`üîç RoleMiddleware: –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è ${currentPath}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—É–±–ª–∏—á–Ω–æ–π
    if (this.isPublicPage(currentPath)) {
      console.log('üîç –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—É–±–ª–∏—á–Ω–∞—è, –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    const urlParams = new URLSearchParams(window.location.search);
    const isDemo = urlParams.get('demo') === 'true';
    const demoRole = urlParams.get('role');
    
    if (isDemo && demoRole) {
      console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é: ${demoRole}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏
      const allowedPages = this.roleRoutes[demoRole] || [];
      const currentPage = currentPath.replace('.html', '').replace('/', '');
      
      if (allowedPages.includes(currentPage) || currentPath.includes(demoRole)) {
        console.log(`‚úÖ –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${demoRole} –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ ${currentPath}`);
        this.updateUIForRole(demoRole);
        return;
      } else {
        console.log(`‚ùå –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${demoRole} –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ ${currentPath}`);
        this.redirectToMainPage();
        return;
      }
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const user = window.authManager?.getCurrentUser();
    const profile = window.authManager?.getCurrentProfile();
    
    if (!user) {
      console.log('üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
      this.handleUnauthenticatedUser();
      return;
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userRole = this.determineUserRole(user, profile);
    this.currentRole = userRole;
    
    console.log(`üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Ä–æ–ª—å: ${userRole}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    this.checkPageAccess(userRole);
  }

  determineUserRole(user, profile) {
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ Firestore > URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã > –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ email
    if (profile?.role) {
      return profile.role;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    const urlParams = new URLSearchParams(window.location.search);
    const urlRole = urlParams.get('role');
    if (urlRole && this.roleRoutes[urlRole]) {
      return urlRole;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ email (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    if (user.email) {
      if (user.email.includes('candidate')) return 'candidate';
      if (user.email.includes('client')) return 'client';
      if (user.email.includes('agency')) return 'agency';
      if (user.email.includes('admin')) return 'admin';
    }
    
    // –î–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ URL
    if (user.isAnonymous) {
      const currentPath = window.location.pathname;
      if (currentPath.includes('employer-dashboard')) return 'client';
      if (currentPath.includes('agency-dashboard')) return 'agency';
      if (currentPath.includes('admin-dashboard')) return 'admin';
      return 'candidate'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }
    
    return 'candidate'; // –†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }

  checkPageAccess(userRole) {
    const currentPath = window.location.pathname;
    const allowedRoutes = this.roleRoutes[userRole] || [];
    
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ä–æ–ª–∏ ${userRole}:`);
    console.log(`   –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${currentPath}`);
    console.log(`   –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:`, allowedRoutes);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø –∫ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const hasAccess = allowedRoutes.some(route => currentPath.includes(route)) ||
                     currentPath === '/' ||
                     currentPath === '/index.html';
    
    console.log(`üîç –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω: ${hasAccess}`);

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const isDemo = window.authManager?.isDemoUser() || 
                   new URLSearchParams(window.location.search).get('demo') === 'true';
    
    if (isDemo) {
      console.log('üîç –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –¥–æ—Å—Ç—É–ø–∞');
      
      // –î–ª—è –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –¥–∞—à–±–æ—Ä–¥–∞–º
      const demoAllowedPages = [
        '/dashboard.html', '/dashboard',
        '/employer-dashboard.html', '/employer-dashboard',
        '/agency-dashboard.html', '/agency-dashboard',
        '/admin-dashboard.html', '/admin-dashboard'
      ];

      if (demoAllowedPages.includes(currentPath)) {
        console.log('üîç –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–∞—à–±–æ—Ä–¥–∞');
        this.updateUIForRole(userRole);
        return;
      }

      // –ï—Å–ª–∏ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –Ω–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
      if (currentPath === '/' || currentPath === '/index.html') {
        console.log('üîç –î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –Ω–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º');
        return;
      }
    }

    if (!hasAccess) {
      console.log('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
      this.redirectToMainPage();
    } else {
      console.log('‚úÖ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω');
      this.updateUIForRole(userRole);
    }
  }

  isPublicPage(path) {
    return this.publicPages.some(publicPage => 
      path === publicPage || path.startsWith(publicPage)
    );
  }

  handleUnauthenticatedUser() {
    const currentPath = window.location.pathname;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º dev-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    const urlParams = new URLSearchParams(window.location.search);
    const isDev = urlParams.get('dev') === 'true';
    const devRole = urlParams.get('role');
    
    if (isDev && devRole) {
      console.log(`üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω dev-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é: ${devRole}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏
      const allowedPages = this.roleRoutes[devRole] || [];
      const currentPage = currentPath.replace('.html', '').replace('/', '');
      
      if (allowedPages.includes(currentPage) || currentPath.includes(devRole)) {
        console.log(`‚úÖ Dev-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${devRole} –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ ${currentPath}`);
        this.updateUIForRole(devRole);
        return;
      } else {
        console.log(`‚ùå Dev-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${devRole} –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ ${currentPath}`);
        this.redirectToMainPage();
        return;
      }
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –Ω–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
    if (this.isPublicPage(currentPath)) {
      console.log('üîç –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
      return;
    }
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
    this.redirectToMainPage();
  }

  redirectToMainPage() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ —É–∂–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    if (window.location.pathname === '/' || window.location.pathname === '/index.html') {
      console.log('üîç –£–∂–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
      return;
    }
    
    console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    window.location.href = '/';
  }

  updateUIForRole(role) {
    console.log(`üé® –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –¥–ª—è —Ä–æ–ª–∏: ${role}`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    window.currentUserRole = role;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã body –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
    document.body.classList.remove('role-candidate', 'role-client', 'role-agency', 'role-admin');
    document.body.classList.add(`role-${role}`);
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏
    const event = new CustomEvent('roleChanged', { detail: { role } });
    document.dispatchEvent(event);
    
    console.log(`‚úÖ UI –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ä–æ–ª–∏: ${role}`);
  }

  getCurrentRole() {
    return this.currentRole;
  }

  hasRole(role) {
    return this.currentRole === role;
  }

  isDemoUser() {
    return window.authManager?.isDemoUser() || 
           new URLSearchParams(window.location.search).get('demo') === 'true';
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  window.roleMiddleware = new RoleMiddleware();
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = RoleMiddleware;
} 