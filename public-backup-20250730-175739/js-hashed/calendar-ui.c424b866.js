/**
 * UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –≤–∏–¥–∞–º–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */

class CalendarUI {
    constructor(calendarSystem) {
        this.system = calendarSystem;
        this.currentView = 'month'; // month, week, day, list
        this.currentDate = new Date();
        this.selectedDate = new Date();
        this.isVisible = false;
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    init() {
        this.createCalendarUI();
        this.setupEventListeners();
        console.log('üìÖ UI –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    createCalendarUI() {
        // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        const modal = document.createElement('div');
        modal.id = 'calendarModal';
        modal.className = 'fixed inset-0 bg-black bg-opacity-50 hidden z-50';
        modal.innerHTML = `
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-lg p-6 max-w-7xl w-full max-h-screen overflow-y-auto">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-2xl font-bold text-gray-800 flex items-center">
                            <span class="mr-2">üìÖ</span>
                            –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π
                        </h3>
                        <button id="closeCalendarModal" class="text-gray-500 hover:text-gray-700">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                    
                    <!-- –ü–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ -->
                    <div class="flex items-center justify-between mb-6 bg-gray-50 rounded-lg p-4">
                        <div class="flex items-center space-x-4">
                            <button id="prevMonth" class="p-2 hover:bg-gray-200 rounded">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                                </svg>
                            </button>
                            <h4 id="currentMonth" class="text-lg font-semibold text-gray-800">–Ø–Ω–≤–∞—Ä—å 2024</h4>
                            <button id="nextMonth" class="p-2 hover:bg-gray-200 rounded">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                                </svg>
                            </button>
                            <button id="todayBtn" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                                –°–µ–≥–æ–¥–Ω—è
                            </button>
                        </div>
                        
                        <div class="flex items-center space-x-4">
                            <div class="flex bg-gray-200 rounded-lg p-1">
                                <button id="monthView" class="px-3 py-1 rounded bg-white shadow text-sm">–ú–µ—Å—è—Ü</button>
                                <button id="weekView" class="px-3 py-1 rounded text-sm hover:bg-gray-100">–ù–µ–¥–µ–ª—è</button>
                                <button id="dayView" class="px-3 py-1 rounded text-sm hover:bg-gray-100">–î–µ–Ω—å</button>
                                <button id="listView" class="px-3 py-1 rounded text-sm hover:bg-gray-100">–°–ø–∏—Å–æ–∫</button>
                            </div>
                            <button id="addEventBtn" class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700">
                                + –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ
                            </button>
                        </div>
                    </div>
                    
                    <!-- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è -->
                    <div id="calendarContent" class="bg-white rounded-lg border">
                        <!-- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                    </div>
                </div>
            </div>
        `;

        document.body.appendChild(modal);

        // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
        const eventModal = document.createElement('div');
        eventModal.id = 'eventModal';
        eventModal.className = 'fixed inset-0 bg-black bg-opacity-50 hidden z-50';
        eventModal.innerHTML = `
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-lg p-6 max-w-md w-full">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-xl font-bold text-gray-800">–î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ</h3>
                        <button id="closeEventModal" class="text-gray-500 hover:text-gray-700">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                    
                    <form id="eventForm" class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è</label>
                            <input type="text" id="eventTitle" class="w-full border border-gray-300 rounded px-3 py-2" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–û–ø–∏—Å–∞–Ω–∏–µ</label>
                            <textarea id="eventDescription" class="w-full border border-gray-300 rounded px-3 py-2" rows="3"></textarea>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                            <select id="eventCategory" class="w-full border border-gray-300 rounded px-3 py-2">
                                <option value="personal">–õ–∏—á–Ω–æ–µ</option>
                                <option value="interview">–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ</option>
                                <option value="meeting">–í—Å—Ç—Ä–µ—á–∞</option>
                                <option value="deadline">–î–µ–¥–ª–∞–π–Ω</option>
                                <option value="test">–¢–µ—Å—Ç–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ</option>
                                <option value="start_date">–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã</option>
                                <option value="holiday">–ü—Ä–∞–∑–¥–Ω–∏–∫</option>
                                <option value="platform_event">–°–æ–±—ã—Ç–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</option>
                            </select>
                        </div>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ù–∞—á–∞–ª–æ</label>
                                <input type="datetime-local" id="eventStart" class="w-full border border-gray-300 rounded px-3 py-2" required>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–û–∫–æ–Ω—á–∞–Ω–∏–µ</label>
                                <input type="datetime-local" id="eventEnd" class="w-full border border-gray-300 rounded px-3 py-2" required>
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</label>
                            <input type="text" id="eventLocation" class="w-full border border-gray-300 rounded px-3 py-2">
                        </div>
                        
                        <div class="flex items-center">
                            <input type="checkbox" id="eventAllDay" class="mr-2">
                            <label for="eventAllDay" class="text-sm text-gray-700">–í–µ—Å—å –¥–µ–Ω—å</label>
                        </div>
                        
                        <div class="flex space-x-3">
                            <button type="button" id="cancelEvent" class="flex-1 px-4 py-2 text-gray-600 border border-gray-300 rounded hover:bg-gray-50">
                                –û—Ç–º–µ–Ω–∞
                            </button>
                            <button type="submit" id="saveEvent" class="flex-1 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        `;

        document.body.appendChild(eventModal);
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.addEventListener('click', (e) => {
            if (e.target.id === 'closeCalendarModal') {
                this.hideModal();
            }
            if (e.target.id === 'closeEventModal') {
                this.hideEventModal();
            }
            if (e.target.id === 'cancelEvent') {
                this.hideEventModal();
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.addEventListener('click', (e) => {
            const modal = document.getElementById('calendarModal');
            if (e.target === modal) {
                this.hideModal();
            }
            
            const eventModal = document.getElementById('eventModal');
            if (e.target === eventModal) {
                this.hideEventModal();
            }
        });

        // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—é
        document.addEventListener('click', (e) => {
            if (e.target.id === 'prevMonth') {
                this.previousMonth();
            }
            if (e.target.id === 'nextMonth') {
                this.nextMonth();
            }
            if (e.target.id === 'todayBtn') {
                this.goToToday();
            }
        });

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–æ–≤
        document.addEventListener('click', (e) => {
            if (e.target.id === 'monthView') {
                this.switchView('month');
            }
            if (e.target.id === 'weekView') {
                this.switchView('week');
            }
            if (e.target.id === 'dayView') {
                this.switchView('day');
            }
            if (e.target.id === 'listView') {
                this.switchView('list');
            }
        });

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        document.addEventListener('click', (e) => {
            if (e.target.id === 'addEventBtn') {
                this.showEventModal();
            }
        });

        // –§–æ—Ä–º–∞ —Å–æ–±—ã—Ç–∏—è
        document.addEventListener('submit', (e) => {
            if (e.target.id === 'eventForm') {
                e.preventDefault();
                this.handleAddEvent();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ "–≤–µ—Å—å –¥–µ–Ω—å"
        document.addEventListener('change', (e) => {
            if (e.target.id === 'eventAllDay') {
                this.toggleAllDay();
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    showModal() {
        const modal = document.getElementById('calendarModal');
        if (modal) {
            modal.classList.remove('hidden');
            this.isVisible = true;
            this.loadCalendar();
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    hideModal() {
        const modal = document.getElementById('calendarModal');
        if (modal) {
            modal.classList.add('hidden');
            this.isVisible = false;
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–±—ã—Ç–∏—è
     */
    showEventModal() {
        const modal = document.getElementById('eventModal');
        if (modal) {
            modal.classList.remove('hidden');
            this.initializeEventForm();
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–±—ã—Ç–∏—è
     */
    hideEventModal() {
        const modal = document.getElementById('eventModal');
        if (modal) {
            modal.classList.add('hidden');
            this.resetEventForm();
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã —Å–æ–±—ã—Ç–∏—è
     */
    initializeEventForm() {
        const now = new Date();
        const startTime = new Date(now.getTime() + 60 * 60 * 1000); // —á–µ—Ä–µ–∑ —á–∞—Å
        const endTime = new Date(now.getTime() + 2 * 60 * 60 * 1000); // —á–µ—Ä–µ–∑ 2 —á–∞—Å–∞

        document.getElementById('eventStart').value = this.formatDateTimeLocal(startTime);
        document.getElementById('eventEnd').value = this.formatDateTimeLocal(endTime);
    }

    /**
     * –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã —Å–æ–±—ã—Ç–∏—è
     */
    resetEventForm() {
        document.getElementById('eventForm').reset();
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è datetime-local
     */
    formatDateTimeLocal(date) {
        return date.toISOString().slice(0, 16);
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ "–≤–µ—Å—å –¥–µ–Ω—å"
     */
    toggleAllDay() {
        const isAllDay = document.getElementById('eventAllDay').checked;
        const startInput = document.getElementById('eventStart');
        const endInput = document.getElementById('eventEnd');

        if (isAllDay) {
            startInput.type = 'date';
            endInput.type = 'date';
        } else {
            startInput.type = 'datetime-local';
            endInput.type = 'datetime-local';
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    loadCalendar() {
        this.updateCurrentMonthDisplay();
        this.renderCalendar();
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
     */
    updateCurrentMonthDisplay() {
        const monthNames = [
            '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
            '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
        ];

        const monthName = monthNames[this.currentDate.getMonth()];
        const year = this.currentDate.getFullYear();
        
        document.getElementById('currentMonth').textContent = `${monthName} ${year}`;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    renderCalendar() {
        const container = document.getElementById('calendarContent');
        if (!container) return;

        switch (this.currentView) {
            case 'month':
                container.innerHTML = this.renderMonthView();
                break;
            case 'week':
                container.innerHTML = this.renderWeekView();
                break;
            case 'day':
                container.innerHTML = this.renderDayView();
                break;
            case 'list':
                container.innerHTML = this.renderListView();
                break;
        }

        this.setupCalendarEventListeners();
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–µ—Å—è—á–Ω–æ–≥–æ –≤–∏–¥–∞
     */
    renderMonthView() {
        const year = this.currentDate.getFullYear();
        const month = this.currentDate.getMonth();
        
        const firstDay = new Date(year, month, 1);
        const lastDay = new Date(year, month + 1, 0);
        const startDate = new Date(firstDay);
        startDate.setDate(startDate.getDate() - firstDay.getDay());

        let html = `
            <div class="grid grid-cols-7 gap-px bg-gray-200">
                <div class="bg-gray-100 p-2 text-center text-sm font-medium text-gray-700">–í—Å</div>
                <div class="bg-gray-100 p-2 text-center text-sm font-medium text-gray-700">–ü–Ω</div>
                <div class="bg-gray-100 p-2 text-center text-sm font-medium text-gray-700">–í—Ç</div>
                <div class="bg-gray-100 p-2 text-center text-sm font-medium text-gray-700">–°—Ä</div>
                <div class="bg-gray-100 p-2 text-center text-sm font-medium text-gray-700">–ß—Ç</div>
                <div class="bg-gray-100 p-2 text-center text-sm font-medium text-gray-700">–ü—Ç</div>
                <div class="bg-gray-100 p-2 text-center text-sm font-medium text-gray-700">–°–±</div>
        `;

        for (let i = 0; i < 42; i++) {
            const date = new Date(startDate);
            date.setDate(startDate.getDate() + i);
            
            const isCurrentMonth = date.getMonth() === month;
            const isToday = this.isToday(date);
            const isSelected = this.isSelectedDate(date);
            
            const events = this.system.getEventsForDay(date);
            
            let dayClass = 'bg-white p-2 min-h-24';
            if (!isCurrentMonth) dayClass += ' text-gray-400';
            if (isToday) dayClass += ' bg-blue-50';
            if (isSelected) dayClass += ' ring-2 ring-blue-500';

            html += `<div class="${dayClass}" data-date="${date.toISOString().split('T')[0]}">`;
            html += `<div class="text-sm font-medium mb-1">${date.getDate()}</div>`;
            
            // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
            events.slice(0, 3).forEach(event => {
                const category = this.system.eventCategories.get(event.category);
                const color = category ? category.color : '#6b7280';
                
                html += `
                    <div class="text-xs p-1 mb-1 rounded truncate cursor-pointer hover:opacity-75" 
                         style="background-color: ${color}; color: white;"
                         data-event-id="${event.id}">
                        ${event.title}
                    </div>
                `;
            });
            
            if (events.length > 3) {
                html += `<div class="text-xs text-gray-500">+${events.length - 3} –µ—â–µ</div>`;
            }
            
            html += '</div>';
        }

        html += '</div>';
        return html;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –≤–∏–¥–∞
     */
    renderWeekView() {
        const weekStart = this.system.getStartOfWeek(this.currentDate);
        const events = this.system.getEventsForWeek(this.currentDate);

        let html = `
            <div class="grid grid-cols-8 gap-px bg-gray-200">
                <div class="bg-gray-100 p-2 text-center text-sm font-medium text-gray-700">–í—Ä–µ–º—è</div>
        `;

        // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
        for (let i = 0; i < 7; i++) {
            const date = new Date(weekStart);
            date.setDate(weekStart.getDate() + i);
            
            const isToday = this.isToday(date);
            const dayClass = isToday ? 'bg-blue-50' : 'bg-gray-100';
            
            html += `
                <div class="${dayClass} p-2 text-center">
                    <div class="text-sm font-medium">${this.getDayName(date)}</div>
                    <div class="text-lg font-bold">${date.getDate()}</div>
                </div>
            `;
        }

        // –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
        for (let hour = 8; hour <= 20; hour++) {
            html += `<div class="bg-gray-100 p-2 text-xs text-gray-500 text-right">${hour}:00</div>`;
            
            for (let day = 0; day < 7; day++) {
                const date = new Date(weekStart);
                date.setDate(weekStart.getDate() + day);
                date.setHours(hour, 0, 0, 0);
                
                const dayEvents = events.filter(event => {
                    const eventDate = new Date(event.startDate);
                    return eventDate.getDate() === date.getDate() && 
                           eventDate.getHours() === hour;
                });

                html += `<div class="bg-white p-1 min-h-12 relative">`;
                
                dayEvents.forEach(event => {
                    const category = this.system.eventCategories.get(event.category);
                    const color = category ? category.color : '#6b7280';
                    
                    html += `
                        <div class="text-xs p-1 mb-1 rounded cursor-pointer hover:opacity-75" 
                             style="background-color: ${color}; color: white;"
                             data-event-id="${event.id}">
                            ${event.title}
                        </div>
                    `;
                });
                
                html += '</div>';
            }
        }

        html += '</div>';
        return html;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–Ω–µ–≤–Ω–æ–≥–æ –≤–∏–¥–∞
     */
    renderDayView() {
        const events = this.system.getEventsForDay(this.selectedDate);
        const dateStr = this.selectedDate.toLocaleDateString('ru-RU', {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });

        let html = `
            <div class="p-4">
                <h4 class="text-lg font-semibold mb-4">${dateStr}</h4>
                <div class="space-y-2">
        `;

        if (events.length === 0) {
            html += `
                <div class="text-center text-gray-500 py-8">
                    <div class="text-4xl mb-4">üìÖ</div>
                    <p>–ù–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å —Å–æ–±—ã—Ç–∏–π –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</p>
                </div>
            `;
        } else {
            events.forEach(event => {
                const category = this.system.eventCategories.get(event.category);
                const color = category ? category.color : '#6b7280';
                const startTime = new Date(event.startDate).toLocaleTimeString('ru-RU', {
                    hour: '2-digit',
                    minute: '2-digit'
                });
                const endTime = new Date(event.endDate).toLocaleTimeString('ru-RU', {
                    hour: '2-digit',
                    minute: '2-digit'
                });

                html += `
                    <div class="border rounded-lg p-4 hover:bg-gray-50 cursor-pointer" data-event-id="${event.id}">
                        <div class="flex items-center justify-between mb-2">
                            <div class="flex items-center space-x-2">
                                <div class="w-3 h-3 rounded-full" style="background-color: ${color}"></div>
                                <h5 class="font-medium">${event.title}</h5>
                            </div>
                            <span class="text-sm text-gray-500">${startTime} - ${endTime}</span>
                        </div>
                        ${event.description ? `<p class="text-sm text-gray-600 mb-2">${event.description}</p>` : ''}
                        ${event.location ? `<p class="text-sm text-gray-500">üìç ${event.location}</p>` : ''}
                    </div>
                `;
            });
        }

        html += `
                </div>
            </div>
        `;

        return html;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π
     */
    renderListView() {
        const events = Array.from(this.system.events.values())
            .sort((a, b) => a.startDate - b.startDate);

        let html = `
            <div class="p-4">
                <h4 class="text-lg font-semibold mb-4">–í—Å–µ —Å–æ–±—ã—Ç–∏—è</h4>
                <div class="space-y-2">
        `;

        if (events.length === 0) {
            html += `
                <div class="text-center text-gray-500 py-8">
                    <div class="text-4xl mb-4">üìÖ</div>
                    <p>–°–æ–±—ã—Ç–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                </div>
            `;
        } else {
            events.forEach(event => {
                const category = this.system.eventCategories.get(event.category);
                const color = category ? category.color : '#6b7280';
                const date = new Date(event.startDate);
                const dateStr = date.toLocaleDateString('ru-RU');
                const timeStr = date.toLocaleTimeString('ru-RU', {
                    hour: '2-digit',
                    minute: '2-digit'
                });

                html += `
                    <div class="border rounded-lg p-4 hover:bg-gray-50 cursor-pointer" data-event-id="${event.id}">
                        <div class="flex items-center justify-between mb-2">
                            <div class="flex items-center space-x-2">
                                <div class="w-3 h-3 rounded-full" style="background-color: ${color}"></div>
                                <h5 class="font-medium">${event.title}</h5>
                            </div>
                            <span class="text-sm text-gray-500">${dateStr} ${timeStr}</span>
                        </div>
                        ${event.description ? `<p class="text-sm text-gray-600 mb-2">${event.description}</p>` : ''}
                        ${event.location ? `<p class="text-sm text-gray-500">üìç ${event.location}</p>` : ''}
                    </div>
                `;
            });
        }

        html += `
                </div>
            </div>
        `;

        return html;
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    setupCalendarEventListeners() {
        // –ö–ª–∏–∫–∏ –ø–æ –¥–Ω—è–º –≤ –º–µ—Å—è—á–Ω–æ–º –≤–∏–¥–µ
        document.querySelectorAll('[data-date]').forEach(day => {
            day.addEventListener('click', (e) => {
                const dateStr = e.currentTarget.dataset.date;
                this.selectedDate = new Date(dateStr);
                this.switchView('day');
            });
        });

        // –ö–ª–∏–∫–∏ –ø–æ —Å–æ–±—ã—Ç–∏—è–º
        document.querySelectorAll('[data-event-id]').forEach(event => {
            event.addEventListener('click', (e) => {
                const eventId = e.currentTarget.dataset.eventId;
                this.showEventDetails(eventId);
            });
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏—è
     */
    showEventDetails(eventId) {
        const event = this.system.events.get(eventId);
        if (!event) return;

        const category = this.system.eventCategories.get(event.category);
        const startDate = new Date(event.startDate);
        const endDate = new Date(event.endDate);

        const details = `
            <div class="p-4">
                <h4 class="text-lg font-semibold mb-4">${event.title}</h4>
                <div class="space-y-3">
                    <div>
                        <label class="text-sm font-medium text-gray-700">–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:</label>
                        <p class="text-sm text-gray-600">
                            ${startDate.toLocaleDateString('ru-RU')} ${startDate.toLocaleTimeString('ru-RU')} - 
                            ${endDate.toLocaleTimeString('ru-RU')}
                        </p>
                    </div>
                    ${event.description ? `
                        <div>
                            <label class="text-sm font-medium text-gray-700">–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                            <p class="text-sm text-gray-600">${event.description}</p>
                        </div>
                    ` : ''}
                    ${event.location ? `
                        <div>
                            <label class="text-sm font-medium text-gray-700">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</label>
                            <p class="text-sm text-gray-600">${event.location}</p>
                        </div>
                    ` : ''}
                    <div>
                        <label class="text-sm font-medium text-gray-700">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
                        <p class="text-sm text-gray-600">${category ? category.name : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</p>
                    </div>
                </div>
                <div class="mt-4 flex space-x-2">
                    <button class="px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700">
                        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class="px-3 py-1 bg-red-600 text-white rounded text-sm hover:bg-red-700">
                        –£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            </div>
        `;

        // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—è–º–∏
        alert(details);
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
     */
    handleAddEvent() {
        const title = document.getElementById('eventTitle').value;
        const description = document.getElementById('eventDescription').value;
        const category = document.getElementById('eventCategory').value;
        const startDate = document.getElementById('eventStart').value;
        const endDate = document.getElementById('eventEnd').value;
        const location = document.getElementById('eventLocation').value;
        const isAllDay = document.getElementById('eventAllDay').checked;

        if (!title || !startDate || !endDate) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }

        const eventData = {
            title: title,
            description: description,
            category: category,
            startDate: new Date(startDate),
            endDate: new Date(endDate),
            location: location,
            isAllDay: isAllDay
        };

        this.system.createEvent(eventData);
        this.hideEventModal();
        this.renderCalendar();
        this.showSuccessMessage('–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ');
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    switchView(view) {
        this.currentView = view;
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
        document.querySelectorAll('#monthView, #weekView, #dayView, #listView').forEach(btn => {
            btn.classList.remove('bg-white', 'shadow');
            btn.classList.add('hover:bg-gray-100');
        });
        
        document.getElementById(view + 'View').classList.add('bg-white', 'shadow');
        document.getElementById(view + 'View').classList.remove('hover:bg-gray-100');
        
        this.renderCalendar();
    }

    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ—Å—è—Ü—É
     */
    previousMonth() {
        this.currentDate.setMonth(this.currentDate.getMonth() - 1);
        this.loadCalendar();
    }

    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–µ—Å—è—Ü—É
     */
    nextMonth() {
        this.currentDate.setMonth(this.currentDate.getMonth() + 1);
        this.loadCalendar();
    }

    /**
     * –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–º—É –¥–Ω—é
     */
    goToToday() {
        this.currentDate = new Date();
        this.selectedDate = new Date();
        this.loadCalendar();
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π
     */
    isToday(date) {
        const today = new Date();
        return date.getDate() === today.getDate() &&
               date.getMonth() === today.getMonth() &&
               date.getFullYear() === today.getFullYear();
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π
     */
    isSelectedDate(date) {
        return date.getDate() === this.selectedDate.getDate() &&
               date.getMonth() === this.selectedDate.getMonth() &&
               date.getFullYear() === this.selectedDate.getFullYear();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏
     */
    getDayName(date) {
        const days = ['–í—Å', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];
        return days[date.getDay()];
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
     */
    showSuccessMessage(message) {
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform transition-all duration-300 translate-x-full';
        toast.textContent = message;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.classList.remove('translate-x-full');
        }, 100);
        
        setTimeout(() => {
            toast.classList.add('translate-x-full');
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        }, 3000);
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
     */
    createCalendarButton() {
        const button = document.createElement('button');
        button.id = 'openCalendarModal';
        button.className = 'fixed bottom-4 right-32 bg-green-600 text-white p-3 rounded-full shadow-lg hover:bg-green-700 transition-colors z-50';
        button.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
        `;
        button.title = '–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π';

        button.addEventListener('click', () => {
            this.showModal();
        });

        document.body.appendChild(button);
    }

    /**
     * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
     */
    integrateWithMainPage() {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        const nav = document.querySelector('nav') || document.querySelector('.navbar');
        if (nav) {
            const calendarNavItem = document.createElement('div');
            calendarNavItem.className = 'flex items-center space-x-2';
            calendarNavItem.innerHTML = `
                <button id="navCalendar" class="text-gray-600 hover:text-green-500 transition-colors flex items-center space-x-1">
                    <span>üìÖ</span>
                    <span class="hidden md:inline">–ö–∞–ª–µ–Ω–¥–∞—Ä—å</span>
                </button>
            `;
            
            nav.appendChild(calendarNavItem);
            
            document.getElementById('navCalendar').addEventListener('click', () => {
                this.showModal();
            });
        }

        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É
        this.createCalendarButton();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ UI
     */
    getStats() {
        return {
            isVisible: this.isVisible,
            currentView: this.currentView,
            currentDate: this.currentDate,
            selectedDate: this.selectedDate,
            systemStats: this.system.getCalendarStats()
        };
    }

    /**
     * –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
     */
    enableTestMode() {
        console.log('üß™ –í–∫–ª—é—á–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º UI –∫–∞–ª–µ–Ω–¥–∞—Ä—è');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.showModal();
        
        return {
            stats: this.getStats(),
            systemStats: this.system.getCalendarStats()
        };
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.CalendarUI = CalendarUI; 