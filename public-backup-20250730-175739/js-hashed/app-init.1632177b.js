// üöÄ App Initialization - –µ–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ (v1.0.0)
// –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ race conditions

class AppInitializer {
  constructor() {
    this.isInitialized = false;
    this.initPromise = null;
    this.components = new Map();
    this.eventBus = new Map();
    
    console.log('üöÄ AppInitializer v1.0.0 —Å–æ–∑–¥–∞–Ω');
  }

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  register(name, component, dependencies = []) {
    this.components.set(name, { component, dependencies, ready: false });
    console.log(`üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${name}`);
  }

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
  on(event, callback) {
    if (!this.eventBus.has(event)) {
      this.eventBus.set(event, []);
    }
    this.eventBus.get(event).push(callback);
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è
  emit(event, data) {
    if (this.eventBus.has(event)) {
      this.eventBus.get(event).forEach(callback => {
        try {
          callback(data);
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–æ–±—ã—Ç–∏—è ${event}:`, error);
        }
      });
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  async initComponent(name) {
    const component = this.components.get(name);
    if (!component || component.ready) {
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    for (const dep of component.dependencies) {
      const depComponent = this.components.get(dep);
      if (!depComponent || !depComponent.ready) {
        console.log(`‚è≥ –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ ${dep} –¥–ª—è ${name}`);
        await this.waitForComponent(dep);
      }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    try {
      console.log(`üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞: ${name}`);
      if (typeof component.component.init === 'function') {
        await component.component.init();
      }
      component.ready = true;
      this.emit('component:ready', { name, component: component.component });
      console.log(`‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ${name} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ${name}:`, error);
      throw error;
    }
  }

  // –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  waitForComponent(name, timeout = 10000) {
    return new Promise((resolve, reject) => {
      const startTime = Date.now();
      
      const check = () => {
        const component = this.components.get(name);
        if (component && component.ready) {
          resolve(component.component);
          return;
        }
        
        if (Date.now() - startTime > timeout) {
          reject(new Error(`–¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ${name}`));
          return;
        }
        
        setTimeout(check, 100);
      };
      
      check();
    });
  }

  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  async init() {
    if (this.isInitialized) {
      console.log('üöÄ AppInitializer —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return;
    }

    if (this.initPromise) {
      return this.initPromise;
    }

    this.initPromise = this._init();
    return this.initPromise;
  }

  async _init() {
    try {
      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
      
      // –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      await this.clearCache();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
      const initOrder = [
        'firebase',
        'authManager', 
        'roleMiddleware',
        'demoLoginSystem',
        'devLogin',
        'jobsManager'
      ];

      for (const componentName of initOrder) {
        if (this.components.has(componentName)) {
          await this.initComponent(componentName);
        }
      }

      this.isInitialized = true;
      this.emit('app:ready');
      console.log('üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
      this.emit('app:error', error);
      throw error;
    }
  }

  // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
  async clearCache() {
    try {
      // –û—á–∏—â–∞–µ–º Service Worker –∫—ç—à
      if ('caches' in window) {
        const cacheNames = await caches.keys();
        await Promise.all(
          cacheNames.map(name => caches.delete(name))
        );
        console.log('üßπ Service Worker –∫—ç—à –æ—á–∏—â–µ–Ω');
      }

      // –û—á–∏—â–∞–µ–º localStorage –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.get('clear-cache') === 'true') {
        localStorage.removeItem('demoAuth');
        console.log('üßπ localStorage –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω');
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à:', error);
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  getComponent(name) {
    const component = this.components.get(name);
    return component ? component.component : null;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  isComponentReady(name) {
    const component = this.components.get(name);
    return component ? component.ready : false;
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.appInitializer = new AppInitializer();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = AppInitializer;
} 