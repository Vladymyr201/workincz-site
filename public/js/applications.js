// üìù –ú–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∫–ª–∏–∫–∞–º–∏ WorkInCZ
class ApplicationsManager {
  constructor() {
    this.db = null;
    this.auth = null;
    this.currentUser = null;
    this.applicationsCache = new Map();
    this.limits = {
      basic: {
        applicationsPerMonth: 5,
        autoApply: false,
        priority: false
      },
      vip: {
        applicationsPerMonth: Infinity,
        autoApply: true,
        priority: true
      },
      premium: {
        applicationsPerMonth: Infinity,
        autoApply: true,
        priority: true
      }
    };
    
    this.init();
  }

  async init() {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ AuthManager
    if (window.authManager) {
      await window.authManager.waitForReady();
      this.db = window.authManager.db;
      this.auth = window.authManager.auth;
      
      console.log('üî• ApplicationsManager –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ AuthManager');
      
      // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ AuthManager
      this.unsubscribeAuth = window.authManager.subscribe((user) => {
        this.currentUser = user;
        if (user) {
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ AuthManager
          this.currentUser.userData = window.authManager.getUserData(user.uid);
          this.loadUserApplications();
          this.setupAutoApply();
        }
      });
    }
    
    this.setupEventListeners();
    this.createApplicationModal();
  }

  setupEventListeners() {
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤
    document.addEventListener('click', async (e) => {
      if (e.target.matches('.apply-btn, .apply-btn *')) {
        e.preventDefault();
        const btn = e.target.closest('.apply-btn');
        const jobId = btn.dataset.jobId;
        
        if (jobId) {
          await this.initiateApplication(jobId);
        }
      }

      if (e.target.matches('#quick-apply-btn')) {
        await this.submitQuickApplication();
      }

      if (e.target.matches('#detailed-apply-btn')) {
        await this.submitDetailedApplication();
      }

      if (e.target.matches('#enable-auto-apply')) {
        await this.enableAutoApply();
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–æ–≤
    document.addEventListener('change', (e) => {
      if (e.target.matches('.auto-apply-filter')) {
        this.updateAutoApplyFilters();
      }
    });
  }

  createApplicationModal() {
    const modal = document.createElement('div');
    modal.id = 'applicationModal';
    modal.className = 'fixed inset-0 bg-black/50 flex items-center justify-center hidden z-50 p-4';
    modal.innerHTML = `
      <div class="bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        <div class="p-6">
          <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold">–û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é</h2>
            <button id="close-application-modal" class="text-gray-400 hover:text-gray-600">
              <i class="ri-close-line text-2xl"></i>
            </button>
          </div>

          <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞–∫–∞–Ω—Å–∏–∏ -->
          <div id="job-info" class="bg-gray-50 rounded-lg p-4 mb-6">
            <h3 id="job-title" class="font-semibold text-lg mb-2"></h3>
            <p id="job-company" class="text-gray-600 mb-2"></p>
            <div class="flex items-center text-sm text-gray-500">
              <i class="ri-map-pin-line mr-1"></i>
              <span id="job-location"></span>
              <span class="mx-2">‚Ä¢</span>
              <i class="ri-money-czech-koruna-circle-line mr-1"></i>
              <span id="job-salary"></span>
            </div>
          </div>

          <!-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ -->
          <div id="application-limits" class="mb-6">
            <div class="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
              <div>
                <h4 class="font-medium text-blue-900">–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏</h4>
                <p id="subscription-status" class="text-sm text-blue-700"></p>
              </div>
              <div class="text-right">
                <div id="applications-left" class="font-bold text-blue-900"></div>
                <div class="text-xs text-blue-600">–æ—Ç–∫–ª–∏–∫–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å</div>
              </div>
            </div>
          </div>

          <!-- –ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫ -->
          <div id="quick-apply-section" class="mb-6">
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-lg font-medium">–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫</h3>
              <span class="text-sm text-gray-500">–ó–∞ 1 –∫–ª–∏–∫</span>
            </div>
            <p class="text-gray-600 mb-4">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π</p>
            <button id="quick-apply-btn" class="w-full bg-primary text-white py-3 rounded-lg font-medium hover:bg-primary/90 flex items-center justify-center gap-2">
              <i class="ri-send-plane-line"></i>
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫
            </button>
          </div>

          <!-- –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∫–ª–∏–∫ -->
          <div id="detailed-apply-section">
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-lg font-medium">–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∫–ª–∏–∫</h3>
              <span class="text-sm text-gray-500">–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è</span>
            </div>
            
            <div class="space-y-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">–°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ</label>
                <textarea id="cover-letter" rows="4" class="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-primary/20 focus:border-primary" placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ—á–µ–º—É –≤—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –¥–ª—è —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏..."></textarea>
                <div class="text-xs text-gray-500 mt-1">–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 150-300 —Å–∏–º–≤–æ–ª–æ–≤</div>
              </div>

              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã</label>
                <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
                  <i class="ri-upload-2-line text-3xl text-gray-400 mb-2"></i>
                  <p class="text-gray-500 mb-2">–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–∑—é–º–µ, –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã</p>
                  <input type="file" id="application-files" multiple accept=".pdf,.doc,.docx,.jpg,.png" class="hidden">
                  <button type="button" onclick="document.getElementById('application-files').click()" class="text-primary hover:underline">
                    –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                  </button>
                </div>
                <div id="uploaded-files" class="mt-2 space-y-1"></div>
              </div>

              <div class="flex items-center">
                <input type="checkbox" id="notify-response" class="mr-2" checked>
                <label for="notify-response" class="text-sm text-gray-700">–£–≤–µ–¥–æ–º–∏—Ç—å –æ–± –æ—Ç–≤–µ—Ç–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è</label>
              </div>

              <button id="detailed-apply-btn" class="w-full bg-primary text-white py-3 rounded-lg font-medium hover:bg-primary/90 flex items-center justify-center gap-2">
                <i class="ri-send-plane-line"></i>
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∫–ª–∏–∫
              </button>
            </div>
          </div>

          <!-- VIP —Ñ—É–Ω–∫—Ü–∏–∏ -->
          <div id="vip-features" class="mt-6 p-4 bg-gradient-to-r from-primary/5 to-secondary/5 rounded-lg border border-primary/20 hidden">
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-lg font-medium text-primary">
                <i class="ri-vip-crown-line mr-2"></i>
                VIP –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
              </h3>
              <span class="text-xs bg-primary text-white px-2 py-1 rounded-full">–≠–ö–°–ö–õ–Æ–ó–ò–í</span>
            </div>
            
            <div class="space-y-3">
              <div class="flex items-center">
                <input type="checkbox" id="priority-application" class="mr-2">
                <label for="priority-application" class="text-sm">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –æ—Ç–∫–ª–∏–∫ (–ø–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–º)</label>
              </div>
              
              <div class="flex items-center">
                <input type="checkbox" id="auto-follow-up" class="mr-2">
                <label for="auto-follow-up" class="text-sm">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 3 –¥–Ω—è</label>
              </div>
              
              <div class="flex items-center">
                <input type="checkbox" id="read-receipt" class="mr-2">
                <label for="read-receipt" class="text-sm">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ—á—Ç–µ–Ω–∏–∏</label>
              </div>
            </div>

            <div class="mt-4 p-3 bg-white rounded border">
              <h4 class="font-medium mb-2">–ê–≤—Ç–æ–æ—Ç–∫–ª–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</h4>
              <p class="text-sm text-gray-600 mb-2">–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è –Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏</p>
              <button id="configure-auto-apply" class="text-primary hover:underline text-sm">
                –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–æ–≤
              </button>
            </div>
          </div>

          <!-- Upgrade –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ -->
          <div id="upgrade-offer" class="mt-6 p-4 bg-gradient-to-r from-primary/10 to-secondary/10 rounded-lg border border-primary/30">
            <div class="text-center">
              <i class="ri-vip-crown-line text-3xl text-primary mb-2"></i>
              <h3 class="font-bold text-lg mb-2">–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –æ—Ç–∫–ª–∏–∫–æ–≤</h3>
              <p class="text-gray-600 mb-4">–ü–æ–ª—É—á–∏—Ç–µ VIP –ø–æ–¥–ø–∏—Å–∫—É –∏ –æ—Ç–∫–ª–∏–∫–∞–π—Ç–µ—Å—å –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π</p>
              <button id="upgrade-to-vip" class="bg-primary text-white px-6 py-2 rounded-lg font-medium hover:bg-primary/90">
                –ü–æ–ª—É—á–∏—Ç—å VIP –∑–∞ 1 Kƒç
              </button>
            </div>
          </div>
        </div>
      </div>
    `;

    document.body.appendChild(modal);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.getElementById('close-application-modal').onclick = () => {
      this.closeApplicationModal();
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    document.getElementById('application-files').onchange = (e) => {
      this.handleFileUpload(e.target.files);
    };
  }

  async initiateApplication(jobId) {
    try {
      if (!this.currentUser) {
        this.showLoginRequired();
        return;
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞–∫–∞–Ω—Å–∏–∏
      const job = await this.loadJobDetails(jobId);
      if (!job) {
        this.showError('–í–∞–∫–∞–Ω—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫–ª–∏–∫–∞–ª—Å—è –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      const existingApplication = await this.checkExistingApplication(jobId);
      if (existingApplication) {
        this.showError('–í—ã —É–∂–µ –æ—Ç–∫–ª–∏–∫–∞–ª–∏—Å—å –Ω–∞ —ç—Ç—É –≤–∞–∫–∞–Ω—Å–∏—é');
        return;
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã
      await this.loadUserData();
      const limits = await this.checkApplicationLimits();

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      this.showApplicationModal(job, limits);

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –æ—Ç–∫–ª–∏–∫–∞:', error);
      this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–∫–ª–∏–∫–∞');
    }
  }

  async loadJobDetails(jobId) {
    try {
      const jobDoc = await this.db.collection('jobs').doc(jobId).get();
      if (jobDoc.exists) {
        return { id: jobDoc.id, ...jobDoc.data() };
      }
      return null;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–∏:', error);
      return null;
    }
  }

  async checkExistingApplication(jobId) {
    try {
      // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–∫–ª–∏–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const applications = await this.db.collection('applications')
        .where('applicantId', '==', this.currentUser.uid)
        .where('jobId', '==', jobId)
        .limit(1)
        .get();
      
      return !applications.empty;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ—Ç–∫–ª–∏–∫–æ–≤:', error);
      // Fallback –Ω–∞ –º–µ–Ω–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—Ä–æ—Å –µ—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –Ω–µ —Å–æ–∑–¥–∞–Ω
      try {
        const applications = await this.db.collection('applications')
          .where('applicantId', '==', this.currentUser.uid)
          .get();
        
        let hasExisting = false;
        applications.forEach(doc => {
          const app = doc.data();
          if (app.jobId === jobId) {
            hasExisting = true;
          }
        });
        
        return hasExisting;
      } catch (fallbackError) {
        console.error('Fallback –∑–∞–ø—Ä–æ—Å —Ç–∞–∫–∂–µ –Ω–µ —É–¥–∞–ª—Å—è:', fallbackError);
        return false;
      }
    }
  }

  async loadUserData() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ AuthManager
    if (!this.currentUser.userData) {
      this.currentUser.userData = window.authManager.getUserData(this.currentUser.uid);
      
      // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤ –∫–µ—à–µ, –∑–∞–≥—Ä—É–∂–∞–µ–º —á–µ—Ä–µ–∑ AuthManager
      if (!this.currentUser.userData) {
        this.currentUser.userData = await window.authManager.loadUserData(this.currentUser.uid);
      }
    }
  }

  async checkApplicationLimits() {
    const userData = this.currentUser.userData;
    const subscription = userData?.subscription || { type: 'basic' };
    const stats = userData?.stats || { applicationsThisMonth: 0, applicationsLimit: 5 };
    
    const subscriptionLimits = this.limits[subscription.type] || this.limits.basic;
    const remaining = subscriptionLimits.applicationsPerMonth === Infinity 
      ? Infinity 
      : Math.max(0, stats.applicationsLimit - stats.applicationsThisMonth);

    return {
      subscription: subscription.type,
      applicationsUsed: stats.applicationsThisMonth,
      applicationsLimit: stats.applicationsLimit,
      remaining,
      canApply: remaining > 0,
      hasVipFeatures: ['vip', 'premium'].includes(subscription.type)
    };
  }

  showApplicationModal(job, limits) {
    const modal = document.getElementById('applicationModal');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞–∫–∞–Ω—Å–∏–∏
    document.getElementById('job-title').textContent = job.title;
    document.getElementById('job-company').textContent = job.companyName;
    document.getElementById('job-location').textContent = job.location?.city || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    document.getElementById('job-salary').textContent = this.formatSalary(job.salary);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–º–∏—Ç–∞—Ö
    document.getElementById('subscription-status').textContent = 
      `–ü–æ–¥–ø–∏—Å–∫–∞: ${this.getSubscriptionDisplayName(limits.subscription)}`;
    
    if (limits.remaining === Infinity) {
      document.getElementById('applications-left').textContent = '‚àû';
    } else {
      document.getElementById('applications-left').textContent = limits.remaining;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º VIP —Ñ—É–Ω–∫—Ü–∏–∏
    const vipFeatures = document.getElementById('vip-features');
    if (limits.hasVipFeatures) {
      vipFeatures.classList.remove('hidden');
    } else {
      vipFeatures.classList.add('hidden');
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ upgrade
    const upgradeOffer = document.getElementById('upgrade-offer');
    if (!limits.canApply) {
      upgradeOffer.classList.remove('hidden');
      document.getElementById('quick-apply-section').style.opacity = '0.5';
      document.getElementById('detailed-apply-section').style.opacity = '0.5';
    } else {
      upgradeOffer.classList.add('hidden');
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    this.currentApplication = {
      jobId: job.id,
      job,
      limits
    };

    modal.classList.remove('hidden');
  }

  closeApplicationModal() {
    const modal = document.getElementById('applicationModal');
    modal.classList.add('hidden');
    this.currentApplication = null;
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('cover-letter').value = '';
    document.getElementById('uploaded-files').innerHTML = '';
  }

  async submitQuickApplication() {
    if (!this.currentApplication?.limits.canApply) {
      this.showUpgradeRequired();
      return;
    }

    try {
      const applicationData = {
        jobId: this.currentApplication.jobId,
        applicantId: this.currentUser.uid,
        employerId: this.currentApplication.job.employerId,
        status: 'pending',
        type: 'quick',
        coverLetter: '',
        attachments: [],
        priority: this.currentApplication.limits.hasVipFeatures && 
                 document.getElementById('priority-application')?.checked,
        createdAt: firebase.firestore.FieldValue.serverTimestamp(),
        source: 'manual'
      };

      await this.db.collection('applications').add(applicationData);
      await this.updateApplicationStats();

      this.showSuccess('–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
      this.closeApplicationModal();

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞:', error);
      this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫');
    }
  }

  async submitDetailedApplication() {
    if (!this.currentApplication?.limits.canApply) {
      this.showUpgradeRequired();
      return;
    }

    try {
      const coverLetter = document.getElementById('cover-letter').value;
      
      if (!coverLetter.trim()) {
        this.showError('–î–æ–±–∞–≤—å—Ç–µ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ');
        return;
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã (–∑–∞–≥–ª—É—à–∫–∞ - –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –Ω—É–∂–µ–Ω Firebase Storage)
      const attachments = []; // TODO: Implement file upload

      const applicationData = {
        jobId: this.currentApplication.jobId,
        applicantId: this.currentUser.uid,
        employerId: this.currentApplication.job.employerId,
        status: 'pending',
        type: 'detailed',
        coverLetter,
        attachments,
        priority: this.currentApplication.limits.hasVipFeatures && 
                 document.getElementById('priority-application')?.checked,
        autoFollowUp: this.currentApplication.limits.hasVipFeatures && 
                     document.getElementById('auto-follow-up')?.checked,
        readReceipt: this.currentApplication.limits.hasVipFeatures && 
                    document.getElementById('read-receipt')?.checked,
        notifications: {
          response: document.getElementById('notify-response').checked
        },
        createdAt: firebase.firestore.FieldValue.serverTimestamp(),
        source: 'manual'
      };

      await this.db.collection('applications').add(applicationData);
      await this.updateApplicationStats();

      this.showSuccess('–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∫–ª–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
      this.closeApplicationModal();

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞:', error);
      this.showError('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫');
    }
  }

  async updateApplicationStats() {
    const userRef = this.db.collection('users').doc(this.currentUser.uid);
    await userRef.update({
      'stats.applicationsThisMonth': firebase.firestore.FieldValue.increment(1),
      'stats.lastApplicationDate': firebase.firestore.FieldValue.serverTimestamp()
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (this.currentUser.userData.stats) {
      this.currentUser.userData.stats.applicationsThisMonth++;
    }
  }

  handleFileUpload(files) {
    const container = document.getElementById('uploaded-files');
    container.innerHTML = '';

    Array.from(files).forEach(file => {
      const fileItem = document.createElement('div');
      fileItem.className = 'flex items-center justify-between p-2 bg-gray-50 rounded';
      fileItem.innerHTML = `
        <div class="flex items-center">
          <i class="ri-file-line text-gray-500 mr-2"></i>
          <span class="text-sm">${file.name}</span>
          <span class="text-xs text-gray-500 ml-2">(${this.formatFileSize(file.size)})</span>
        </div>
        <button onclick="this.parentElement.remove()" class="text-red-500 hover:text-red-700">
          <i class="ri-close-line"></i>
        </button>
      `;
      container.appendChild(fileItem);
    });
  }

  formatFileSize(bytes) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  }

  async setupAutoApply() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–æ–≤ –¥–ª—è VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (!this.currentUser?.userData) return;
    
    const subscription = this.currentUser.userData.subscription;
    if (!['vip', 'premium'].includes(subscription?.type)) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–æ–≤ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
    setInterval(() => {
      this.processAutoApplications();
    }, 30 * 60 * 1000);
  }

  async processAutoApplications() {
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userDoc = await this.db.collection('users').doc(this.currentUser.uid).get();
      const userData = userDoc.data();
      
      if (!userData?.autoApplySettings?.enabled) return;

      const settings = userData.autoApplySettings;
      
      // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö where —É—Å–ª–æ–≤–∏–π
      const jobs = await this.db.collection('jobs')
        .limit(100)
        .get();
      
      for (const jobDoc of jobs.docs) {
        const job = { id: jobDoc.id, ...jobDoc.data() };
        
        // –ë–∞–∑–æ–≤–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
        if (job.status !== 'active') continue;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è (–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞)
        const createdAt = job.createdAt?.toDate() || new Date(0);
        const oneDayAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);
        if (createdAt < oneDayAgo) continue;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if (settings.categories?.length && !settings.categories.includes(job.category)) {
          continue;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è
        if (await this.matchesAutoApplyCriteria(job, settings)) {
          await this.submitAutoApplication(job);
        }
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–æ–≤:', error);
    }
  }

  async matchesAutoApplyCriteria(job, settings) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–æ–≤
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É
    if (settings.minSalary && job.salary?.min < settings.minSalary) {
      return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞—Ü–∏—é
    if (settings.locations?.length && !settings.locations.includes(job.location?.city)) {
      return false;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—â–µ –Ω–µ –æ—Ç–∫–ª–∏–∫–∞–ª–∏—Å—å
    const existingApplication = await this.checkExistingApplication(job.id);
    if (existingApplication) {
      return false;
    }

    return true;
  }

  async submitAutoApplication(job) {
    try {
      const applicationData = {
        jobId: job.id,
        applicantId: this.currentUser.uid,
        employerId: job.employerId,
        status: 'pending',
        type: 'auto',
        coverLetter: this.currentUser.userData.autoApplySettings?.coverLetter || '',
        attachments: [],
        priority: true, // –ê–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–∏ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ
        createdAt: firebase.firestore.FieldValue.serverTimestamp(),
        source: 'auto'
      };

      await this.db.collection('applications').add(applicationData);
      await this.updateApplicationStats();

      console.log('–ê–≤—Ç–æ–æ—Ç–∫–ª–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é:', job.title);

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–æ—Ç–∫–ª–∏–∫–∞:', error);
    }
  }

  async loadUserApplications() {
    try {
      // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ where + orderBy
      const applications = await this.db.collection('applications')
        .limit(50)
        .get();

      this.applicationsCache.clear();
      // –§–∏–ª—å—Ç—Ä—É–µ–º –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
      const userApplications = [];
      applications.forEach(doc => {
        const app = { id: doc.id, ...doc.data() };
        if (app.applicantId === this.currentUser.uid) {
          userApplications.push(app);
        }
      });

      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
      userApplications.sort((a, b) => {
        const dateA = a.createdAt?.toDate() || new Date(0);
        const dateB = b.createdAt?.toDate() || new Date(0);
        return dateB - dateA;
      });

      userApplications.forEach(app => {
        this.applicationsCache.set(app.id, app);
      });

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∫–ª–∏–∫–æ–≤:', error);
    }
  }

  formatSalary(salary) {
    if (!salary) return '–ü–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏';
    
    const { min, max, currency = 'CZK', period = 'month' } = salary;
    const periodText = period === 'hour' ? '/—á–∞—Å' : '/–º–µ—Å—è—Ü';
    
    if (min && max) {
      return `${min.toLocaleString()} - ${max.toLocaleString()} ${currency}${periodText}`;
    } else if (min) {
      return `–æ—Ç ${min.toLocaleString()} ${currency}${periodText}`;
    } else if (max) {
      return `–¥–æ ${max.toLocaleString()} ${currency}${periodText}`;
    }
    
    return '–ü–æ –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏';
  }

  getSubscriptionDisplayName(type) {
    const names = {
      basic: '–ë–∞–∑–æ–≤–∞—è (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)',
      vip: 'VIP (399 Kƒç/–º–µ—Å—è—Ü)', 
      premium: '–ü—Ä–µ–º–∏—É–º (1999 Kƒç/–º–µ—Å—è—Ü)'
    };
    return names[type] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  }

  showLoginRequired() {
    const modal = document.getElementById('authModal') || document.getElementById('modal');
    if (modal) {
      modal.style.display = 'flex';
    }
  }

  showUpgradeRequired() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    const toast = document.createElement('div');
    toast.className = 'fixed top-4 right-4 bg-gradient-to-r from-primary to-secondary text-white p-4 rounded-lg shadow-lg z-50 max-w-sm';
    toast.innerHTML = `
      <div class="flex items-start">
        <i class="ri-vip-crown-line text-2xl mr-3 mt-1"></i>
        <div>
          <h4 class="font-bold mb-1">–ù—É–∂–Ω–∞ VIP –ø–æ–¥–ø–∏—Å–∫–∞</h4>
          <p class="text-sm mb-3">–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –æ—Ç–∫–ª–∏–∫–æ–≤</p>
          <button onclick="window.location.href='#subscription'" class="bg-white text-primary px-4 py-1 rounded text-sm font-medium hover:bg-gray-100">
            –ü–æ–ª—É—á–∏—Ç—å VIP –∑–∞ 1 Kƒç
          </button>
        </div>
      </div>
    `;

    document.body.appendChild(toast);
    setTimeout(() => toast.remove(), 8000);
  }

  showSuccess(message) {
    window.showToast(message, 'success');
  }

  showError(message) {
    window.showToast(message, 'error');
  }

  // --- –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π toast ---
  // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ window.showToast(message, type) –≤–º–µ—Å—Ç–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  window.applicationsManager = new ApplicationsManager();
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = ApplicationsManager;
} 