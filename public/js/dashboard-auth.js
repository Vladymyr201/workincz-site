// üîê Dashboard Auth - –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –õ–ö
class DashboardAuth {
  constructor() {
    this.currentUser = null;
    this.isInitialized = false;
    this.init();
  }

  async init() {
    console.log('üîê DashboardAuth –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...');
    
    if (typeof firebase === 'undefined') {
      console.error('‚ùå Firebase –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω! DashboardAuth –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.');
      return;
    }

    try {
      this.db = firebase.firestore();
      this.auth = firebase.auth();
      
      console.log('üîê DashboardAuth –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      this.isInitialized = true;
      
      // –°–ª—É—à–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      this.auth.onAuthStateChanged((user) => {
        this.currentUser = user;
        console.log('DashboardAuth: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', user?.email || '–í—ã—Ö–æ–¥');
        
        if (!user) {
          // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
          window.location.href = '/';
        } else {
          // –û–±–Ω–æ–≤–ª—è–µ–º UI –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          this.updateDashboardUI(user);
        }
      });
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ DashboardAuth:', error);
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –õ–ö
  updateDashboardUI(user) {
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    const userInfoElements = document.querySelectorAll('.user-name, .user-email');
    userInfoElements.forEach(el => {
      if (el.classList.contains('user-name')) {
        el.textContent = user.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      } else if (el.classList.contains('user-email')) {
        el.textContent = user.email;
      }
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    this.updateRoleBasedUI(user);
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
  updateRoleBasedUI(user) {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ URL –∏–ª–∏ localStorage
    const urlParams = new URLSearchParams(window.location.search);
    const role = urlParams.get('role') || 'candidate';
    
    // –°–∫—Ä—ã–≤–∞–µ–º/–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    const roleElements = document.querySelectorAll('[data-role]');
    roleElements.forEach(el => {
      const elementRole = el.dataset.role;
      if (elementRole === role || elementRole === 'all') {
        el.style.display = '';
      } else {
        el.style.display = 'none';
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const pageTitle = document.querySelector('.page-title');
    if (pageTitle) {
      const roleNames = {
        candidate: '–°–æ–∏—Å–∫–∞—Ç–µ–ª—å',
        client: '–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å',
        agency: '–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ'
      };
      pageTitle.textContent = `–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç - ${roleNames[role] || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}`;
    }
  }

  // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  async signOut() {
    try {
      await this.auth.signOut();
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
      window.location.href = '/';
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  getCurrentUser() {
    return this.currentUser;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
  isReady() {
    return this.isInitialized;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞
window.DashboardAuth = DashboardAuth; 