// üîê Enhanced Auth System - —É–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
class EnhancedAuthSystem {
  constructor() {
    this.currentRole = null;
    this.testAccounts = {
      candidate: { email: 'demo-candidate@test.cz', password: 'demo123456', name: '–î–µ–º–æ –°–æ–∏—Å–∫–∞—Ç–µ–ª—å' },
      client: { email: 'demo-client@test.cz', password: 'demo123456', name: '–î–µ–º–æ –†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å' },
      agency: { email: 'demo-agency@test.cz', password: 'demo123456', name: '–î–µ–º–æ –ê–≥–µ–Ω—Ç—Å—Ç–≤–æ' }
    };
    this.init();
  }

  init() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–∞–ª—ã –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã
    if (document.getElementById('enhancedLoginModal')) {
      console.log('‚úÖ Enhanced –º–æ–¥–∞–ª—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç');
      return;
    }

    this.createEnhancedModals();
    this.setupEventListeners();
    console.log('üîê EnhancedAuthSystem –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  createEnhancedModals() {
    const modalHTML = `
      <!-- Enhanced Login Modal -->
      <div id="enhancedLoginModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
        <div class="flex items-center justify-center min-h-screen p-4">
          <div class="bg-white rounded-xl max-w-md w-full shadow-2xl">
            <!-- Header -->
            <div class="bg-gradient-to-r from-primary to-secondary p-6 text-white rounded-t-xl">
              <div class="flex items-center justify-between">
                <h3 class="text-xl font-bold">–í—Ö–æ–¥ –≤ JobBridge</h3>
                <button id="closeEnhancedLoginModal" class="text-white/80 hover:text-white">
                  <i class="ri-close-line text-xl"></i>
                </button>
              </div>
              <p class="text-primary-100 text-sm mt-1">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞</p>
            </div>
            
            <!-- Role Selection -->
            <div class="p-6">
              <div class="grid grid-cols-1 gap-3 mb-6">
                <div class="role-login-option border-2 border-gray-200 rounded-lg p-4 cursor-pointer hover:border-primary transition-all" data-role="candidate">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center">
                      <i class="ri-user-line text-primary text-lg"></i>
                    </div>
                    <div class="flex-1">
                      <h5 class="font-medium text-gray-900">–°–æ–∏—Å–∫–∞—Ç–µ–ª—å</h5>
                      <p class="text-sm text-gray-600">–ò—â—É —Ä–∞–±–æ—Ç—É –≤ –ß–µ—Ö–∏–∏</p>
                    </div>
                    <div class="text-xs text-gray-500">–¢–µ—Å—Ç</div>
                  </div>
                </div>
                
                <div class="role-login-option border-2 border-gray-200 rounded-lg p-4 cursor-pointer hover:border-primary transition-all" data-role="client">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 bg-secondary/10 rounded-full flex items-center justify-center">
                      <i class="ri-building-line text-secondary text-lg"></i>
                    </div>
                    <div class="flex-1">
                      <h5 class="font-medium text-gray-900">–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å</h5>
                      <p class="text-sm text-gray-600">–ò—â—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</p>
                    </div>
                    <div class="text-xs text-gray-500">–¢–µ—Å—Ç</div>
                  </div>
                </div>
                
                <div class="role-login-option border-2 border-gray-200 rounded-lg p-4 cursor-pointer hover:border-primary transition-all" data-role="agency">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 bg-success/10 rounded-full flex items-center justify-center">
                      <i class="ri-team-line text-success text-lg"></i>
                    </div>
                    <div class="flex-1">
                      <h5 class="font-medium text-gray-900">–ö–∞–¥—Ä–æ–≤–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ</h5>
                      <p class="text-sm text-gray-600">–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é —É—Å–ª—É–≥–∏ –ø–æ–¥–±–æ—Ä–∞</p>
                    </div>
                    <div class="text-xs text-gray-500">–¢–µ—Å—Ç</div>
                  </div>
                </div>
              </div>
              
              <!-- Login Form -->
              <form id="enhancedLoginForm" class="space-y-4">
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                  <input type="email" id="enhancedLoginEmail" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary/20 focus:border-primary focus:outline-none" required>
                </div>
                
                <div>
                  <label class="block text-sm font-medium text-gray-700 mb-1">–ü–∞—Ä–æ–ª—å</label>
                  <input type="password" id="enhancedLoginPassword" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary/20 focus:border-primary focus:outline-none" required>
                </div>
                
                <div class="flex items-center justify-between">
                  <label class="flex items-center gap-2">
                    <input type="checkbox" class="rounded border-gray-300 text-primary focus:ring-primary">
                    <span class="text-sm text-gray-700">–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è</span>
                  </label>
                  <button type="button" class="text-sm text-primary hover:underline">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</button>
                </div>
                
                <button type="submit" class="w-full bg-primary text-white py-3 rounded-lg font-medium hover:bg-primary/90 transition-colors">
                  –í–æ–π—Ç–∏
                </button>
              </form>
              
              <!-- Quick Login Buttons -->
              <div class="mt-6 pt-6 border-t border-gray-200">
                <p class="text-sm text-gray-600 text-center mb-4">–ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</p>
                <div class="grid grid-cols-1 gap-2">
                  <button onclick="enhancedAuthSystem.quickLogin('candidate')" class="w-full bg-primary/10 text-primary py-2 rounded-lg text-sm font-medium hover:bg-primary/20 transition-colors">
                    –í–æ–π—Ç–∏ –∫–∞–∫ –°–æ–∏—Å–∫–∞—Ç–µ–ª—å
                  </button>
                  <button onclick="enhancedAuthSystem.quickLogin('client')" class="w-full bg-secondary/10 text-secondary py-2 rounded-lg text-sm font-medium hover:bg-secondary/20 transition-colors">
                    –í–æ–π—Ç–∏ –∫–∞–∫ –†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å
                  </button>
                  <button onclick="enhancedAuthSystem.quickLogin('agency')" class="w-full bg-success/10 text-success py-2 rounded-lg text-sm font-medium hover:bg-success/20 transition-colors">
                    –í–æ–π—Ç–∏ –∫–∞–∫ –ê–≥–µ–Ω—Ç—Å—Ç–≤–æ
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Role Switcher Modal -->
      <div id="roleSwitcherModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
        <div class="flex items-center justify-center min-h-screen p-4">
          <div class="bg-white rounded-xl max-w-md w-full shadow-2xl">
            <div class="p-6">
              <h3 class="text-xl font-bold text-gray-900 mb-4">–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ–ª–∏</h3>
              <p class="text-gray-600 mb-6">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è:</p>
              
              <div class="space-y-3">
                <button onclick="enhancedAuthSystem.switchRole('candidate')" class="w-full text-left p-4 border rounded-lg hover:bg-gray-50 transition-colors">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center">
                      <i class="ri-user-line text-primary text-lg"></i>
                    </div>
                    <div>
                      <h5 class="font-medium text-gray-900">–°–æ–∏—Å–∫–∞—Ç–µ–ª—å</h5>
                      <p class="text-sm text-gray-600">–ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç—ã</p>
                    </div>
                  </div>
                </button>
                
                <button onclick="enhancedAuthSystem.switchRole('client')" class="w-full text-left p-4 border rounded-lg hover:bg-gray-50 transition-colors">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 bg-secondary/10 rounded-full flex items-center justify-center">
                      <i class="ri-building-line text-secondary text-lg"></i>
                    </div>
                    <div>
                      <h5 class="font-medium text-gray-900">–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å</h5>
                      <p class="text-sm text-gray-600">–†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π</p>
                    </div>
                  </div>
                </button>
                
                <button onclick="enhancedAuthSystem.switchRole('agency')" class="w-full text-left p-4 border rounded-lg hover:bg-gray-50 transition-colors">
                  <div class="flex items-center gap-3">
                    <div class="w-10 h-10 bg-success/10 rounded-full flex items-center justify-center">
                      <i class="ri-team-line text-success text-lg"></i>
                    </div>
                    <div>
                      <h5 class="font-medium text-gray-900">–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ</h5>
                      <p class="text-sm text-gray-600">–ü–æ–¥–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–ª–∞</p>
                    </div>
                  </div>
                </button>
              </div>
              
              <button onclick="enhancedAuthSystem.hideRoleSwitcher()" class="w-full mt-6 bg-gray-100 text-gray-700 py-3 rounded-lg font-medium hover:bg-gray-200 transition-colors">
                –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </div>
        </div>
      </div>
    `;

    document.body.insertAdjacentHTML('beforeend', modalHTML);
  }

  setupEventListeners() {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∞
    document.getElementById('closeEnhancedLoginModal')?.addEventListener('click', () => {
      this.hideEnhancedLoginModal();
    });

    // –í—ã–±–æ—Ä —Ä–æ–ª–∏
    document.querySelectorAll('.role-login-option').forEach(option => {
      option.addEventListener('click', () => {
        const role = option.dataset.role;
        this.selectLoginRole(role);
      });
    });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
    document.getElementById('enhancedLoginForm')?.addEventListener('submit', (e) => {
      e.preventDefault();
      this.submitEnhancedLogin();
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª–∞
    document.getElementById('enhancedLoginModal')?.addEventListener('click', (e) => {
      if (e.target.id === 'enhancedLoginModal') {
        this.hideEnhancedLoginModal();
      }
    });
  }

  selectLoginRole(role) {
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –æ–ø—Ü–∏–π
    document.querySelectorAll('.role-login-option').forEach(option => {
      option.classList.remove('border-primary', 'bg-primary/5');
      option.classList.add('border-gray-200');
    });

    // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ–ø—Ü–∏—é
    const selectedOption = document.querySelector(`[data-role="${role}"]`);
    if (selectedOption) {
      selectedOption.classList.remove('border-gray-200');
      selectedOption.classList.add('border-primary', 'bg-primary/5');
    }

    this.currentRole = role;

    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const testAccount = this.testAccounts[role];
    if (testAccount) {
      document.getElementById('enhancedLoginEmail').value = testAccount.email;
      document.getElementById('enhancedLoginPassword').value = testAccount.password;
    }
  }

  async quickLogin(role) {
    try {
      const testAccount = this.testAccounts[role];
      if (!testAccount) {
        this.showError('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å');
        return;
      }

      console.log(`üîê –ë—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥ –∫–∞–∫ ${role}...`);
      
      // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = await this.ensureTestUser(role, testAccount);
      if (user) {
        this.showSuccess(`–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –∫–∞–∫ ${this.getRoleDisplayName(role)}`);
        this.hideEnhancedLoginModal();
        this.showDashboard(role);
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞:', error);
      this.showError(this.getErrorMessage(error.code));
    }
  }

  async ensureTestUser(role, testAccount) {
    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º
      const userCredential = await firebase.auth().signInWithEmailAndPassword(
        testAccount.email,
        testAccount.password
      );
      
      return userCredential.user;
      
    } catch (error) {
      if (error.code === 'auth/user-not-found') {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userCredential = await firebase.auth().createUserWithEmailAndPassword(
          testAccount.email,
          testAccount.password
        );

        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ Firestore
        const userData = {
          uid: userCredential.user.uid,
          email: testAccount.email,
          name: testAccount.name,
          role: role,
          createdAt: firebase.firestore.FieldValue.serverTimestamp(),
          isVerified: true,
          isPremium: true,
          isTestAccount: true
        };

        await firebase.firestore().collection('users').doc(userCredential.user.uid).set(userData);
        
        return userCredential.user;
      }
      throw error;
    }
  }

  async submitEnhancedLogin() {
    try {
      const email = document.getElementById('enhancedLoginEmail').value;
      const password = document.getElementById('enhancedLoginPassword').value;

      if (!email || !password) {
        this.showError('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
        return;
      }

      console.log('üîê –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ö–æ–¥...');
      
      const userCredential = await firebase.auth().signInWithEmailAndPassword(email, password);
      
      this.showSuccess('–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      this.hideEnhancedLoginModal();
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userDoc = await firebase.firestore().collection('users').doc(userCredential.user.uid).get();
      const userData = userDoc.data();
      const role = userData?.role || 'candidate';
      
      this.showDashboard(role);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
      this.showError(this.getErrorMessage(error.code));
    }
  }

  showEnhancedLoginModal() {
    document.getElementById('enhancedLoginModal').classList.remove('hidden');
  }

  hideEnhancedLoginModal() {
    document.getElementById('enhancedLoginModal').classList.add('hidden');
    this.resetLoginForm();
  }

  showRoleSwitcher() {
    document.getElementById('roleSwitcherModal').classList.remove('hidden');
  }

  hideRoleSwitcher() {
    document.getElementById('roleSwitcherModal').classList.add('hidden');
  }

  switchRole(role) {
    this.currentRole = role;
    this.hideRoleSwitcher();
    this.showDashboard(role);
  }

  showDashboard(role) {
    const roleRoutes = {
      candidate: '/dashboard.html',
      client: '/employer-dashboard.html',
      agency: '/agency-dashboard.html'
    };

    const route = roleRoutes[role] || '/dashboard.html';
    window.location.href = route;
  }

  getRoleDisplayName(role) {
    const names = {
      candidate: '–°–æ–∏—Å–∫–∞—Ç–µ–ª—å',
      client: '–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å',
      agency: '–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ'
    };
    return names[role] || role;
  }

  resetLoginForm() {
    document.getElementById('enhancedLoginForm').reset();
    this.currentRole = null;
    
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å —Ä–æ–ª–µ–π
    document.querySelectorAll('.role-login-option').forEach(option => {
      option.classList.remove('border-primary', 'bg-primary/5');
      option.classList.add('border-gray-200');
    });
  }

  getErrorMessage(errorCode) {
    const messages = {
      'auth/user-not-found': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω',
      'auth/wrong-password': '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å',
      'auth/invalid-email': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email',
      'auth/too-many-requests': '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞',
      'auth/network-request-failed': '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏'
    };
    return messages[errorCode] || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ';
  }

  showError(message) {
    if (window.showToast) {
      window.showToast(message, 'error');
    } else {
      alert(`–û—à–∏–±–∫–∞: ${message}`);
    }
  }

  showSuccess(message) {
    if (window.showToast) {
      window.showToast(message, 'success');
    } else {
      alert(`–£—Å–ø–µ—Ö: ${message}`);
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ä–æ–ª–µ–π
  updateRoleSwitcher() {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è—é –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–æ–ª–µ–π, —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å:', this.currentRole);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    const roleElements = document.querySelectorAll('[data-role]');
    roleElements.forEach(element => {
      const elementRole = element.dataset.role;
      if (elementRole === this.currentRole) {
        element.classList.add('active', 'border-primary');
        element.classList.remove('border-gray-200');
      } else {
        element.classList.remove('active', 'border-primary');
        element.classList.add('border-gray-200');
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
    const roleDisplayNames = {
      candidate: '–°–æ–∏—Å–∫–∞—Ç–µ–ª—å',
      client: '–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å',
      agency: '–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ'
    };

    const roleDescriptions = {
      candidate: '–ò—â—É —Ä–∞–±–æ—Ç—É –≤ –ß–µ—Ö–∏–∏',
      client: '–ò—â—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      agency: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é —É—Å–ª—É–≥–∏ –ø–æ–¥–±–æ—Ä–∞'
    };

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –º–æ–¥–∞–ª–µ
    const modalTitle = document.querySelector('#enhancedLoginModal h3');
    if (modalTitle && this.currentRole) {
      modalTitle.textContent = `–í—Ö–æ–¥ –∫–∞–∫ ${roleDisplayNames[this.currentRole]}`;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –º–æ–¥–∞–ª–µ
    const modalDescription = document.querySelector('#enhancedLoginModal .text-primary-100');
    if (modalDescription && this.currentRole) {
      modalDescription.textContent = roleDescriptions[this.currentRole];
    }

    console.log('‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–æ–ª–µ–π –æ–±–Ω–æ–≤–ª–µ–Ω');
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞
window.EnhancedAuthSystem = EnhancedAuthSystem; 