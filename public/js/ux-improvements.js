/**
 * –ú–û–î–£–õ–¨ –£–õ–£–ß–®–ï–ù–ò–Ø UX
 * –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
 */

class UXImprovements {
    constructor() {
        this.improvements = {
            simplifiedNavigation: false,
            performanceOptimization: false,
            mobileOptimization: false,
            searchImprovement: false,
            feedbackIntegration: false
        };
    }

    log(message, type = 'info') {
        const timestamp = new Date().toISOString();
        const prefix = type === 'error' ? '‚ùå' : type === 'success' ? '‚úÖ' : '‚ÑπÔ∏è';
        console.log(`${prefix} [${timestamp}] UX: ${message}`);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —É–ª—É—á—à–µ–Ω–∏–π
    init() {
        this.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏–π UX...');
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ —É–ª—É—á—à–µ–Ω–∏—è
        this.simplifyNavigation();
        this.optimizePerformance();
        this.improveMobileExperience();
        this.enhanceSearch();
        this.addQuickActions();
        this.improveAccessibility();
        this.addProgressIndicators();
        
        this.log('‚úÖ –í—Å–µ —É–ª—É—á—à–µ–Ω–∏—è UX –ø—Ä–∏–º–µ–Ω–µ–Ω—ã', 'success');
    }

    // –£–ø—Ä–æ—â–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    simplifyNavigation() {
        this.log('üß≠ –£–ø—Ä–æ—â–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
        
        // –°–æ–∑–¥–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        const simplifiedNav = `
            <div class="simplified-nav fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 z-40 lg:hidden">
                <div class="flex justify-around items-center py-2">
                    <button onclick="window.location.href='#'" class="flex flex-col items-center text-blue-600">
                        <i class="fas fa-home text-lg"></i>
                        <span class="text-xs mt-1">–ì–ª–∞–≤–Ω–∞—è</span>
                    </button>
                    <button onclick="openJobsPanel()" class="flex flex-col items-center text-gray-600 hover:text-blue-600">
                        <i class="fas fa-briefcase text-lg"></i>
                        <span class="text-xs mt-1">–í–∞–∫–∞–Ω—Å–∏–∏</span>
                    </button>
                    <button onclick="openMessagesPanel()" class="flex flex-col items-center text-gray-600 hover:text-blue-600">
                        <i class="fas fa-comments text-lg"></i>
                        <span class="text-xs mt-1">–°–æ–æ–±—â–µ–Ω–∏—è</span>
                    </button>
                    <button onclick="openUserProfile()" class="flex flex-col items-center text-gray-600 hover:text-blue-600">
                        <i class="fas fa-user text-lg"></i>
                        <span class="text-xs mt-1">–ü—Ä–æ—Ñ–∏–ª—å</span>
                    </button>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ body
        document.body.insertAdjacentHTML('beforeend', simplifiedNav);
        
        // –£–ø—Ä–æ—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        const mainNav = document.querySelector('nav');
        if (mainNav) {
            mainNav.classList.add('simplified');
            this.addSimplifiedStyles();
        }
        
        this.improvements.simplifiedNavigation = true;
        this.log('‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —É–ø—Ä–æ—â–µ–Ω–∞', 'success');
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω—ã—Ö —Å—Ç–∏–ª–µ–π
    addSimplifiedStyles() {
        const style = document.createElement('style');
        style.textContent = `
            .simplified-nav {
                box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
            }
            
            .simplified-nav button {
                transition: all 0.2s ease;
            }
            
            .simplified-nav button:active {
                transform: scale(0.95);
            }
            
            .simplified nav {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            }
            
            .simplified .nav-item {
                border-radius: 8px;
                margin: 0 4px;
                transition: all 0.3s ease;
            }
            
            .simplified .nav-item:hover {
                background: rgba(255,255,255,0.2);
                transform: translateY(-2px);
            }
        `;
        document.head.appendChild(style);
    }

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    optimizePerformance() {
        this.log('‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
        
        // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        this.lazyLoadImages();
        
        // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
        this.optimizeAnimations();
        
        // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        this.setupCaching();
        
        this.improvements.performanceOptimization = true;
        this.log('‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞', 'success');
    }

    // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    lazyLoadImages() {
        const images = document.querySelectorAll('img[data-src]');
        const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    img.src = img.dataset.src;
                    img.classList.remove('lazy');
                    observer.unobserve(img);
                }
            });
        });

        images.forEach(img => imageObserver.observe(img));
    }

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
    optimizeAnimations() {
        const style = document.createElement('style');
        style.textContent = `
            * {
                will-change: auto;
            }
            
            .animate-optimized {
                will-change: transform, opacity;
                transform: translateZ(0);
            }
            
            .smooth-transition {
                transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
            }
        `;
        document.head.appendChild(style);
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
    setupCaching() {
        // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ localStorage
        if (!localStorage.getItem('ux_cache_version')) {
            localStorage.setItem('ux_cache_version', Date.now().toString());
        }
        
        // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        this.cacheFrequentlyUsedData();
    }

    // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    cacheFrequentlyUsedData() {
        const cacheData = {
            userPreferences: {
                theme: 'light',
                language: 'cs',
                notifications: true
            },
            recentSearches: [],
            favoriteJobs: []
        };
        
        localStorage.setItem('ux_cache_data', JSON.stringify(cacheData));
    }

    // –£–ª—É—á—à–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –æ–ø—ã—Ç–∞
    improveMobileExperience() {
        this.log('üì± –£–ª—É—á—à–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –æ–ø—ã—Ç–∞...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –∂–µ—Å—Ç—ã
        this.addMobileGestures();
        
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã –∫–Ω–æ–ø–æ–∫
        this.optimizeTouchTargets();
        
        // –£–ª—É—á—à–∞–µ–º —Å–∫—Ä–æ–ª–ª–∏–Ω–≥
        this.improveScrolling();
        
        this.improvements.mobileOptimization = true;
        this.log('‚úÖ –ú–æ–±–∏–ª—å–Ω—ã–π –æ–ø—ã—Ç —É–ª—É—á—à–µ–Ω', 'success');
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö –∂–µ—Å—Ç–æ–≤
    addMobileGestures() {
        let startY = 0;
        let startX = 0;
        
        document.addEventListener('touchstart', (e) => {
            startY = e.touches[0].clientY;
            startX = e.touches[0].clientX;
        });
        
        document.addEventListener('touchend', (e) => {
            const endY = e.changedTouches[0].clientY;
            const endX = e.changedTouches[0].clientX;
            const deltaY = startY - endY;
            const deltaX = startX - endX;
            
            // –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞
            if (deltaY > 50 && Math.abs(deltaX) < 50) {
                this.showQuickSearch();
            }
            
            // –°–≤–∞–π–ø –≤–Ω–∏–∑ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            if (deltaY < -50 && Math.abs(deltaX) < 50) {
                this.refreshContent();
            }
        });
    }

    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞—Å–∞–Ω–∏—è
    optimizeTouchTargets() {
        const style = document.createElement('style');
        style.textContent = `
            @media (max-width: 768px) {
                button, .btn, .nav-item {
                    min-height: 44px;
                    min-width: 44px;
                    padding: 12px 16px;
                }
                
                input, select, textarea {
                    min-height: 44px;
                    font-size: 16px;
                }
            }
        `;
        document.head.appendChild(style);
    }

    // –£–ª—É—á—à–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞
    improveScrolling() {
        const style = document.createElement('style');
        style.textContent = `
            html {
                scroll-behavior: smooth;
            }
            
            .smooth-scroll {
                -webkit-overflow-scrolling: touch;
                scroll-behavior: smooth;
            }
        `;
        document.head.appendChild(style);
    }

    // –£–ª—É—á—à–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
    enhanceSearch() {
        this.log('üîç –£–ª—É—á—à–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
        this.addAutocomplete();
        
        // –£–ª—É—á—à–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        this.improveFilters();
        
        // –î–æ–±–∞–≤–ª—è–µ–º —É–º–Ω—ã–π –ø–æ–∏—Å–∫
        this.addSmartSearch();
        
        this.improvements.searchImprovement = true;
        this.log('‚úÖ –ü–æ–∏—Å–∫ —É–ª—É—á—à–µ–Ω', 'success');
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    addAutocomplete() {
        const searchInputs = document.querySelectorAll('input[type="search"], input[placeholder*="–ø–æ–∏—Å–∫"], input[placeholder*="search"]');
        
        searchInputs.forEach(input => {
            input.addEventListener('input', (e) => {
                const query = e.target.value;
                if (query.length > 2) {
                    this.showAutocompleteSuggestions(input, query);
                }
            });
        });
    }

    // –ü–æ–∫–∞–∑ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    showAutocompleteSuggestions(input, query) {
        const suggestions = this.getSearchSuggestions(query);
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
        const oldSuggestions = document.querySelector('.autocomplete-suggestions');
        if (oldSuggestions) oldSuggestions.remove();
        
        if (suggestions.length > 0) {
            const suggestionsDiv = document.createElement('div');
            suggestionsDiv.className = 'autocomplete-suggestions absolute top-full left-0 right-0 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-60 overflow-y-auto';
            
            suggestions.forEach(suggestion => {
                const item = document.createElement('div');
                item.className = 'px-4 py-2 hover:bg-gray-100 cursor-pointer';
                item.textContent = suggestion;
                item.onclick = () => {
                    input.value = suggestion;
                    suggestionsDiv.remove();
                };
                suggestionsDiv.appendChild(item);
            });
            
            input.parentNode.style.position = 'relative';
            input.parentNode.appendChild(suggestionsDiv);
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –ø–æ–∏—Å–∫–∞
    getSearchSuggestions(query) {
        const commonSearches = [
            '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ JavaScript',
            '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞',
            '–î–∏–∑–∞–π–Ω–µ—Ä UI/UX',
            '–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö',
            '–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥',
            '–ü—Ä–æ–¥–∞–≤–µ—Ü',
            '–í–æ–¥–∏—Ç–µ–ª—å',
            '–ü–æ–≤–∞—Ä',
            '–£—á–∏—Ç–µ–ª—å',
            '–í—Ä–∞—á'
        ];
        
        return commonSearches.filter(search => 
            search.toLowerCase().includes(query.toLowerCase())
        ).slice(0, 5);
    }

    // –£–ª—É—á—à–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    improveFilters() {
        const filterButtons = document.querySelectorAll('.filter-btn, .filter-button');
        
        filterButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                e.preventDefault();
                this.applyFilter(button.dataset.filter);
            });
        });
    }

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
    applyFilter(filterType) {
        this.log(`üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞: ${filterType}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        this.showLoadingIndicator();
        
        // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞
        setTimeout(() => {
            this.hideLoadingIndicator();
            this.showSuccessMessage('–§–∏–ª—å—Ç—Ä –ø—Ä–∏–º–µ–Ω–µ–Ω');
        }, 500);
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–º–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    addSmartSearch() {
        const searchForm = document.querySelector('form[role="search"]');
        if (searchForm) {
            searchForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const query = searchForm.querySelector('input').value;
                this.performSmartSearch(query);
            });
        }
    }

    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–º–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    performSmartSearch(query) {
        this.log(`üß† –£–º–Ω—ã–π –ø–æ–∏—Å–∫: ${query}`);
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
        const analysis = this.analyzeSearchQuery(query);
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        this.executeContextualSearch(query, analysis);
    }

    // –ê–Ω–∞–ª–∏–∑ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    analyzeSearchQuery(query) {
        const analysis = {
            type: 'job',
            location: null,
            experience: null,
            salary: null
        };
        
        // –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        if (query.includes('–ü—Ä–∞–≥–∞') || query.includes('Praha')) {
            analysis.location = '–ü—Ä–∞–≥–∞';
        }
        
        if (query.includes('senior') || query.includes('–æ–ø—ã—Ç')) {
            analysis.experience = 'senior';
        }
        
        if (query.includes('‚Ç¨') || query.includes('CZK')) {
            analysis.salary = 'specified';
        }
        
        return analysis;
    }

    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    executeContextualSearch(query, analysis) {
        this.log(`üîç –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –ø–æ–∏—Å–∫: ${JSON.stringify(analysis)}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        this.showSearchResults(query, analysis);
    }

    // –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    showSearchResults(query, analysis) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –∑–∞–ø—Ä–æ—Å
        this.log(`üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–ª—è: ${query}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showSuccessMessage(`–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è "${query}"`);
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    addQuickActions() {
        this.log('‚ö° –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π...');
        
        // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        const quickActions = `
            <div class="quick-actions fixed top-4 right-4 z-50">
                <div class="flex flex-col space-y-2">
                    <button onclick="uxImprovements.showQuickSearch()" 
                            class="bg-blue-600 text-white p-3 rounded-full shadow-lg hover:bg-blue-700 transition-all duration-200 hover:scale-110">
                        <i class="fas fa-search"></i>
                    </button>
                    <button onclick="uxImprovements.showQuickFilters()" 
                            class="bg-green-600 text-white p-3 rounded-full shadow-lg hover:bg-green-700 transition-all duration-200 hover:scale-110">
                        <i class="fas fa-filter"></i>
                    </button>
                    <button onclick="uxImprovements.showQuickFeedback()" 
                            class="bg-purple-600 text-white p-3 rounded-full shadow-lg hover:bg-purple-700 transition-all duration-200 hover:scale-110">
                        <i class="fas fa-comment"></i>
                    </button>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', quickActions);
        
        this.log('‚úÖ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã', 'success');
    }

    // –ü–æ–∫–∞–∑ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
    showQuickSearch() {
        const modal = document.createElement('div');
        modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
        modal.innerHTML = `
            <div class="bg-white rounded-lg p-6 w-96">
                <h3 class="text-lg font-semibold mb-4">–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫</h3>
                <input type="text" placeholder="–ß—Ç–æ –∏—â–µ—Ç–µ?" 
                       class="w-full p-3 border border-gray-300 rounded-lg mb-4" 
                       autofocus>
                <div class="flex justify-end space-x-2">
                    <button onclick="this.closest('.fixed').remove()" 
                            class="px-4 py-2 text-gray-600 hover:text-gray-800">
                        –û—Ç–º–µ–Ω–∞
                    </button>
                    <button onclick="uxImprovements.performQuickSearch(this.previousElementSibling.value)" 
                            class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        –ù–∞–π—Ç–∏
                    </button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª–∞
        modal.addEventListener('click', (e) => {
            if (e.target === modal) modal.remove();
        });
    }

    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
    performQuickSearch(query) {
        this.log(`üîç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫: ${query}`);
        this.performSmartSearch(query);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
        document.querySelector('.fixed').remove();
    }

    // –ü–æ–∫–∞–∑ –±—ã—Å—Ç—Ä—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    showQuickFilters() {
        const filters = [
            { name: '–ù–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏', icon: 'fas fa-star' },
            { name: '–í—ã—Å–æ–∫–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞', icon: 'fas fa-euro-sign' },
            { name: '–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞', icon: 'fas fa-home' },
            { name: '–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å', icon: 'fas fa-clock' }
        ];
        
        const modal = document.createElement('div');
        modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
        modal.innerHTML = `
            <div class="bg-white rounded-lg p-6 w-80">
                <h3 class="text-lg font-semibold mb-4">–ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã</h3>
                <div class="space-y-2">
                    ${filters.map(filter => `
                        <button onclick="uxImprovements.applyQuickFilter('${filter.name}')" 
                                class="w-full p-3 text-left border border-gray-200 rounded-lg hover:bg-gray-50 flex items-center">
                            <i class="${filter.icon} mr-3 text-blue-600"></i>
                            ${filter.name}
                        </button>
                    `).join('')}
                </div>
                <button onclick="this.closest('.fixed').remove()" 
                        class="w-full mt-4 px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700">
                    –ó–∞–∫—Ä—ã—Ç—å
                </button>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        modal.addEventListener('click', (e) => {
            if (e.target === modal) modal.remove();
        });
    }

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
    applyQuickFilter(filterName) {
        this.log(`üîß –ë—ã—Å—Ç—Ä—ã–π —Ñ–∏–ª—å—Ç—Ä: ${filterName}`);
        this.applyFilter(filterName.toLowerCase().replace(' ', '_'));
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
        document.querySelector('.fixed').remove();
    }

    // –ü–æ–∫–∞–∑ –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    showQuickFeedback() {
        if (window.feedbackSystem) {
            window.feedbackSystem.showFeedbackModal('quick_action');
        } else {
            this.showSuccessMessage('–°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');
        }
    }

    // –£–ª—É—á—à–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    improveAccessibility() {
        this.log('‚ôø –£–ª—É—á—à–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º ARIA-–∞—Ç—Ä–∏–±—É—Ç—ã
        this.addARIAAttributes();
        
        // –£–ª—É—á—à–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        this.improveKeyboardNavigation();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã—Å–æ–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç
        this.addHighContrast();
        
        this.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —É–ª—É—á—à–µ–Ω–∞', 'success');
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ ARIA-–∞—Ç—Ä–∏–±—É—Ç–æ–≤
    addARIAAttributes() {
        const buttons = document.querySelectorAll('button');
        buttons.forEach(button => {
            if (!button.getAttribute('aria-label')) {
                const text = button.textContent.trim();
                if (text) {
                    button.setAttribute('aria-label', text);
                }
            }
        });
        
        const links = document.querySelectorAll('a');
        links.forEach(link => {
            if (!link.getAttribute('aria-label')) {
                const text = link.textContent.trim();
                if (text) {
                    link.setAttribute('aria-label', text);
                }
            }
        });
    }

    // –£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    improveKeyboardNavigation() {
        document.addEventListener('keydown', (e) => {
            // Alt + S –¥–ª—è –ø–æ–∏—Å–∫–∞
            if (e.altKey && e.key === 's') {
                e.preventDefault();
                this.showQuickSearch();
            }
            
            // Alt + F –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
            if (e.altKey && e.key === 'f') {
                e.preventDefault();
                this.showQuickFilters();
            }
            
            // Alt + H –¥–ª—è –ø–æ–º–æ—â–∏
            if (e.altKey && e.key === 'h') {
                e.preventDefault();
                this.showHelp();
            }
        });
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã—Å–æ–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
    addHighContrast() {
        const style = document.createElement('style');
        style.textContent = `
            .high-contrast {
                background: #000 !important;
                color: #fff !important;
            }
            
            .high-contrast * {
                background: #000 !important;
                color: #fff !important;
                border-color: #fff !important;
            }
            
            .high-contrast button {
                background: #fff !important;
                color: #000 !important;
            }
        `;
        document.head.appendChild(style);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
        const toggle = document.createElement('button');
        toggle.innerHTML = 'üåô';
        toggle.className = 'fixed top-4 left-4 z-50 p-2 bg-gray-800 text-white rounded-full';
        toggle.onclick = () => document.body.classList.toggle('high-contrast');
        document.body.appendChild(toggle);
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    addProgressIndicators() {
        this.log('üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞...');
        
        // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.addPageLoadIndicator();
        
        // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–µ–π—Å—Ç–≤–∏–π
        this.addActionProgressIndicator();
        
        this.log('‚úÖ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã', 'success');
    }

    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    addPageLoadIndicator() {
        const indicator = document.createElement('div');
        indicator.className = 'page-load-indicator fixed top-0 left-0 w-full h-1 bg-blue-600 z-50';
        indicator.style.transform = 'scaleX(0)';
        indicator.style.transformOrigin = 'left';
        indicator.style.transition = 'transform 0.3s ease';
        
        document.body.appendChild(indicator);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        setTimeout(() => {
            indicator.style.transform = 'scaleX(1)';
        }, 100);
        
        setTimeout(() => {
            indicator.style.transform = 'scaleX(0)';
            setTimeout(() => indicator.remove(), 300);
        }, 1000);
    }

    // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–µ–π—Å—Ç–≤–∏–π
    addActionProgressIndicator() {
        this.showLoadingIndicator = () => {
            const indicator = document.createElement('div');
            indicator.className = 'action-progress fixed top-4 left-1/2 transform -translate-x-1/2 bg-blue-600 text-white px-4 py-2 rounded-lg z-50';
            indicator.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>–ó–∞–≥—Ä—É–∑–∫–∞...';
            indicator.id = 'action-progress';
            
            document.body.appendChild(indicator);
        };
        
        this.hideLoadingIndicator = () => {
            const indicator = document.getElementById('action-progress');
            if (indicator) {
                indicator.remove();
            }
        };
    }

    // –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏–π
    showSuccessMessage(message) {
        const notification = document.createElement('div');
        notification.className = 'fixed top-4 left-1/2 transform -translate-x-1/2 bg-green-500 text-white px-4 py-2 rounded-lg z-50 animate-slideIn';
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.remove();
        }, 3000);
    }

    // –ü–æ–∫–∞–∑ –ø–æ–º–æ—â–∏
    showHelp() {
        const helpContent = `
            <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                <div class="bg-white rounded-lg p-6 max-w-md">
                    <h3 class="text-lg font-semibold mb-4">–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏</h3>
                    <div class="space-y-2 text-sm">
                        <div><kbd class="bg-gray-100 px-2 py-1 rounded">Alt + S</kbd> - –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫</div>
                        <div><kbd class="bg-gray-100 px-2 py-1 rounded">Alt + F</kbd> - –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã</div>
                        <div><kbd class="bg-gray-100 px-2 py-1 rounded">Alt + H</kbd> - –ü–æ–º–æ—â—å</div>
                    </div>
                    <button onclick="this.closest('.fixed').remove()" 
                            class="w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', helpContent);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    refreshContent() {
        this.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        this.showSuccessMessage('–ö–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è...');
        
        // –°–∏–º—É–ª—è—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            this.showSuccessMessage('–ö–æ–Ω—Ç–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω!');
        }, 1000);
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    openUserProfile() {
        this.log('üë§ –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –Ω–∞–≤–∏–≥–∞—Ü–∏—è –∫ –ø—Ä–æ—Ñ–∏–ª—é
        this.showSuccessMessage('–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.uxImprovements = new UXImprovements();

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    window.uxImprovements.init();
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = UXImprovements;
} 