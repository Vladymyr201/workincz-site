const admin = require('firebase-admin');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ service account —Ñ–∞–π–ª–∞
let serviceAccount;
try {
  serviceAccount = require('./firebase-service-account.json');
  console.log('‚úÖ Service account —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω');
} catch (error) {
  console.log('‚ö†Ô∏è  Service account —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π...');
  
  // –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π service account
  serviceAccount = {
    "type": "service_account",
    "project_id": "workincz-759c7",
    "private_key_id": "temp_key_" + Date.now(),
    "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7VJTUt9Us8cKB\nzLmdvrtLDv6/9tUAcR4c/7/6HNpHN0dxFfmDtlYkfgrHkQgKZFPkIipySDmxWeh\n-----END PRIVATE KEY-----\n",
    "client_email": "firebase-adminsdk-temp@workincz-759c7.iam.gserviceaccount.com",
    "client_id": "123456789",
    "auth_uri": "https://accounts.google.com/o/oauth2/auth",
    "token_uri": "https://oauth2.googleapis.com/token",
    "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
    "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-temp%40workincz-759c7.iam.gserviceaccount.com"
  };
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Firebase Admin SDK
try {
  admin.initializeApp({
    credential: admin.credential.cert(serviceAccount)
  });
  console.log('‚úÖ Firebase Admin SDK –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase Admin SDK:', error.message);
  console.log('üìù –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ Firebase Console:');
  console.log('üîó https://console.firebase.google.com/project/workincz-759c7/authentication/users');
  process.exit(1);
}

const auth = admin.auth();
const firestore = admin.firestore();

// –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
const testAccounts = [
  {
    role: 'candidate',
    email: 'test-candidate@workclick.cz',
    password: 'test1234',
    displayName: '–¢–µ—Å—Ç–æ–≤—ã–π –°–æ–∏—Å–∫–∞—Ç–µ–ª—å',
    profile: {
      role: 'candidate',
      firstName: '–ò–≤–∞–Ω',
      lastName: '–ü–µ—Ç—Ä–æ–≤',
      phone: '+420123456789',
      location: '–ü—Ä–∞–≥–∞',
      skills: ['JavaScript', 'React', 'Node.js'],
      experience: '3 –≥–æ–¥–∞',
      education: '–í—ã—Å—à–µ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ',
      languages: ['–†—É—Å—Å–∫–∏–π', '–ß–µ—à—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'],
      visaStatus: '–†–∞–±–æ—á–∞—è –≤–∏–∑–∞',
      salaryExpectation: '45000 CZK',
      availability: '–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ',
      createdAt: admin.firestore.FieldValue.serverTimestamp(),
      updatedAt: admin.firestore.FieldValue.serverTimestamp()
    }
  },
  {
    role: 'employer',
    email: 'test-employer@workclick.cz',
    password: 'test1234',
    displayName: '–¢–µ—Å—Ç–æ–≤—ã–π –†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å',
    profile: {
      role: 'employer',
      companyName: 'TechCorp s.r.o.',
      firstName: '–ê–Ω–Ω–∞',
      lastName: '–ù–æ–≤–∞–∫–æ–≤–∞',
      phone: '+420987654321',
      location: '–ü—Ä–∞–≥–∞',
      industry: 'IT –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      companySize: '50-100 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      website: 'https://techcorp.cz',
      description: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è IT –∫–æ–º–ø–∞–Ω–∏—è',
      verificationStatus: 'verified',
      subscriptionPlan: 'premium',
      createdAt: admin.firestore.FieldValue.serverTimestamp(),
      updatedAt: admin.firestore.FieldValue.serverTimestamp()
    }
  },
  {
    role: 'agency',
    email: 'test-agency@workclick.cz',
    password: 'test1234',
    displayName: '–¢–µ—Å—Ç–æ–≤–æ–µ –ê–≥–µ–Ω—Ç—Å—Ç–≤–æ',
    profile: {
      role: 'agency',
      companyName: 'WorkBridge Agency s.r.o.',
      firstName: '–ü–µ—Ç—Ä',
      lastName: '–°–º–∏—Ä–Ω–æ–≤',
      phone: '+420555666777',
      location: '–ë—Ä–Ω–æ',
      industry: '–†–µ–∫—Ä—É—Ç–∏–Ω–≥ –∏ HR',
      companySize: '10-25 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
      website: 'https://workbridge.cz',
      description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –ø–æ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤—É',
      licenseNumber: 'CZ123456789',
      verificationStatus: 'verified',
      subscriptionPlan: 'premium',
      createdAt: admin.firestore.FieldValue.serverTimestamp(),
      updatedAt: admin.firestore.FieldValue.serverTimestamp()
    }
  },
  {
    role: 'admin',
    email: 'test-admin@workclick.cz',
    password: 'test1234',
    displayName: '–¢–µ—Å—Ç–æ–≤—ã–π –ê–¥–º–∏–Ω',
    profile: {
      role: 'admin',
      firstName: '–ê–¥–º–∏–Ω',
      lastName: '–°–∏—Å—Ç–µ–º–Ω—ã–π',
      phone: '+420111222333',
      permissions: ['all'],
      isSuperAdmin: true,
      createdAt: admin.firestore.FieldValue.serverTimestamp(),
      updatedAt: admin.firestore.FieldValue.serverTimestamp()
    }
  }
];

async function createTestAccounts() {
  console.log('üé≠ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...');
  
  for (const account of testAccounts) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      try {
        const existingUser = await auth.getUserByEmail(account.email);
        console.log(`‚ö†Ô∏è  –ê–∫–∫–∞—É–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${account.email}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ Firestore
        await firestore.collection('users').doc(existingUser.uid).set({
          ...account.profile,
          email: account.email,
          displayName: account.displayName
        }, { merge: true });
        
        console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω: ${account.email}`);
        
      } catch (error) {
        if (error.code === 'auth/user-not-found') {
          // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const userRecord = await auth.createUser({
            email: account.email,
            password: account.password,
            displayName: account.displayName,
            emailVerified: true
          });
          
          console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${account.email} (UID: ${userRecord.uid})`);
          
          // –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Ñ–∏–ª—å –≤ Firestore
          await firestore.collection('users').doc(userRecord.uid).set({
            ...account.profile,
            email: account.email,
            displayName: account.displayName
          });
          
          console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω: ${account.email}`);
        } else {
          throw error;
        }
      }
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ ${account.email}:`, error.message);
    }
  }
  
  console.log('\nüéâ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìã –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:');
  testAccounts.forEach(account => {
    console.log(`   ${account.role}: ${account.email} / ${account.password}`);
  });
  
  console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ: https://workclick.cz/test-role-switcher.html');
  console.log('2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–æ–ª–µ–π üé≠');
  console.log('3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–æ–ª—è–º–∏');
}

createTestAccounts().catch(console.error);