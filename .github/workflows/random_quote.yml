name: Random Programming Quote Badge

on:
  schedule:
    - cron: '0 9 * * *'  # Каждый день в 9:00 UTC
  workflow_dispatch:     # Позволяет запускать вручную

permissions:
  contents: write

jobs:
  quote-badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN || github.token }}
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq
      
      - name: Get random programming quote
        id: quote
        run: |
          # Попробуем несколько API endpoints
          QUOTE_DATA=""
          
          # API 1: quotable.io (более надежный)
          if [ -z "$QUOTE_DATA" ]; then
            QUOTE_DATA=$(curl -s --max-time 10 "https://api.quotable.io/random?tags=technology,programming" 2>/dev/null || echo "")
            echo "Trying quotable.io: $QUOTE_DATA"
          fi
          
          # API 2: Запасной вариант
          if [ -z "$QUOTE_DATA" ] || [ "$QUOTE_DATA" == "{}" ] || [ "$QUOTE_DATA" == "null" ]; then
            echo "Using backup quote"
            QUOTE_DATA='{"content":"Code is like humor. When you have to explain it, it is bad.","author":"Cory House"}'
          fi
          
          # Извлекаем цитату и автора
          QUOTE_TEXT=$(echo "$QUOTE_DATA" | jq -r '.content // .quote // "Code is poetry."' 2>/dev/null || echo "Code is poetry.")
          QUOTE_AUTHOR=$(echo "$QUOTE_DATA" | jq -r '.author // "Unknown"' 2>/dev/null || echo "Unknown")
          
          # Очищаем цитату для badge (максимум 50 символов)
          QUOTE_TEXT=$(echo "$QUOTE_TEXT" | tr -d '"' | sed 's/[^a-zA-Z0-9 ]//g' | cut -c1-50)
          QUOTE_AUTHOR=$(echo "$QUOTE_AUTHOR" | tr -d '"' | sed 's/[^a-zA-Z0-9 ]//g' | cut -c1-20)
          
          echo "QUOTE=$QUOTE_TEXT" >> $GITHUB_ENV
          echo "AUTHOR=$QUOTE_AUTHOR" >> $GITHUB_ENV
          echo "Quote: $QUOTE_TEXT"
          echo "Author: $QUOTE_AUTHOR"
      
      - name: Generate badge
        run: |
          # Создаем безопасный URL для badge
          QUOTE_URL=$(echo "$QUOTE" | sed 's/ /%20/g' | sed 's/[^a-zA-Z0-9%]//g')
          AUTHOR_URL=$(echo "$AUTHOR" | sed 's/ /%20/g' | sed 's/[^a-zA-Z0-9%]//g')
          
          BADGE_URL="https://img.shields.io/badge/quote-${QUOTE_URL}--${AUTHOR_URL}-blue"
          echo "Generated badge URL: ${BADGE_URL}"
          
          # Создаем markdown с бейджем
          mkdir -p .github/badges
          echo "![Random Quote](${BADGE_URL})" > .github/badges/random-quote-badge.md
      
      - name: Commit badge
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Проверяем есть ли изменения
          git add .github/badges/random-quote-badge.md
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update random programming quote badge"
            
            # Определяем текущую ветку
            CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            git push origin $CURRENT_BRANCH
            echo "Badge updated successfully!"
          fi