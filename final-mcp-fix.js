#!/usr/bin/env node

const { execSync, spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîß –§–ò–ù–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ MCP\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
try {
  const mcpConfig = JSON.parse(fs.readFileSync('mcp.json', 'utf8'));
  const fullAutoQA = mcpConfig.mcpServers.FullAutoQA;
  
  console.log('‚úÖ mcp.json –∑–∞–≥—Ä—É–∂–µ–Ω');
  console.log(`üìã FullAutoQA –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:`);
  console.log(`   –ö–æ–º–∞–Ω–¥–∞: ${fullAutoQA.command}`);
  console.log(`   –ê—Ä–≥—É–º–µ–Ω—Ç—ã: ${JSON.stringify(fullAutoQA.args)}`);
  
  const serverPath = fullAutoQA.args[0];
  if (fs.existsSync(serverPath)) {
    console.log(`‚úÖ –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${serverPath}`);
  } else {
    console.log(`‚ùå –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${serverPath}`);
  }
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
}

// 2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FullAutoQA —Å–µ—Ä–≤–µ—Ä–∞...');
try {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...');
  
  const child = spawn('node', ['servers/src/testing/full-auto-qa-final.cjs'], {
    stdio: ['pipe', 'pipe', 'pipe'],
    detached: false
  });
  
  let output = '';
  let errorOutput = '';
  
  child.stdout.on('data', (data) => {
    output += data.toString();
  });
  
  child.stderr.on('data', (data) => {
    errorOutput += data.toString();
  });
  
  child.on('close', (code) => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º: ${code}`);
    if (output) console.log('üì§ –í—ã–≤–æ–¥:', output);
    if (errorOutput) console.log('üì§ –û—à–∏–±–∫–∏:', errorOutput);
  });
  
  // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º
  setTimeout(() => {
    if (!child.killed) {
      child.kill();
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }
  }, 3000);
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
}

// 3. –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π...');

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ 1: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
const alternative1 = {
  "FullAutoQA-Alt1": {
    "command": "node",
    "args": [
      "D:/workincz-site/node_modules/mcp-server-code-runner/dist/cli.js"
    ]
  }
};

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ 2: –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
const alternative2 = {
  "FullAutoQA-Alt2": {
    "command": "node",
    "args": [
      "D:/workincz-site/servers/src/testing/debug-mcp-server.cjs"
    ]
  }
};

try {
  fs.writeFileSync('mcp-alternative1.json', JSON.stringify(alternative1, null, 2));
  fs.writeFileSync('mcp-alternative2.json', JSON.stringify(alternative2, null, 2));
  console.log('‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã');
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:', error.message);
}

// 4. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ—à–µ–Ω–∏—é
console.log('\n4Ô∏è‚É£ –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –†–ï–®–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú–´:');

console.log(`
üîÑ –ü–û–õ–ù–ê–Ø –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –°–ò–°–¢–ï–ú–´ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û):

1. –ó–∞–∫—Ä–æ–π—Ç–µ Cursor –ø–æ–ª–Ω–æ—Å—Ç—å—é:
   - Ctrl + Shift + Q
   - –ò–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ –≤—Å–µ –æ–∫–Ω–∞ Cursor

2. –£–¥–∞–ª–∏—Ç–µ –∫—ç—à MCP:
   - –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫
   - –í–≤–µ–¥–∏—Ç–µ –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ: %APPDATA%\\Cursor\\User\\globalStorage
   - –ù–∞–π–¥–∏—Ç–µ –ø–∞–ø–∫—É "modelcontextprotocol"
   - –£–¥–∞–ª–∏—Ç–µ –µ—ë –ø–æ–ª–Ω–æ—Å—Ç—å—é

3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä (–í–ê–ñ–ù–û!)

4. –û—Ç–∫—Ä–æ–π—Ç–µ Cursor –∑–∞–Ω–æ–≤–æ

5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP:
   - Ctrl + Shift + P
   - –í–≤–µ–¥–∏—Ç–µ: "MCP: Open Settings"
   - –ù–∞–π–¥–∏—Ç–µ FullAutoQA
   - –î–æ–ª–∂–Ω–æ –±—ã—Ç—å "1 tool enabled" –∏–ª–∏ –±–æ–ª—å—à–µ

üìã –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–ê –û–°–¢–ê–ï–¢–°–Ø:

A) –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é:
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ mcp-alternative1.json –≤ mcp.json
   - –ó–∞–º–µ–Ω–∏—Ç–µ "FullAutoQA" –Ω–∞ "FullAutoQA-Alt1"

B) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Developer Tools:
   - F12 –≤ Cursor
   - –í–∫–ª–∞–¥–∫–∞ Console
   - –ù–∞–π–¥–∏—Ç–µ –æ—à–∏–±–∫–∏ MCP

C) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Node.js –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ñ–∞–π–ª—ã
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å

üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –í CURSOR:

1. –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12)
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Console
3. –ù–∞–π–¥–∏—Ç–µ –æ—à–∏–±–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å MCP
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∫–ª–∞–¥–∫—É Network –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –∫ MCP —Å–µ—Ä–≤–µ—Ä–∞–º
5. –ò—â–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–∏–ø–∞ "MCP server failed to start"

üìä –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:

‚úÖ "1 tool enabled" (–∏–ª–∏ –±–æ–ª—å—à–µ)
‚úÖ –ó–µ–ª–µ–Ω–∞—è —Ç–æ—á–∫–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç)
‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã:
   - analyze_code
   - run_tests  
   - generate_tests

‚ùå –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ "0 tools enabled":
   - –ü—Ä–æ–±–ª–µ–º–∞ –≤ –∫—ç—à–µ Cursor
   - –ù—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã
`);

// 5. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
console.log('\n5Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...');
const report = {
  timestamp: new Date().toISOString(),
  status: 'FINAL_SOLUTION_READY',
  server: 'full-auto-qa-final.cjs',
  tools: ['analyze_code', 'run_tests', 'generate_tests'],
  configuration: {
    command: 'node',
    args: ['D:/workincz-site/servers/src/testing/full-auto-qa-final.cjs']
  },
  instructions: [
    '–ó–∞–∫—Ä—ã—Ç—å Cursor –ø–æ–ª–Ω–æ—Å—Ç—å—é',
    '–£–¥–∞–ª–∏—Ç—å –∫—ç—à MCP',
    '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä',
    '–û—Ç–∫—Ä—ã—Ç—å Cursor –∑–∞–Ω–æ–≤–æ',
    '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP'
  ]
};

try {
  fs.writeFileSync('mcp-final-report.json', JSON.stringify(report, null, 2));
  console.log('‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ mcp-final-report.json');
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:', error.message);
}

console.log('\nüéØ –ö–õ–Æ–ß–ï–í–´–ï –í–´–í–û–î–´:');
console.log('1. –°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
console.log('2. –ü—Ä–æ–±–ª–µ–º–∞ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤ –∫—ç—à–µ Cursor');
console.log('3. –ù—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã');
console.log('4. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã');

console.log('\nüöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
console.log('1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å–∏—Å—Ç–µ–º—ã');
console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP –≤ Cursor');
console.log('3. –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Developer Tools –Ω–∞ –æ—à–∏–±–∫–∏');

console.log('\n‚úÖ –†–ï–®–ï–ù–ò–ï –ì–û–¢–û–í–û! –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å–∏—Å—Ç–µ–º—ã.'); 