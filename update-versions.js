const fs = require('fs');
const path = require('path');
const { generateHashedFiles } = require('./generate-hashed-files');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–π –≤ HTML —Ñ–∞–π–ª–∞—Ö
function updateHtmlFiles(manifest) {
  const htmlFiles = [
    'public/index.html',
    'public/dashboard.html',
    'public/employer-dashboard.html',
    'public/agency-dashboard.html',
    'public/admin-dashboard.html',
    'public/test-demo.html',
    'public/test-demo-fix.html',
    'public/test-auth.html',
    'public/simple-test.html'
  ];

  htmlFiles.forEach(htmlFile => {
    if (fs.existsSync(htmlFile)) {
      let content = fs.readFileSync(htmlFile, 'utf8');
      
      // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø—É—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–µ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
      Object.entries(manifest).forEach(([original, hashed]) => {
        const oldPath = original.replace(/\\/g, '/');
        const newPath = hashed.replace(/\\/g, '/');
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        const fileName = path.basename(original, '.js');
        
        // –ó–∞–º–µ–Ω—è–µ–º –≤ script —Ç–µ–≥–∞—Ö - –∏—â–µ–º –ª—é–±—É—é –≤–µ—Ä—Å–∏—é —Ñ–∞–π–ª–∞
        const oldScriptPattern = new RegExp(`src="js-hashed/${fileName}\\.[a-f0-9]+\\.js"`, 'g');
        const newScript = `src="${newPath}"`;
        content = content.replace(oldScriptPattern, newScript);
        
        // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø—É—Ç–∏ –±–µ–∑ —Ö–µ—à–∞
        const oldScriptWithoutHash = `src="js/${fileName}.js"`;
        content = content.replace(new RegExp(oldScriptWithoutHash, 'g'), newScript);
        
        // –ó–∞–º–µ–Ω—è–µ–º —Å –≤–µ—Ä—Å–∏—è–º–∏
        const oldScriptWithVersion = `src="js/${fileName}.js?v=`;
        content = content.replace(new RegExp(oldScriptWithVersion + '[^"]*"', 'g'), newScript);
      });
      
      fs.writeFileSync(htmlFile, content);
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω: ${htmlFile}`);
    }
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function updateVersions() {
  console.log('üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π —Ñ–∞–π–ª–æ–≤...');
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
  const manifest = generateHashedFiles();
  
  // –û–±–Ω–æ–≤–ª—è–µ–º HTML —Ñ–∞–π–ª—ã
  updateHtmlFiles(manifest);
  
  console.log('‚úÖ –í—Å–µ –≤–µ—Ä—Å–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  updateVersions();
}

module.exports = { updateVersions }; 