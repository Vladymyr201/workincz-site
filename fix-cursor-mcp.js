#!/usr/bin/env node

/**
 * üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û –§–ê–ô–õ–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò CURSOR MCP
 * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π mcp.json –≤ –ø–∞–ø–∫–µ .cursor
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');
const os = require('os');

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function logStep(step, message) {
  log(`\n${colors.cyan}${step}${colors.reset}`, 'bright');
  log(message);
}

class CursorMCPFixer {
  constructor() {
    this.platform = os.platform();
    this.cursorConfigPath = this.getCursorConfigPath();
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–µ .cursor
  getCursorConfigPath() {
    if (this.platform === 'win32') {
      return path.join(os.homedir(), '.cursor', 'mcp.json');
    } else if (this.platform === 'darwin') {
      return path.join(os.homedir(), '.cursor', 'mcp.json');
    } else {
      return path.join(os.homedir(), '.cursor', 'mcp.json');
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP
  createMCPConfig() {
    const config = {
      "mcpServers": {
        "filesystem": {
          "command": "npx",
          "args": ["-y", "@modelcontextprotocol/server-filesystem", "D:/workincz-site"]
        },
        "sequential-thinking": {
          "command": "npx",
          "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"]
        },
        "context7": {
          "command": "npx",
          "args": ["-y", "@upstash/context7-mcp"]
        },
        "playwright": {
          "command": "npx",
          "args": ["-y", "@playwright/mcp"]
        },
        "time": {
          "command": "python",
          "args": ["-m", "mcp_server_time"]
        },
        "memory": {
          "command": "npx",
          "args": ["-y", "@modelcontextprotocol/server-memory"]
        },
        "sentry": {
          "command": "npx",
          "args": ["-y", "mcp-server-sentry", "--auth-token", "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"]
        },
        "code-runner": {
          "command": "npx",
          "args": ["-y", "mcp-server-code-runner"]
        },
        "notion": {
          "command": "npx",
          "args": ["-y", "@notionhq/notion-mcp-server"]
        },
        "supabase": {
          "command": "npx",
          "args": ["-y", "@supabase/mcp-server-supabase"]
        },
        "wikipedia": {
          "command": "npx",
          "args": ["-y", "@shelm/wikipedia-mcp-server"]
        },
        "youtube": {
          "command": "npx",
          "args": ["-y", "youtube-data-mcp-server"]
        },
        "firebase-mcp": {
          "command": "npx",
          "args": ["-y", "firebase-tools@latest", "experimental:mcp"]
        },
        "github-mcp": {
          "command": "npx",
          "args": ["-y", "@modelcontextprotocol/server-github"],
          "env": {
            "GITHUB_PERSONAL_ACCESS_TOKEN": "YOUR_GITHUB_TOKEN_HERE",
            "GITHUB_API_URL": "https://api.github.com",
            "GH_HOST": "github.com"
          }
        }
      }
    };

    return config;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .cursor –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  ensureCursorDirectory() {
    const cursorDir = path.dirname(this.cursorConfigPath);
    if (!fs.existsSync(cursorDir)) {
      fs.mkdirSync(cursorDir, { recursive: true });
      log(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${cursorDir}`, 'green');
    } else {
      log(`‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${cursorDir}`, 'green');
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
  createBackup() {
    if (fs.existsSync(this.cursorConfigPath)) {
      const backupPath = this.cursorConfigPath + '.backup.' + Date.now();
      fs.copyFileSync(this.cursorConfigPath, backupPath);
      log(`üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${backupPath}`, 'green');
      return backupPath;
    }
    return null;
  }

  // –ó–∞–ø–∏—Å—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  writeConfig(config) {
    try {
      const content = JSON.stringify(config, null, 2);
      fs.writeFileSync(this.cursorConfigPath, content, 'utf8');
      log(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞: ${this.cursorConfigPath}`, 'green');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
      JSON.parse(content);
      log(`‚úÖ JSON —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω`, 'green');

      return true;
    } catch (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`, 'red');
      return false;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞
  verifyConfig() {
    try {
      const content = fs.readFileSync(this.cursorConfigPath, 'utf8');
      const config = JSON.parse(content);
      const serverCount = Object.keys(config.mcpServers || {}).length;
      
      log(`‚úÖ –§–∞–π–ª –ø—Ä–æ–≤–µ—Ä–µ–Ω: ${serverCount} —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ`, 'green');
      return true;
    } catch (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${error.message}`, 'red');
      return false;
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
  createInstructions() {
    const instructions = `# üéâ –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø CURSOR MCP –ò–°–ü–†–ê–í–õ–ï–ù–ê!

## ‚úÖ –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:

1. **–°–æ–∑–¥–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–∞–π–ª** \`${this.cursorConfigPath}\`
2. **–ò—Å–ø—Ä–∞–≤–ª–µ–Ω JSON —Å–∏–Ω—Ç–∞–∫—Å–∏—Å** - –±–æ–ª—å—à–µ –Ω–µ—Ç –æ—à–∏–±–∫–∏ "Unexpected end of JSON input"
3. **–î–æ–±–∞–≤–ª–µ–Ω—ã –≤—Å–µ —Å–µ—Ä–≤–µ—Ä—ã** (14 —Å–µ—Ä–≤–µ—Ä–æ–≤):
   - filesystem (12 tools)
   - sequential-thinking (1 tool)
   - context7 (2 tools)
   - playwright (24 tools)
   - time, memory, sentry
   - code-runner, notion, supabase
   - wikipedia, youtube, firebase-mcp, github-mcp

## üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

### 1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor
**–í–ê–ñ–ù–û:** –ó–∞–∫—Ä–æ–π—Ç–µ Cursor –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –∑–∞–Ω–æ–≤–æ

### 2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤: **Settings** ‚Üí **Tools & Integrations** ‚Üí **MCP Tools**

### 3. –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:
- ‚úÖ –û—à–∏–±–∫–∞ "JSON syntax error" –¥–æ–ª–∂–Ω–∞ –∏—Å—á–µ–∑–Ω—É—Ç—å
- ‚úÖ –î–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è –≤—Å–µ 14 —Å–µ—Ä–≤–µ—Ä–æ–≤
- ‚úÖ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã (–∑–µ–ª–µ–Ω—ã–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏)

### 4. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª: \`${this.cursorConfigPath}\`
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Cursor –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Developer Tools (F12)

## üìÅ –§–∞–π–ª—ã:
- **–ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:** \`${this.cursorConfigPath}\`
- **–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è:** \`${this.cursorConfigPath}.backup.*\`

## üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:
–ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Cursor –≤—Å–µ MCP —Å–µ—Ä–≤–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∏–¥–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—Ç—å!

---
**–°—Ç–∞—Ç—É—Å:** ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
**–í—Ä–µ–º—è:** ${new Date().toISOString()}
`;

    fs.writeFileSync('CURSOR_MCP_FIX_REPORT.md', instructions);
    log('‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: CURSOR_MCP_FIX_REPORT.md', 'green');
  }

  // –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
  async fix() {
    log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ì–õ–û–ë–ê–õ–¨–ù–û–ô –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò CURSOR MCP', 'bright');
    log('–ü—Ä–æ–µ–∫—Ç: WorkInCZ', 'cyan');
    log('–í—Ä–µ–º—è: ' + new Date().toISOString(), 'cyan');

    try {
      // 1. –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
      logStep('üìÅ –°–û–ó–î–ê–ù–ò–ï –î–ò–†–ï–ö–¢–û–†–ò–ò', '–°–æ–∑–¥–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é .cursor –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç...');
      this.ensureCursorDirectory();

      // 2. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
      logStep('üíæ –†–ï–ó–ï–†–í–ù–ê–Ø –ö–û–ü–ò–Ø', '–°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç...');
      this.createBackup();

      // 3. –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      logStep('‚öôÔ∏è –°–û–ó–î–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò', '–°–æ–∑–¥–∞—é –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MCP...');
      const config = this.createMCPConfig();

      // 4. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
      logStep('üíæ –ó–ê–ü–ò–°–¨ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò', '–ó–∞–ø–∏—Å—ã–≤–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª...');
      const success = this.writeConfig(config);

      if (!success) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
      }

      // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
      logStep('üîç –ü–†–û–í–ï–†–ö–ê', '–ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª...');
      this.verifyConfig();

      // 6. –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
      logStep('üìù –ò–ù–°–¢–†–£–ö–¶–ò–ò', '–°–æ–∑–¥–∞—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
      this.createInstructions();

      // 7. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      this.showResults();

      log('\nüéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!', 'bright');
      log('–¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.', 'cyan');

    } catch (error) {
      log('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ' + error.message, 'red');
      process.exit(1);
    }
  }

  // –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  showResults() {
    log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:', 'bright');
    log(`  –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${this.cursorConfigPath}`, 'blue');
    log(`  –í—Å–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: 14`, 'green');
    log(`  JSON —Å–∏–Ω—Ç–∞–∫—Å–∏—Å: ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–µ–Ω`, 'green');

    log('\n‚úÖ –ù–ê–°–¢–†–û–ï–ù–ù–´–ï –°–ï–†–í–ï–†–´:', 'green');
    const servers = [
      'filesystem (12 tools)',
      'sequential-thinking (1 tool)',
      'context7 (2 tools)',
      'playwright (24 tools)',
      'time',
      'memory',
      'sentry',
      'code-runner',
      'notion',
      'supabase',
      'wikipedia',
      'youtube',
      'firebase-mcp',
      'github-mcp'
    ];

    servers.forEach(server => {
      log(`  - ${server}`, 'green');
    });

    log('\nüìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:', 'cyan');
    log('  1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor', 'blue');
    log('  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Settings ‚Üí Tools & Integrations ‚Üí MCP Tools', 'blue');
    log('  3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ—à–∏–±–∫–∞ JSON –∏—Å—á–µ–∑–ª–∞', 'blue');
  }
}

// –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
if (require.main === module) {
  const fixer = new CursorMCPFixer();
  fixer.fix().then(() => {
    log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!', 'green');
  }).catch(error => {
    log('\n‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ' + error.message, 'red');
    process.exit(1);
  });
}

module.exports = CursorMCPFixer; 