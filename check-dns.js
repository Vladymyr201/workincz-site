#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ–º–µ–Ω–∞ workclick.cz
 * –ó–∞–ø—É—Å–∫: node check-dns.js
 */

const dns = require('dns').promises;
const https = require('https');
const http = require('http');

const DOMAIN = 'workclick.cz';
const EXPECTED_IPS = ['151.101.1.195', '151.101.65.195'];
const FIREBASE_URL = 'https://workclick-cz.web.app';

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è workclick.cz\n');

async function checkDNS() {
    try {
        console.log('üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ A –∑–∞–ø–∏—Å–µ–π...');
        const addresses = await dns.resolve4(DOMAIN);
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${addresses.length} A –∑–∞–ø–∏—Å–µ–π:`);
        addresses.forEach(ip => console.log(`   - ${ip}`));
        
        const hasCorrectIPs = EXPECTED_IPS.every(ip => addresses.includes(ip));
        if (hasCorrectIPs) {
            console.log('‚úÖ –í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞ –Ω–∞–π–¥–µ–Ω—ã!');
        } else {
            console.log('‚ùå –ù–µ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ IP –∞–¥—Ä–µ—Å–∞ –Ω–∞–π–¥–µ–Ω—ã');
            console.log('–û–∂–∏–¥–∞–µ–º—ã–µ IP:', EXPECTED_IPS.join(', '));
        }
        
        return hasCorrectIPs;
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ DNS:', error.message);
        return false;
    }
}

async function checkCNAME() {
    try {
        console.log('\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ CNAME –∑–∞–ø–∏—Å–∏ –¥–ª—è www...');
        const cname = await dns.resolveCname(`www.${DOMAIN}`);
        console.log(`‚úÖ CNAME –∑–∞–ø–∏—Å—å: www.${DOMAIN} ‚Üí ${cname[0]}`);
        
        if (cname[0] === FIREBASE_URL) {
            console.log('‚úÖ CNAME –∑–∞–ø–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
            return true;
        } else {
            console.log('‚ùå CNAME –∑–∞–ø–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ');
            console.log(`–û–∂–∏–¥–∞–µ—Ç—Å—è: ${FIREBASE_URL}`);
            return false;
        }
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ CNAME:', error.message);
        return false;
    }
}

async function checkWebsite() {
    return new Promise((resolve) => {
        console.log('\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞...');
        
        const req = https.get(`https://${DOMAIN}`, (res) => {
            console.log(`‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: ${res.statusCode} ${res.statusMessage}`);
            console.log(`   Content-Type: ${res.headers['content-type']}`);
            resolve(true);
        });
        
        req.on('error', (error) => {
            console.log('‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
            resolve(false);
        });
        
        req.setTimeout(10000, () => {
            console.log('‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∞–π—Ç–∞');
            req.destroy();
            resolve(false);
        });
    });
}

async function checkFirebaseSite() {
    return new Promise((resolve) => {
        console.log('\nüî• –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase —Å–∞–π—Ç–∞...');
        
        const req = https.get(FIREBASE_URL, (res) => {
            console.log(`‚úÖ Firebase —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: ${res.statusCode} ${res.statusMessage}`);
            resolve(true);
        });
        
        req.on('error', (error) => {
            console.log('‚ùå Firebase —Å–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
            resolve(false);
        });
        
        req.setTimeout(10000, () => {
            console.log('‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Firebase —Å–∞–π—Ç–∞');
            req.destroy();
            resolve(false);
        });
    });
}

async function main() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É DNS –Ω–∞—Å—Ç—Ä–æ–µ–∫...\n');
    
    const dnsOk = await checkDNS();
    const cnameOk = await checkCNAME();
    const websiteOk = await checkWebsite();
    const firebaseOk = await checkFirebaseSite();
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:');
    console.log(`   DNS A –∑–∞–ø–∏—Å–∏: ${dnsOk ? '‚úÖ' : '‚ùå'}`);
    console.log(`   CNAME –∑–∞–ø–∏—Å—å: ${cnameOk ? '‚úÖ' : '‚ùå'}`);
    console.log(`   –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: ${websiteOk ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Firebase —Å–∞–π—Ç: ${firebaseOk ? '‚úÖ' : '‚ùå'}`);
    
    if (dnsOk && cnameOk && websiteOk && firebaseOk) {
        console.log('\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –î–æ–º–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
        console.log(`üåê –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://${DOMAIN}`);
    } else {
        console.log('\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã.');
        console.log('üìñ –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ docs/VEDOS_DNS_SETUP.md');
        
        if (!dnsOk) {
            console.log('\nüîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è DNS:');
            console.log('1. –í–æ–π–¥–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª—å Vedos');
            console.log('2. –ù–∞–π–¥–∏—Ç–µ –¥–æ–º–µ–Ω workclick.cz');
            console.log('3. –î–æ–±–∞–≤—å—Ç–µ A –∑–∞–ø–∏—Å–∏: 151.101.1.195, 151.101.65.195');
        }
        
        if (!cnameOk) {
            console.log('\nüîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CNAME:');
            console.log('1. –î–æ–±–∞–≤—å—Ç–µ CNAME –∑–∞–ø–∏—Å—å: www ‚Üí workclick-cz.web.app');
        }
    }
    
    console.log('\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: docs/VEDOS_DNS_SETUP.md');
}

main().catch(console.error); 