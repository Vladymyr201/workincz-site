#!/usr/bin/env node

const { spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ FULLAUTOQA\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
try {
  const mcpConfig = JSON.parse(fs.readFileSync('mcp.json', 'utf8'));
  const fullAutoQA = mcpConfig.mcpServers.FullAutoQA;
  
  console.log('‚úÖ mcp.json –∑–∞–≥—Ä—É–∂–µ–Ω');
  console.log(`üìã FullAutoQA –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:`);
  console.log(`   –ö–æ–º–∞–Ω–¥–∞: ${fullAutoQA.command}`);
  console.log(`   –ê—Ä–≥—É–º–µ–Ω—Ç—ã: ${JSON.stringify(fullAutoQA.args)}`);
  
  if (fullAutoQA.command === 'npx' && fullAutoQA.args[0] === 'mcp-server-code-runner') {
    console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–æ—Ç–æ–≤—ã–π MCP —Å–µ—Ä–≤–µ—Ä');
  } else {
    console.log('‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
  }
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å npx
console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ npx...');
try {
  const npxVersion = require('child_process').execSync('npx --version', { encoding: 'utf8' });
  console.log(`‚úÖ npx –¥–æ—Å—Ç—É–ø–µ–Ω, –≤–µ—Ä—Å–∏—è: ${npxVersion.trim()}`);
} catch (error) {
  console.log('‚ùå npx –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å mcp-server-code-runner
console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ mcp-server-code-runner...');
try {
  const serverPath = require.resolve('mcp-server-code-runner');
  console.log(`‚úÖ mcp-server-code-runner –Ω–∞–π–¥–µ–Ω: ${serverPath}`);
  
  const packageJson = JSON.parse(fs.readFileSync(path.join(path.dirname(serverPath), 'package.json'), 'utf8'));
  console.log(`   –í–µ—Ä—Å–∏—è: ${packageJson.version}`);
  console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${packageJson.description}`);
} catch (error) {
  console.log('‚ùå mcp-server-code-runner –Ω–µ –Ω–∞–π–¥–µ–Ω:', error.message);
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
const server = spawn('npx', ['mcp-server-code-runner'], {
  stdio: ['pipe', 'pipe', 'pipe']
});

setTimeout(() => {
  if (!server.killed) {
    server.kill();
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ');
  }
}, 3000);

server.on('error', (error) => {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
const devDeps = packageJson.devDependencies || {};

const requiredDeps = ['vitest', 'jest', 'eslint', 'prettier'];
let allDepsInstalled = true;

requiredDeps.forEach(dep => {
  if (devDeps[dep]) {
    console.log(`‚úÖ ${dep} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
  } else {
    console.log(`‚ùå ${dep} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
    allDepsInstalled = false;
  }
});

if (allDepsInstalled) {
  console.log('‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
} else {
  console.log('‚ùå –ù–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
}

console.log('\nüéØ –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –í CURSOR:');
console.log('1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor –ø–æ–ª–Ω–æ—Å—Ç—å—é');
console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ Settings ‚Üí MCP Tools');
console.log('3. –ù–∞–π–¥–∏—Ç–µ FullAutoQA');
console.log('4. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å "tools enabled" (–Ω–µ 0)');
console.log('5. –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–µ–ª–µ–Ω–∞—è —Ç–æ—á–∫–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç)');

console.log('\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –°–†–ê–ë–ê–¢–´–í–ê–ù–ò–Ø:');
console.log('1. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª test-component.jsx');
console.log('2. FullAutoQA –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ä–∞–±–æ—Ç–∞—Ç—å');
console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç MCP');

console.log('\nüìã –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ –ò –†–ï–®–ï–ù–ò–Ø:');
console.log('üî¥ –ü—Ä–æ–±–ª–µ–º–∞: "0 tools enabled"');
console.log('   –†–µ—à–µ–Ω–∏–µ: –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Cursor, –æ—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à');
console.log('');
console.log('üî¥ –ü—Ä–æ–±–ª–µ–º–∞: –ö—Ä–∞—Å–Ω–∞—è —Ç–æ—á–∫–∞');
console.log('   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å Cursor –Ω–∞ –æ—à–∏–±–∫–∏');
console.log('');
console.log('üî¥ –ü—Ä–æ–±–ª–µ–º–∞: –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç');
console.log('   –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º');
console.log('');
console.log('üî¥ –ü—Ä–æ–±–ª–µ–º–∞: npx –Ω–µ –Ω–∞–π–¥–µ–Ω');
console.log('   –†–µ—à–µ–Ω–∏–µ: –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js');

console.log('\n‚úÖ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!');
console.log('üéâ FullAutoQA –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!'); 