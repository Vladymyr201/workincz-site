/**
 * –°–∏—Å—Ç–µ–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –∫–æ–¥—ã, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–ø–ª–∞—Ç—ã
 */

class ReferralSystem {
    constructor() {
        this.currentUser = null;
        this.referralCode = null;
        this.init();
    }

    async init() {
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ URL
        this.referralCode = this.getReferralCodeFromURL();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI
        this.initReferralUI();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        await this.loadReferralStats();
    }

    getReferralCodeFromURL() {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get('ref') || urlParams.get('referral');
    }

    initReferralUI() {
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞" –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.createInviteButton();
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
        this.createReferralModal();
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        this.addReferralToRegistration();
    }

    createInviteButton() {
        const nav = document.querySelector('nav') || document.querySelector('.navbar');
        if (!nav) return;

        const inviteBtn = document.createElement('button');
        inviteBtn.className = 'btn btn-primary btn-sm';
        inviteBtn.innerHTML = '<i class="fas fa-gift"></i> –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞';
        inviteBtn.onclick = () => this.showReferralModal();
        
        nav.appendChild(inviteBtn);
    }

    createReferralModal() {
        const modal = document.createElement('div');
        modal.className = 'modal fade';
        modal.id = 'referralModal';
        modal.innerHTML = `
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h6>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</h6>
                                <div class="input-group mb-3">
                                    <input type="text" class="form-control" id="referralLink" readonly>
                                    <button class="btn btn-outline-secondary" type="button" onclick="referralSystem.copyReferralLink()">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                </div>
                                
                                <h6>–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥</h6>
                                <div class="input-group mb-3">
                                    <input type="text" class="form-control" id="referralCode" readonly>
                                    <button class="btn btn-outline-secondary" type="button" onclick="referralSystem.copyReferralCode()">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <h6>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</h6>
                                <div id="referralStats">
                                    <div class="d-flex justify-content-between">
                                        <span>–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ:</span>
                                        <span id="totalInvited">0</span>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–æ—Å—å:</span>
                                        <span id="totalRegistered">0</span>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ:</span>
                                        <span id="totalEarned">0 ‚ÇΩ</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mt-4">
                            <h6>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</h6>
                            <div class="row">
                                <div class="col-md-4 text-center">
                                    <div class="card">
                                        <div class="card-body">
                                            <i class="fas fa-share-alt fa-2x text-primary mb-2"></i>
                                            <h6>1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π</h6>
                                            <small>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–∑—å—è–º –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 text-center">
                                    <div class="card">
                                        <div class="card-body">
                                            <i class="fas fa-user-plus fa-2x text-success mb-2"></i>
                                            <h6>2. –î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è</h6>
                                            <small>–ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</small>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4 text-center">
                                    <div class="card">
                                        <div class="card-body">
                                            <i class="fas fa-gift fa-2x text-warning mb-2"></i>
                                            <h6>3. –ü–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å</h6>
                                            <small>500 ‚ÇΩ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
    }

    addReferralToRegistration() {
        const registrationForm = document.querySelector('#registrationForm') || 
                                document.querySelector('form[data-form="registration"]');
        
        if (!registrationForm) return;

        const referralField = document.createElement('div');
        referralField.className = 'mb-3';
        referralField.innerHTML = `
            <label for="referralCode" class="form-label">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
            <input type="text" class="form-control" id="referralCode" name="referralCode" 
                   placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥—Ä—É–≥–∞" value="${this.referralCode || ''}">
        `;

        // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª–µ –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        const submitBtn = registrationForm.querySelector('button[type="submit"]');
        if (submitBtn) {
            submitBtn.parentNode.insertBefore(referralField, submitBtn);
        }
    }

    async generateReferralCode() {
        if (!this.currentUser) return null;

        const code = `${this.currentUser.uid.slice(0, 8)}${Date.now().toString(36)}`.toUpperCase();
        
        try {
            await firebase.firestore().collection('referrals').doc(this.currentUser.uid).set({
                code: code,
                userId: this.currentUser.uid,
                userEmail: this.currentUser.email,
                createdAt: firebase.firestore.FieldValue.serverTimestamp(),
                invitedUsers: [],
                totalEarned: 0
            });
            
            return code;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞:', error);
            return null;
        }
    }

    async loadReferralStats() {
        if (!this.currentUser) return;

        try {
            const doc = await firebase.firestore().collection('referrals').doc(this.currentUser.uid).get();
            
            if (doc.exists) {
                const data = doc.data();
                document.getElementById('referralLink').value = `${window.location.origin}?ref=${data.code}`;
                document.getElementById('referralCode').value = data.code;
                document.getElementById('totalInvited').textContent = data.invitedUsers?.length || 0;
                document.getElementById('totalRegistered').textContent = data.registeredUsers?.length || 0;
                document.getElementById('totalEarned').textContent = `${data.totalEarned || 0} ‚ÇΩ`;
            } else {
                // –°–æ–∑–¥–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
                const code = await this.generateReferralCode();
                if (code) {
                    document.getElementById('referralLink').value = `${window.location.origin}?ref=${code}`;
                    document.getElementById('referralCode').value = code;
                }
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:', error);
        }
    }

    async processReferralRegistration(userId, referralCode) {
        if (!referralCode) return;

        try {
            // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —ç—Ç–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º
            const referralQuery = await firebase.firestore().collection('referrals')
                .where('code', '==', referralCode.toUpperCase())
                .limit(1)
                .get();

            if (!referralQuery.empty) {
                const referralDoc = referralQuery.docs[0];
                const referralData = referralDoc.data();

                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–∞
                await referralDoc.ref.update({
                    invitedUsers: firebase.firestore.FieldValue.arrayUnion(userId),
                    lastInvitedAt: firebase.firestore.FieldValue.serverTimestamp()
                });

                // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ —Ä–µ—Ñ–µ—Ä–∞–ª–µ
                await firebase.firestore().collection('referralRegistrations').add({
                    referrerId: referralData.userId,
                    referredUserId: userId,
                    referralCode: referralCode,
                    registeredAt: firebase.firestore.FieldValue.serverTimestamp(),
                    status: 'registered'
                });

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—É
                await this.sendReferralNotification(referralData.userId, userId);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
        }
    }

    async sendReferralNotification(referrerId, referredUserId) {
        try {
            await firebase.firestore().collection('notifications').add({
                userId: referrerId,
                type: 'referral',
                title: '–ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª!',
                message: '–ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                data: {
                    referredUserId: referredUserId
                },
                createdAt: firebase.firestore.FieldValue.serverTimestamp(),
                read: false
            });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        }
    }

    async awardReferralBonus(referrerId, referredUserId) {
        try {
            const bonus = 500; // 500 —Ä—É–±–ª–µ–π –∑–∞ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ

            // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞
            await firebase.firestore().collection('users').doc(referrerId).update({
                balance: firebase.firestore.FieldValue.increment(bonus)
            });

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
            await firebase.firestore().collection('referrals').doc(referrerId).update({
                totalEarned: firebase.firestore.FieldValue.increment(bonus),
                registeredUsers: firebase.firestore.FieldValue.arrayUnion(referredUserId)
            });

            // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            await firebase.firestore().collection('transactions').add({
                userId: referrerId,
                type: 'referral_bonus',
                amount: bonus,
                description: '–ë–æ–Ω—É—Å –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞',
                data: {
                    referredUserId: referredUserId
                },
                createdAt: firebase.firestore.FieldValue.serverTimestamp()
            });

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–æ–Ω—É—Å–µ
            await this.sendBonusNotification(referrerId, bonus);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞:', error);
        }
    }

    async sendBonusNotification(userId, amount) {
        try {
            await firebase.firestore().collection('notifications').add({
                userId: userId,
                type: 'referral_bonus',
                title: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–æ–Ω—É—Å!',
                message: `–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å ${amount} ‚ÇΩ –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`,
                createdAt: firebase.firestore.FieldValue.serverTimestamp(),
                read: false
            });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–æ–Ω—É—Å–µ:', error);
        }
    }

    copyReferralLink() {
        const link = document.getElementById('referralLink');
        link.select();
        document.execCommand('copy');
        this.showToast('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!', 'success');
    }

    copyReferralCode() {
        const code = document.getElementById('referralCode');
        code.select();
        document.execCommand('copy');
        this.showToast('–ö–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!', 'success');
    }

    showReferralModal() {
        const modal = new bootstrap.Modal(document.getElementById('referralModal'));
        modal.show();
    }

    showToast(message, type = 'info') {
        // –°–æ–∑–¥–∞–µ–º toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const toast = document.createElement('div');
        toast.className = `toast align-items-center text-white bg-${type} border-0`;
        toast.setAttribute('role', 'alert');
        toast.innerHTML = `
            <div class="d-flex">
                <div class="toast-body">${message}</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
            </div>
        `;
        
        const container = document.querySelector('.toast-container') || document.body;
        container.appendChild(toast);
        
        const bsToast = new bootstrap.Toast(toast);
        bsToast.show();
        
        // –£–¥–∞–ª—è–µ–º toast –ø–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–∏—è
        toast.addEventListener('hidden.bs.toast', () => {
            container.removeChild(toast);
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
let referralSystem;

document.addEventListener('DOMContentLoaded', () => {
    referralSystem = new ReferralSystem();
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.referralSystem = referralSystem; 