/**
 * UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç–∑—ã–≤–æ–≤
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Ç–∑—ã–≤–æ–≤, —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –∏ –∏—Ö —Å–æ–∑–¥–∞–Ω–∏—è
 */

class ReviewsUI {
    constructor(reviewsSystem) {
        this.system = reviewsSystem;
        this.currentTarget = null;
        this.isVisible = false;
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –æ—Ç–∑—ã–≤–æ–≤
     */
    init() {
        this.createReviewsUI();
        this.setupEventListeners();
        console.log('‚≠ê UI –æ—Ç–∑—ã–≤–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –æ—Ç–∑—ã–≤–æ–≤
     */
    createReviewsUI() {
        // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∑—ã–≤–æ–≤
        const modal = document.createElement('div');
        modal.id = 'reviewsModal';
        modal.className = 'fixed inset-0 bg-black bg-opacity-50 hidden z-50';
        modal.innerHTML = `
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-lg p-6 max-w-6xl w-full max-h-screen overflow-y-auto">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-2xl font-bold text-gray-800 flex items-center">
                            <span class="mr-2">‚≠ê</span>
                            –û—Ç–∑—ã–≤—ã –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏
                        </h3>
                        <button id="closeReviewsModal" class="text-gray-500 hover:text-gray-700">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                    
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                        <!-- –†–µ–π—Ç–∏–Ω–≥ -->
                        <div class="lg:col-span-1">
                            <div class="bg-gray-50 rounded-lg p-4">
                                <h4 class="text-lg font-semibold mb-4">üìä –†–µ–π—Ç–∏–Ω–≥</h4>
                                <div id="ratingDisplay" class="space-y-4">
                                    <div class="text-center text-gray-500 py-8">
                                        –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é –∏–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
                                    </div>
                                </div>
                            </div>
                            
                            <!-- –¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥–∏ -->
                            <div class="bg-gray-50 rounded-lg p-4 mt-4">
                                <h4 class="text-lg font-semibold mb-4">üèÜ –¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥–∏</h4>
                                <div class="space-y-2">
                                    <button id="showTopEmployers" class="w-full text-left p-2 hover:bg-gray-100 rounded">
                                        –õ—É—á—à–∏–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–∏
                                    </button>
                                    <button id="showTopCandidates" class="w-full text-left p-2 hover:bg-gray-100 rounded">
                                        –õ—É—á—à–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ã
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- –û—Ç–∑—ã–≤—ã -->
                        <div class="lg:col-span-2">
                            <div class="flex items-center justify-between mb-4">
                                <h4 class="text-lg font-semibold">üí¨ –û—Ç–∑—ã–≤—ã</h4>
                                <button id="addReviewBtn" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                                    + –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤
                                </button>
                            </div>
                            <div id="reviewsList" class="space-y-4">
                                <div class="text-center text-gray-500 py-8">
                                    –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é –∏–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;

        document.body.appendChild(modal);

        // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
        const reviewModal = document.createElement('div');
        reviewModal.id = 'addReviewModal';
        reviewModal.className = 'fixed inset-0 bg-black bg-opacity-50 hidden z-50';
        reviewModal.innerHTML = `
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-lg p-6 max-w-2xl w-full max-h-screen overflow-y-auto">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-xl font-bold text-gray-800">–ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤</h3>
                        <button id="closeAddReviewModal" class="text-gray-500 hover:text-gray-700">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                    
                    <form id="reviewForm" class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–∑—ã–≤–∞</label>
                            <input type="text" id="reviewTitle" class="w-full border border-gray-300 rounded px-3 py-2" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–∞</label>
                            <textarea id="reviewContent" class="w-full border border-gray-300 rounded px-3 py-2" rows="5" required></textarea>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥</label>
                            <div id="overallRating" class="flex space-x-2">
                                <button type="button" class="rating-star text-2xl" data-rating="1">‚òÜ</button>
                                <button type="button" class="rating-star text-2xl" data-rating="2">‚òÜ</button>
                                <button type="button" class="rating-star text-2xl" data-rating="3">‚òÜ</button>
                                <button type="button" class="rating-star text-2xl" data-rating="4">‚òÜ</button>
                                <button type="button" class="rating-star text-2xl" data-rating="5">‚òÜ</button>
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–†–µ–π—Ç–∏–Ω–≥–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</label>
                            <div id="categoryRatings" class="space-y-2">
                                <!-- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ü–ª—é—Å—ã</label>
                                <div id="prosList" class="space-y-2">
                                    <div class="flex space-x-2">
                                        <input type="text" class="pro-input flex-1 border border-gray-300 rounded px-3 py-2" placeholder="–î–æ–±–∞–≤–∏—Ç—å –ø–ª—é—Å">
                                        <button type="button" id="addPro" class="px-3 py-2 bg-green-600 text-white rounded hover:bg-green-700">+</button>
                                    </div>
                                </div>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ú–∏–Ω—É—Å—ã</label>
                                <div id="consList" class="space-y-2">
                                    <div class="flex space-x-2">
                                        <input type="text" class="con-input flex-1 border border-gray-300 rounded px-3 py-2" placeholder="–î–æ–±–∞–≤–∏—Ç—å –º–∏–Ω—É—Å">
                                        <button type="button" id="addCon" class="px-3 py-2 bg-red-600 text-white rounded hover:bg-red-700">+</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</label>
                            <textarea id="reviewRecommendations" class="w-full border border-gray-300 rounded px-3 py-2" rows="3" placeholder="–í–∞—à–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏..."></textarea>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–î–æ–ª–∂–Ω–æ—Å—Ç—å</label>
                                <input type="text" id="reviewPosition" class="w-full border border-gray-300 rounded px-3 py-2">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–õ–æ–∫–∞—Ü–∏—è</label>
                                <input type="text" id="reviewLocation" class="w-full border border-gray-300 rounded px-3 py-2">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ü–µ—Ä–∏–æ–¥ —Ä–∞–±–æ—Ç—ã</label>
                                <select id="reviewEmploymentPeriod" class="w-full border border-gray-300 rounded px-3 py-2">
                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥</option>
                                    <option value="0-6">–ú–µ–Ω–µ–µ 6 –º–µ—Å—è—Ü–µ–≤</option>
                                    <option value="6-12">6-12 –º–µ—Å—è—Ü–µ–≤</option>
                                    <option value="12-24">1-2 –≥–æ–¥–∞</option>
                                    <option value="24+">–ë–æ–ª–µ–µ 2 –ª–µ—Ç</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="flex items-center">
                            <input type="checkbox" id="reviewAnonymous" class="mr-2">
                            <label for="reviewAnonymous" class="text-sm text-gray-700">–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ</label>
                        </div>
                        
                        <div class="flex space-x-3">
                            <button type="button" id="cancelReview" class="flex-1 px-4 py-2 text-gray-600 border border-gray-300 rounded hover:bg-gray-50">
                                –û—Ç–º–µ–Ω–∞
                            </button>
                            <button type="submit" id="submitReview" class="flex-1 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                                –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        `;

        document.body.appendChild(reviewModal);
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        document.addEventListener('click', (e) => {
            if (e.target.id === 'closeReviewsModal') {
                this.hideModal();
            }
            if (e.target.id === 'closeAddReviewModal') {
                this.hideAddReviewModal();
            }
            if (e.target.id === 'cancelReview') {
                this.hideAddReviewModal();
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        document.addEventListener('click', (e) => {
            const modal = document.getElementById('reviewsModal');
            if (e.target === modal) {
                this.hideModal();
            }
            
            const reviewModal = document.getElementById('addReviewModal');
            if (e.target === reviewModal) {
                this.hideAddReviewModal();
            }
        });

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
        document.addEventListener('click', (e) => {
            if (e.target.id === 'addReviewBtn') {
                this.showAddReviewModal();
            }
        });

        // –§–æ—Ä–º–∞ –æ—Ç–∑—ã–≤–∞
        document.addEventListener('submit', (e) => {
            if (e.target.id === 'reviewForm') {
                e.preventDefault();
                this.handleAddReview();
            }
        });

        // –†–µ–π—Ç–∏–Ω–≥–∏ –ø–æ –∑–≤–µ–∑–¥–∞–º
        document.addEventListener('click', (e) => {
            if (e.target.classList.contains('rating-star')) {
                const rating = parseInt(e.target.dataset.rating);
                this.setOverallRating(rating);
            }
        });

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–æ–≤/–º–∏–Ω—É—Å–æ–≤
        document.addEventListener('click', (e) => {
            if (e.target.id === 'addPro') {
                this.addPro();
            }
            if (e.target.id === 'addCon') {
                this.addCon();
            }
        });

        // –¢–æ–ø —Ä–µ–π—Ç–∏–Ω–≥–∏
        document.addEventListener('click', (e) => {
            if (e.target.id === 'showTopEmployers') {
                this.showTopEmployers();
            }
            if (e.target.id === 'showTopCandidates') {
                this.showTopCandidates();
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∑—ã–≤–æ–≤
     */
    showModal(targetId = null, targetType = null) {
        this.currentTarget = targetId ? { id: targetId, type: targetType } : null;
        const modal = document.getElementById('reviewsModal');
        if (modal) {
            modal.classList.remove('hidden');
            this.isVisible = true;
            this.loadReviewsData();
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∑—ã–≤–æ–≤
     */
    hideModal() {
        const modal = document.getElementById('reviewsModal');
        if (modal) {
            modal.classList.add('hidden');
            this.isVisible = false;
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
     */
    showAddReviewModal() {
        const modal = document.getElementById('addReviewModal');
        if (modal) {
            modal.classList.remove('hidden');
            this.initializeReviewForm();
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
     */
    hideAddReviewModal() {
        const modal = document.getElementById('addReviewModal');
        if (modal) {
            modal.classList.add('hidden');
            this.resetReviewForm();
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –æ—Ç–∑—ã–≤–∞
     */
    initializeReviewForm() {
        this.setOverallRating(0);
        this.initializeCategoryRatings();
        this.resetProsCons();
    }

    /**
     * –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –æ—Ç–∑—ã–≤–∞
     */
    resetReviewForm() {
        document.getElementById('reviewForm').reset();
        this.setOverallRating(0);
        this.resetProsCons();
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—â–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
     */
    setOverallRating(rating) {
        const stars = document.querySelectorAll('.rating-star');
        stars.forEach((star, index) => {
            if (index < rating) {
                star.textContent = '‚òÖ';
                star.classList.add('text-yellow-400');
            } else {
                star.textContent = '‚òÜ';
                star.classList.remove('text-yellow-400');
            }
        });
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
     */
    initializeCategoryRatings() {
        const container = document.getElementById('categoryRatings');
        container.innerHTML = '';

        for (const [categoryId, category] of this.system.categories) {
            const categoryDiv = document.createElement('div');
            categoryDiv.className = 'flex items-center justify-between';
            categoryDiv.innerHTML = `
                <label class="text-sm font-medium text-gray-700">${category.icon} ${category.name}</label>
                <div class="flex space-x-1">
                    <button type="button" class="category-star text-lg" data-category="${categoryId}" data-rating="1">‚òÜ</button>
                    <button type="button" class="category-star text-lg" data-category="${categoryId}" data-rating="2">‚òÜ</button>
                    <button type="button" class="category-star text-lg" data-category="${categoryId}" data-rating="3">‚òÜ</button>
                    <button type="button" class="category-star text-lg" data-category="${categoryId}" data-rating="4">‚òÜ</button>
                    <button type="button" class="category-star text-lg" data-category="${categoryId}" data-rating="5">‚òÜ</button>
                </div>
            `;
            container.appendChild(categoryDiv);
        }

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π–Ω—ã—Ö –∑–≤–µ–∑–¥
        document.querySelectorAll('.category-star').forEach(star => {
            star.addEventListener('click', (e) => {
                const category = e.target.dataset.category;
                const rating = parseInt(e.target.dataset.rating);
                this.setCategoryRating(category, rating);
            });
        });
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    setCategoryRating(category, rating) {
        const stars = document.querySelectorAll(`[data-category="${category}"]`);
        stars.forEach((star, index) => {
            if (index < rating) {
                star.textContent = '‚òÖ';
                star.classList.add('text-yellow-400');
            } else {
                star.textContent = '‚òÜ';
                star.classList.remove('text-yellow-400');
            }
        });
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
     */
    addPro() {
        const input = document.querySelector('.pro-input');
        const value = input.value.trim();
        if (!value) return;

        const prosList = document.getElementById('prosList');
        const proDiv = document.createElement('div');
        proDiv.className = 'flex items-center space-x-2';
        proDiv.innerHTML = `
            <span class="text-sm text-green-600">‚úì ${value}</span>
            <button type="button" class="remove-pro text-red-500 hover:text-red-700">√ó</button>
        `;
        
        prosList.appendChild(proDiv);
        input.value = '';

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        proDiv.querySelector('.remove-pro').addEventListener('click', () => {
            proDiv.remove();
        });
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∏–Ω—É—Å–∞
     */
    addCon() {
        const input = document.querySelector('.con-input');
        const value = input.value.trim();
        if (!value) return;

        const consList = document.getElementById('consList');
        const conDiv = document.createElement('div');
        conDiv.className = 'flex items-center space-x-2';
        conDiv.innerHTML = `
            <span class="text-sm text-red-600">‚úó ${value}</span>
            <button type="button" class="remove-con text-red-500 hover:text-red-700">√ó</button>
        `;
        
        consList.appendChild(conDiv);
        input.value = '';

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        conDiv.querySelector('.remove-con').addEventListener('click', () => {
            conDiv.remove();
        });
    }

    /**
     * –°–±—Ä–æ—Å –ø–ª—é—Å–æ–≤ –∏ –º–∏–Ω—É—Å–æ–≤
     */
    resetProsCons() {
        document.getElementById('prosList').innerHTML = `
            <div class="flex space-x-2">
                <input type="text" class="pro-input flex-1 border border-gray-300 rounded px-3 py-2" placeholder="–î–æ–±–∞–≤–∏—Ç—å –ø–ª—é—Å">
                <button type="button" id="addPro" class="px-3 py-2 bg-green-600 text-white rounded hover:bg-green-700">+</button>
            </div>
        `;
        
        document.getElementById('consList').innerHTML = `
            <div class="flex space-x-2">
                <input type="text" class="con-input flex-1 border border-gray-300 rounded px-3 py-2" placeholder="–î–æ–±–∞–≤–∏—Ç—å –º–∏–Ω—É—Å">
                <button type="button" id="addCon" class="px-3 py-2 bg-red-600 text-white rounded hover:bg-red-700">+</button>
            </div>
        `;
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
     */
    loadReviewsData() {
        if (this.currentTarget) {
            this.updateRatingDisplay();
            this.updateReviewsList();
        } else {
            this.showTopEmployers();
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
     */
    updateRatingDisplay() {
        const container = document.getElementById('ratingDisplay');
        const rating = this.system.getRating(this.currentTarget.id, this.currentTarget.type);

        const ratingHtml = `
            <div class="text-center">
                <div class="text-4xl font-bold text-blue-600">${rating.overallRating}</div>
                <div class="flex justify-center space-x-1 my-2">
                    ${this.generateStars(rating.overallRating)}
                </div>
                <div class="text-sm text-gray-600">${rating.totalReviews} –æ—Ç–∑—ã–≤–æ–≤</div>
                ${rating.verifiedReviews > 0 ? `
                    <div class="text-xs text-green-600 mt-1">${rating.verifiedReviews} –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö</div>
                ` : ''}
            </div>
            
            <div class="space-y-2 mt-4">
                ${Object.entries(rating.categoryRatings).map(([categoryId, score]) => {
                    const category = this.system.categories.get(categoryId);
                    return `
                        <div class="flex items-center justify-between text-sm">
                            <span>${category.icon} ${category.name}</span>
                            <div class="flex items-center space-x-1">
                                <span class="font-medium">${score}</span>
                                <div class="flex space-x-1">
                                    ${this.generateStars(score, 'text-xs')}
                                </div>
                            </div>
                        </div>
                    `;
                }).join('')}
            </div>
        `;

        container.innerHTML = ratingHtml;
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–∑—ã–≤–æ–≤
     */
    updateReviewsList() {
        const container = document.getElementById('reviewsList');
        const reviews = this.system.getReviews(this.currentTarget.id, this.currentTarget.type, {
            limit: 10,
            sortBy: 'createdAt',
            sortOrder: 'desc'
        });

        if (reviews.length === 0) {
            container.innerHTML = `
                <div class="text-center text-gray-500 py-8">
                    <div class="text-4xl mb-4">‚≠ê</div>
                    <p>–û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
                    <p class="text-sm mt-2">–ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –æ—Å—Ç–∞–≤–∏—Ç –æ—Ç–∑—ã–≤!</p>
                </div>
            `;
            return;
        }

        const reviewsHtml = reviews.map(review => {
            const badges = review.badges.map(badgeId => {
                const badge = this.system.badges.get(badgeId);
                return badge ? `
                    <span class="inline-block px-2 py-1 text-xs rounded" style="background-color: ${badge.color}; color: white;">
                        ${badge.icon} ${badge.name}
                    </span>
                ` : '';
            }).join('');

            return `
                <div class="border rounded-lg p-4 hover:bg-gray-50">
                    <div class="flex items-start justify-between mb-2">
                        <div>
                            <h5 class="font-medium text-gray-800">${review.title}</h5>
                            <div class="flex items-center space-x-2 mt-1">
                                <div class="flex space-x-1">
                                    ${this.generateStars(review.rating)}
                                </div>
                                <span class="text-sm text-gray-500">${new Date(review.createdAt).toLocaleDateString('ru-RU')}</span>
                                ${review.isVerified ? '<span class="text-green-600 text-sm">‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω</span>' : ''}
                            </div>
                        </div>
                        <div class="flex space-x-1">
                            ${badges}
                        </div>
                    </div>
                    
                    <p class="text-gray-600 mb-3">${review.content}</p>
                    
                    ${review.pros.length > 0 ? `
                        <div class="mb-2">
                            <span class="text-sm font-medium text-green-600">–ü–ª—é—Å—ã:</span>
                            <div class="text-sm text-gray-600">
                                ${review.pros.map(pro => `‚Ä¢ ${pro}`).join('<br>')}
                            </div>
                        </div>
                    ` : ''}
                    
                    ${review.cons.length > 0 ? `
                        <div class="mb-2">
                            <span class="text-sm font-medium text-red-600">–ú–∏–Ω—É—Å—ã:</span>
                            <div class="text-sm text-gray-600">
                                ${review.cons.map(con => `‚Ä¢ ${con}`).join('<br>')}
                            </div>
                        </div>
                    ` : ''}
                    
                    ${review.recommendations.length > 0 ? `
                        <div class="mb-3">
                            <span class="text-sm font-medium text-blue-600">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</span>
                            <div class="text-sm text-gray-600">
                                ${review.recommendations.map(rec => `‚Ä¢ ${rec}`).join('<br>')}
                            </div>
                        </div>
                    ` : ''}
                    
                    <div class="flex items-center justify-between text-sm text-gray-500">
                        <div class="flex space-x-4">
                            <button class="helpful-btn hover:text-blue-600" data-review-id="${review.id}">
                                üëç –ü–æ–ª–µ–∑–Ω–æ (${review.isHelpful})
                            </button>
                            <button class="not-helpful-btn hover:text-red-600" data-review-id="${review.id}">
                                üëé –ù–µ –ø–æ–ª–µ–∑–Ω–æ (${review.isNotHelpful})
                            </button>
                        </div>
                        <button class="report-btn hover:text-red-600" data-review-id="${review.id}">
                            ‚ö†Ô∏è –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è
                        </button>
                    </div>
                </div>
            `;
        }).join('');

        container.innerHTML = reviewsHtml;

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        this.setupReviewButtons();
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫ –æ—Ç–∑—ã–≤–æ–≤
     */
    setupReviewButtons() {
        document.querySelectorAll('.helpful-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const reviewId = e.target.dataset.reviewId;
                this.voteHelpful(reviewId, true);
            });
        });

        document.querySelectorAll('.not-helpful-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const reviewId = e.target.dataset.reviewId;
                this.voteHelpful(reviewId, false);
            });
        });

        document.querySelectorAll('.report-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const reviewId = e.target.dataset.reviewId;
                this.reportReview(reviewId);
            });
        });
    }

    /**
     * –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –ø–æ–ª–µ–∑–Ω–æ—Å—Ç—å
     */
    voteHelpful(reviewId, isHelpful) {
        const userId = 'current-user'; // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø–æ–ª—É—á–∞–ª–∏ –±—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        this.system.voteHelpful(reviewId, userId, isHelpful);
        this.updateReviewsList();
        this.showSuccessMessage(isHelpful ? '–û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø–æ–ª–µ–∑–Ω–æ–µ' : '–û—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –Ω–µ –ø–æ–ª–µ–∑–Ω–æ–µ');
    }

    /**
     * –ñ–∞–ª–æ–±–∞ –Ω–∞ –æ—Ç–∑—ã–≤
     */
    reportReview(reviewId) {
        const reason = prompt('–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –∂–∞–ª–æ–±—ã:');
        if (!reason) return;

        const description = prompt('–û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ:');
        const reporterId = 'current-user';

        this.system.reportReview(reviewId, reporterId, reason, description || '');
        this.showSuccessMessage('–ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–π
     */
    showTopEmployers() {
        const employers = this.system.getTopEmployers(10);
        this.displayTopList(employers, 'employer', '–õ—É—á—à–∏–µ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–∏');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
     */
    showTopCandidates() {
        const candidates = this.system.getTopCandidates(10);
        this.displayTopList(candidates, 'candidate', '–õ—É—á—à–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ã');
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–ø —Å–ø–∏—Å–∫–∞
     */
    displayTopList(items, type, title) {
        const container = document.getElementById('reviewsList');
        
        if (items.length === 0) {
            container.innerHTML = `
                <div class="text-center text-gray-500 py-8">
                    <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
                </div>
            `;
            return;
        }

        const itemsHtml = `
            <h4 class="text-lg font-semibold mb-4">${title}</h4>
            <div class="space-y-3">
                ${items.map((item, index) => `
                    <div class="border rounded-lg p-4 hover:bg-gray-50 cursor-pointer" 
                         data-target-id="${item.targetId}" data-target-type="${type}">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-3">
                                <div class="text-2xl font-bold text-gray-400">#${index + 1}</div>
                                <div>
                                    <h5 class="font-medium">${type === 'employer' ? '–ö–æ–º–ø–∞–Ω–∏—è' : '–ö–∞–Ω–¥–∏–¥–∞—Ç'} ${item.targetId}</h5>
                                    <div class="flex items-center space-x-2 mt-1">
                                        <div class="flex space-x-1">
                                            ${this.generateStars(item.overallRating)}
                                        </div>
                                        <span class="text-sm text-gray-500">${item.overallRating}</span>
                                        <span class="text-sm text-gray-500">(${item.totalReviews} –æ—Ç–∑—ã–≤–æ–≤)</span>
                                    </div>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-sm text-gray-500">${item.verifiedReviews} –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö</div>
                            </div>
                        </div>
                    </div>
                `).join('')}
            </div>
        `;

        container.innerHTML = itemsHtml;

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
        document.querySelectorAll('[data-target-id]').forEach(item => {
            item.addEventListener('click', (e) => {
                const targetId = e.currentTarget.dataset.targetId;
                const targetType = e.currentTarget.dataset.targetType;
                this.currentTarget = { id: targetId, type: targetType };
                this.loadReviewsData();
            });
        });
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–≤–µ–∑–¥
     */
    generateStars(rating, className = 'text-lg') {
        const fullStars = Math.floor(rating);
        const hasHalfStar = rating % 1 >= 0.5;
        const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

        let stars = '';
        for (let i = 0; i < fullStars; i++) {
            stars += `<span class="${className} text-yellow-400">‚òÖ</span>`;
        }
        if (hasHalfStar) {
            stars += `<span class="${className} text-yellow-400">‚òÜ</span>`;
        }
        for (let i = 0; i < emptyStars; i++) {
            stars += `<span class="${className} text-gray-300">‚òÜ</span>`;
        }
        return stars;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
     */
    handleAddReview() {
        if (!this.currentTarget) {
            this.showErrorMessage('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é –∏–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞');
            return;
        }

        const title = document.getElementById('reviewTitle').value;
        const content = document.getElementById('reviewContent').value;
        const recommendations = document.getElementById('reviewRecommendations').value;
        const position = document.getElementById('reviewPosition').value;
        const location = document.getElementById('reviewLocation').value;
        const employmentPeriod = document.getElementById('reviewEmploymentPeriod').value;
        const isAnonymous = document.getElementById('reviewAnonymous').checked;

        if (!title || !content) {
            this.showErrorMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞
        const overallRating = document.querySelectorAll('.rating-star.text-yellow-400').length;

        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        const categoryRatings = {};
        document.querySelectorAll('.category-star.text-yellow-400').forEach(star => {
            const category = star.dataset.category;
            const rating = parseInt(star.dataset.rating);
            if (!categoryRatings[category]) {
                categoryRatings[category] = 0;
            }
            categoryRatings[category] = Math.max(categoryRatings[category], rating);
        });

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª—é—Å–æ–≤ –∏ –º–∏–Ω—É—Å–æ–≤
        const pros = Array.from(document.querySelectorAll('#prosList span')).map(span => 
            span.textContent.replace('‚úì ', '')
        ).filter(text => text !== '‚úì');

        const cons = Array.from(document.querySelectorAll('#consList span')).map(span => 
            span.textContent.replace('‚úó ', '')
        ).filter(text => text !== '‚úó');

        const reviewData = {
            authorId: 'current-user',
            targetId: this.currentTarget.id,
            targetType: this.currentTarget.type,
            title: title,
            content: content,
            rating: overallRating,
            categoryRatings: categoryRatings,
            pros: pros,
            cons: cons,
            recommendations: recommendations ? [recommendations] : [],
            isAnonymous: isAnonymous,
            position: position,
            location: location,
            employmentPeriod: employmentPeriod ? { duration: parseInt(employmentPeriod) } : null
        };

        this.system.createReview(reviewData);
        this.hideAddReviewModal();
        this.loadReviewsData();
        this.showSuccessMessage('–û—Ç–∑—ã–≤ –¥–æ–±–∞–≤–ª–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
     */
    showSuccessMessage(message) {
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform transition-all duration-300 translate-x-full';
        toast.textContent = message;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.classList.remove('translate-x-full');
        }, 100);
        
        setTimeout(() => {
            toast.classList.add('translate-x-full');
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        }, 3000);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showErrorMessage(message) {
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform transition-all duration-300 translate-x-full';
        toast.textContent = message;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.classList.remove('translate-x-full');
        }, 100);
        
        setTimeout(() => {
            toast.classList.add('translate-x-full');
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        }, 3000);
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –æ—Ç–∑—ã–≤–æ–≤
     */
    createReviewsButton() {
        const button = document.createElement('button');
        button.id = 'openReviewsModal';
        button.className = 'fixed bottom-4 right-44 bg-yellow-600 text-white p-3 rounded-full shadow-lg hover:bg-yellow-700 transition-colors z-50';
        button.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
            </svg>
        `;
        button.title = '–û—Ç–∑—ã–≤—ã –∏ —Ä–µ–π—Ç–∏–Ω–≥–∏';

        button.addEventListener('click', () => {
            this.showModal();
        });

        document.body.appendChild(button);
    }

    /**
     * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
     */
    integrateWithMainPage() {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–∑—ã–≤–æ–≤ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        const nav = document.querySelector('nav') || document.querySelector('.navbar');
        if (nav) {
            const reviewsNavItem = document.createElement('div');
            reviewsNavItem.className = 'flex items-center space-x-2';
            reviewsNavItem.innerHTML = `
                <button id="navReviews" class="text-gray-600 hover:text-yellow-500 transition-colors flex items-center space-x-1">
                    <span>‚≠ê</span>
                    <span class="hidden md:inline">–û—Ç–∑—ã–≤—ã</span>
                </button>
            `;
            
            nav.appendChild(reviewsNavItem);
            
            document.getElementById('navReviews').addEventListener('click', () => {
                this.showModal();
            });
        }

        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É
        this.createReviewsButton();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ UI
     */
    getStats() {
        return {
            isVisible: this.isVisible,
            currentTarget: this.currentTarget,
            systemStats: this.system.getReviewsStats()
        };
    }

    /**
     * –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
     */
    enableTestMode() {
        console.log('üß™ –í–∫–ª—é—á–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º UI –æ—Ç–∑—ã–≤–æ–≤');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.showModal('employer-1', 'employer');
        
        return {
            stats: this.getStats(),
            systemStats: this.system.getReviewsStats()
        };
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.ReviewsUI = ReviewsUI; 