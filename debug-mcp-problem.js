#!/usr/bin/env node

const { execSync, spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ MCP\n');

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...');
try {
  const nodeVersion = execSync('node --version', { encoding: 'utf8' }).trim();
  const npmVersion = execSync('npm --version', { encoding: 'utf8' }).trim();
  console.log(`‚úÖ Node.js: ${nodeVersion}`);
  console.log(`‚úÖ npm: ${npmVersion}`);
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–π:', error.message);
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP SDK
console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP SDK...');
try {
  const sdkInfo = execSync('npm list @modelcontextprotocol/sdk', { encoding: 'utf8' });
  console.log('‚úÖ MCP SDK —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:');
  console.log(sdkInfo);
} catch (error) {
  console.log('‚ùå MCP SDK –Ω–µ –Ω–∞–π–¥–µ–Ω:', error.message);
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP...');
try {
  const mcpConfig = JSON.parse(fs.readFileSync('mcp.json', 'utf8'));
  console.log('‚úÖ mcp.json –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  const fullAutoQA = mcpConfig.mcpServers.FullAutoQA;
  console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è FullAutoQA:');
  console.log(`   –ö–æ–º–∞–Ω–¥–∞: ${fullAutoQA.command}`);
  console.log(`   –ê—Ä–≥—É–º–µ–Ω—Ç—ã: ${JSON.stringify(fullAutoQA.args)}`);
  
  if (fullAutoQA.command === 'node' && fullAutoQA.args[0]) {
    const serverPath = fullAutoQA.args[0];
    if (fs.existsSync(serverPath)) {
      console.log(`‚úÖ –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${serverPath}`);
    } else {
      console.log(`‚ùå –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${serverPath}`);
    }
  }
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
}

// 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ MCP —Å–µ—Ä–≤–µ—Ä–∞...');
try {
  console.log('üß™ –ó–∞–ø—É—Å–∫ mcp-server-code-runner...');
  
  const child = spawn('npx', ['-y', 'mcp-server-code-runner'], {
    stdio: ['pipe', 'pipe', 'pipe'],
    detached: false
  });
  
  let output = '';
  let errorOutput = '';
  
  child.stdout.on('data', (data) => {
    output += data.toString();
  });
  
  child.stderr.on('data', (data) => {
    errorOutput += data.toString();
  });
  
  child.on('close', (code) => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º: ${code}`);
    if (output) console.log('üì§ –í—ã–≤–æ–¥:', output);
    if (errorOutput) console.log('üì§ –û—à–∏–±–∫–∏:', errorOutput);
  });
  
  // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º
  setTimeout(() => {
    if (!child.killed) {
      child.kill();
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }
  }, 3000);
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
}

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
console.log(`üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${process.cwd()}`);
console.log(`üîß NODE_ENV: ${process.env.NODE_ENV || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
console.log(`üì¶ npm_config_prefix: ${process.env.npm_config_prefix || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);

// 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
console.log('\n6Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –†–ï–®–ï–ù–ò–Ø –ü–†–û–ë–õ–ï–ú–´:');
console.log(`
üîÑ –ü–û–õ–ù–ê–Ø –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –°–ò–°–¢–ï–ú–´:

1. –ó–∞–∫—Ä–æ–π—Ç–µ Cursor –ø–æ–ª–Ω–æ—Å—Ç—å—é
2. –£–¥–∞–ª–∏—Ç–µ –∫—ç—à MCP:
   Windows: %APPDATA%\\Cursor\\User\\globalStorage\\modelcontextprotocol
   
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä (–≤–∞–∂–Ω–æ!)

4. –û—Ç–∫—Ä–æ–π—Ç–µ Cursor –∑–∞–Ω–æ–≤–æ

5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP (Ctrl+Shift+P ‚Üí "MCP: Open Settings")

üìã –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –†–ï–®–ï–ù–ò–Ø:

A) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä:
   - –ó–∞–º–µ–Ω–∏—Ç–µ FullAutoQA –Ω–∞ mcp-server-code-runner
   - –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç

B) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:
   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Node.js –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ñ–∞–π–ª—ã
   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å (–º–æ–∂–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å)

C) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –ø—É—Ç—å:
   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –≤–º–µ—Å—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ
   - –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –í CURSOR:

1. –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12)
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Console
3. –ù–∞–π–¥–∏—Ç–µ –æ—à–∏–±–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å MCP
4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∫–ª–∞–¥–∫—É Network –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –∫ MCP —Å–µ—Ä–≤–µ—Ä–∞–º
`);

// 7. –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
console.log('\n7Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
try {
  const alternativeConfig = {
    ...mcpConfig,
    mcpServers: {
      ...mcpConfig.mcpServers,
      "FullAutoQA-Alternative": {
        "command": "npx",
        "args": [
          "-y",
          "mcp-server-code-runner"
        ]
      }
    }
  };
  
  fs.writeFileSync('mcp-alternative.json', JSON.stringify(alternativeConfig, null, 2));
  console.log('‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ mcp-alternative.json');
  console.log('üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–∞—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
}

console.log('\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
console.log('1. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä');
console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP –≤ Cursor');
console.log('3. –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ mcp-alternative.json');
console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Developer Tools –Ω–∞ –æ—à–∏–±–∫–∏'); 