#!/usr/bin/env node

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è WorkInCZ
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
 */

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (–¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤ npm)
const mcpServers = [
  'mcp-server-code-runner',
  '@notionhq/notion-mcp-server',
  '@supabase/mcp-server-supabase',
  '@shelm/wikipedia-mcp-server',
  'youtube-data-mcp-server',
  'firebase-tools@latest'
];

// –°–ø–∏—Å–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
const additionalDeps = [
  '@modelcontextprotocol/server-sequential-thinking',
  '@upstash/context7-mcp',
  '@playwright/mcp',
  '@modelcontextprotocol/server-memory'
];

console.log('üöÄ –ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è WorkInCZ...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, description) {
  try {
    console.log(`üì¶ ${description}...`);
    execSync(command, { stdio: 'inherit' });
    console.log(`‚úÖ ${description} - —É—Å–ø–µ—à–Ω–æ\n`);
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ ${description}:`, error.message);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ package.json
if (!fs.existsSync('package.json')) {
  console.error('‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞.');
  process.exit(1);
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
console.log('üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...\n');
runCommand('npm install', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π');

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MCP —Å–µ—Ä–≤–µ—Ä—ã
console.log('üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é MCP —Å–µ—Ä–≤–µ—Ä—ã...\n');
mcpServers.forEach(server => {
  runCommand(`npm install -g ${server}`, `–£—Å—Ç–∞–Ω–æ–≤–∫–∞ ${server}`);
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
console.log('üìö –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...\n');
additionalDeps.forEach(dep => {
  runCommand(`npm install ${dep}`, `–£—Å—Ç–∞–Ω–æ–≤–∫–∞ ${dep}`);
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é mcp.json
console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é mcp.json...\n');
if (fs.existsSync('mcp.json')) {
  try {
    const mcpConfig = JSON.parse(fs.readFileSync('mcp.json', 'utf8'));
    console.log('‚úÖ mcp.json –Ω–∞–π–¥–µ–Ω –∏ –≤–∞–ª–∏–¥–µ–Ω');
    console.log(`üìä –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: ${Object.keys(mcpConfig.mcpServers || {}).length}`);
    
    if (mcpConfig.codeReviewChecklist) {
      console.log(`üìã Code review checklist: ${mcpConfig.codeReviewChecklist.length} –ø—É–Ω–∫—Ç–æ–≤`);
    }
    
    if (mcpConfig.rules) {
      console.log(`‚öôÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞: ${mcpConfig.rules.length}`);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ mcp.json:', error.message);
  }
} else {
  console.error('‚ùå mcp.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
const startupScript = `#!/bin/bash
# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è WorkInCZ
echo "üöÄ –ó–∞–ø—É—Å–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤..."
npx @modelcontextprotocol/server-filesystem D:/workincz-site &
npx @modelcontextprotocol/server-sequential-thinking &
npx mcp-server-code-runner &
npx @sentry/mcp-server &
echo "‚úÖ MCP —Å–µ—Ä–≤–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
`;

fs.writeFileSync('start-mcp-servers.sh', startupScript);
fs.chmodSync('start-mcp-servers.sh', '755');

console.log('\nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('\nüìã –ß—Ç–æ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:');
console.log('  ‚Ä¢ Code Runner - –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞');
console.log('  ‚Ä¢ Notion MCP - –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Notion');
console.log('  ‚Ä¢ Supabase MCP - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Supabase');
console.log('  ‚Ä¢ Wikipedia MCP - –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');
console.log('  ‚Ä¢ YouTube MCP - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å YouTube API');
console.log('  ‚Ä¢ Firebase MCP - –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Firebase');
console.log('  ‚Ä¢ GitHub MCP - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GitHub');
console.log('\n‚öôÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞:');
console.log('  ‚Ä¢ Code review –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤');
console.log('  ‚Ä¢ Performance testing –ø—Ä–∏ –¥–µ–ø–ª–æ–µ');
console.log('  ‚Ä¢ 14 –ø—É–Ω–∫—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞');
console.log('\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
console.log('  ./start-mcp-servers.sh');
console.log('\nüìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub —Ç–æ–∫–µ–Ω –≤ mcp.json!'); 