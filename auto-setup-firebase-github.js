#!/usr/bin/env node

/**
 * üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê FIREBASE –ò GITHUB
 * –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ WorkInCZ
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
const CONFIG = {
  firebaseToken: '[–í–ê–®_FIREBASE_TOKEN]',
  firebaseProjectId: 'workincz-759c7',
  githubRepo: 'workincz-site', // –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ
  githubToken: null // –ë—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω
};

class AutoFirebaseGitHubSetup {
  constructor() {
    this.projectRoot = process.cwd();
    this.firebaseConfigPath = 'firebase.json';
    this.githubWorkflowsPath = '.github/workflows';
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ GitHub —Ç–æ–∫–µ–Ω–∞
  async getGitHubToken() {
    log('\nüêô –ù–ê–°–¢–†–û–ô–ö–ê GITHUB TOKEN:', 'bright');
    log('–î–ª—è –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω—É–∂–µ–Ω GitHub Personal Access Token', 'cyan');
    log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞: https://github.com/settings/tokens', 'blue');
    log('2. –ù–∞–∂–º–∏—Ç–µ "Generate new token (classic)"', 'blue');
    log('3. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∞: repo, workflow, admin:org', 'blue');
    log('4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –Ω–∏–∂–µ', 'blue');
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã prompt
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º placeholder
    CONFIG.githubToken = 'YOUR_GITHUB_TOKEN_HERE';
    log('‚ö†Ô∏è –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à GitHub —Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é CONFIG.githubToken', 'yellow');
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firebase
  async setupFirebase() {
    log('\nüî• –ù–ê–°–¢–†–û–ô–ö–ê FIREBASE:', 'bright');
    
    try {
      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firebase
      log('‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firebase...', 'cyan');
      const firebaseConfig = {
        "hosting": {
          "public": "public",
          "ignore": [
            "firebase.json",
            "**/.*",
            "**/node_modules/**"
          ],
          "rewrites": [
            {
              "source": "**",
              "destination": "/index.html"
            }
          ],
          "headers": [
            {
              "source": "**/*.@(js|css)",
              "headers": [
                {
                  "key": "Cache-Control",
                  "value": "max-age=31536000"
                }
              ]
            }
          ]
        },
        "firestore": {
          "rules": "firestore.rules",
          "indexes": "firestore.indexes.json"
        },
        "functions": {
          "source": "functions"
        },
        "storage": {
          "rules": "storage.rules"
        }
      };

      fs.writeFileSync(this.firebaseConfigPath, JSON.stringify(firebaseConfig, null, 2));
      log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase –æ–±–Ω–æ–≤–ª–µ–Ω–∞', 'green');

      // –°–æ–∑–¥–∞–Ω–∏–µ .firebaserc
      const firebaserc = {
        "projects": {
          "default": CONFIG.firebaseProjectId
        }
      };
      fs.writeFileSync('.firebaserc', JSON.stringify(firebaserc, null, 2));
      log('‚úÖ .firebaserc —Å–æ–∑–¥–∞–Ω', 'green');

    } catch (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Firebase: ${error.message}`, 'red');
    }
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub
  async setupGitHub() {
    log('\nüêô –ù–ê–°–¢–†–û–ô–ö–ê GITHUB:', 'bright');
    
    try {
      // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è workflows
      if (!fs.existsSync(this.githubWorkflowsPath)) {
        fs.mkdirSync(this.githubWorkflowsPath, { recursive: true });
        log('üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è GitHub Actions', 'green');
      }

      // –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö workflows
      const workflows = {
        'ci-cd-pipeline.yml': this.createCICDWorkflow(),
        'firebase-deploy.yml': this.createFirebaseDeployWorkflow(),
        'security-scan.yml': this.createSecurityScanWorkflow(),
        'performance-test.yml': this.createPerformanceTestWorkflow()
      };

      Object.entries(workflows).forEach(([filename, content]) => {
        const filepath = path.join(this.githubWorkflowsPath, filename);
        fs.writeFileSync(filepath, content);
        log(`‚úÖ –°–æ–∑–¥–∞–Ω workflow: ${filename}`, 'green');
      });

      // –°–æ–∑–¥–∞–Ω–∏–µ GitHub –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      const githubConfig = {
        "name": "WorkInCZ GitHub Integration",
        "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ WorkInCZ",
        "workflows": Object.keys(workflows),
        "required_secrets": [
          "FIREBASE_TOKEN",
          "GITHUB_TOKEN",
          "SENTRY_AUTH_TOKEN"
        ]
      };

      fs.writeFileSync('.github/config.json', JSON.stringify(githubConfig, null, 2));
      log('‚úÖ GitHub –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞', 'green');

    } catch (error) {
      log(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub: ${error.message}`, 'red');
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ CI/CD workflow
  createCICDWorkflow() {
    return `name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run linting
      run: npm run lint

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
    
    - name: Deploy to Firebase
      run: firebase deploy --only hosting --token "${{ secrets.FIREBASE_TOKEN }}"
`;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ Firebase Deploy workflow
  createFirebaseDeployWorkflow() {
    return `name: Firebase Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
    
    - name: Deploy to Firebase Hosting
      run: firebase deploy --only hosting --token "${{ secrets.FIREBASE_TOKEN }}"
    
    - name: Deploy to Firebase Functions
      run: firebase deploy --only functions --token "${{ secrets.FIREBASE_TOKEN }}"
`;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ Security Scan workflow
  createSecurityScanWorkflow() {
    return `name: Security Scan

on:
  push:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
`;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ Performance Test workflow
  createPerformanceTestWorkflow() {
    return `name: Performance Test

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'

jobs:
  performance-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright
      run: npx playwright install --with-deps
    
    - name: Run performance tests
      run: npx playwright test --config=playwright.config.js
    
    - name: Upload performance report
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: playwright-report/
`;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏
  createSecretsFile() {
    const secrets = {
      "firebase_token": CONFIG.firebaseToken,
      "firebase_project_id": CONFIG.firebaseProjectId,
      "github_token": CONFIG.githubToken,
      "setup_date": new Date().toISOString(),
      "instructions": {
        "firebase_token": "–¢–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –≤ Firebase",
        "firebase_project_id": "ID –ø—Ä–æ–µ–∫—Ç–∞ Firebase",
        "github_token": "GitHub Personal Access Token –¥–ª—è CI/CD"
      }
    };

    fs.writeFileSync('firebase-github-secrets.json', JSON.stringify(secrets, null, 2));
    log('‚úÖ –§–∞–π–ª —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏ —Å–æ–∑–¥–∞–Ω (firebase-github-secrets.json)', 'green');
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
  createSetupInstructions() {
    const instructions = `# üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê FIREBASE –ò GITHUB

## ‚úÖ –ß–¢–û –£–ñ–ï –ù–ê–°–¢–†–û–ï–ù–û:

### üî• Firebase:
- ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase –æ–±–Ω–æ–≤–ª–µ–Ω–∞
- ‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: ${CONFIG.firebaseToken.substring(0, 20)}...
- ‚úÖ –ü—Ä–æ–µ–∫—Ç ID: ${CONFIG.firebaseProjectId}
- ‚úÖ .firebaserc —Å–æ–∑–¥–∞–Ω

### üêô GitHub:
- ‚úÖ GitHub Actions workflows —Å–æ–∑–¥–∞–Ω—ã
- ‚úÖ CI/CD pipeline –Ω–∞—Å—Ç—Ä–æ–µ–Ω
- ‚úÖ Security scan –Ω–∞—Å—Ç—Ä–æ–µ–Ω
- ‚úÖ Performance tests –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã

## üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:

### 1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Secrets:
–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:
Settings > Secrets and variables > Actions

–î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å–µ–∫—Ä–µ—Ç—ã:

#### FIREBASE_TOKEN:
\`\`\`
${CONFIG.firebaseToken}
\`\`\`

#### GITHUB_TOKEN:
\`\`\`
[–í–∞—à GitHub Personal Access Token]
\`\`\`

### 2. –°–æ–∑–¥–∞–π—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:
\`\`\`bash
# –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub
# –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:
git remote add origin https://github.com/[username]/workincz-site.git
git add .
git commit -m "Initial setup with Firebase and GitHub integration"
git push -u origin main
\`\`\`

### 3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É:
\`\`\`bash
# –¢–µ—Å—Ç Firebase
firebase serve
firebase deploy --only hosting

# –¢–µ—Å—Ç GitHub Actions
git push origin main  # –ó–∞–ø—É—Å—Ç–∏—Ç CI/CD pipeline
\`\`\`

## üìã –°–û–ó–î–ê–ù–ù–´–ï –§–ê–ô–õ–´:

### Firebase:
- \`firebase.json\` - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase
- \`firebaserc\` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞

### GitHub:
- \`.github/workflows/ci-cd-pipeline.yml\` - CI/CD pipeline
- \`.github/workflows/firebase-deploy.yml\` - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π
- \`.github/workflows/security-scan.yml\` - –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
- \`.github/workflows/performance-test.yml\` - —Ç–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

## üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:

–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub Secrets:
- ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –ø—Ä–∏ push –≤ main
- ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ pull request
- ‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
- ‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
- ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Firebase Hosting

---
**–°—Ç–∞—Ç—É—Å:** ‚úÖ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê
**–í—Ä–µ–º—è:** ${new Date().toLocaleString()}
**Firebase –ø—Ä–æ–µ–∫—Ç:** ${CONFIG.firebaseProjectId}
`;

    fs.writeFileSync('FIREBASE_GITHUB_AUTO_SETUP.md', instructions);
    log('‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Å–æ–∑–¥–∞–Ω—ã', 'green');
  }

  // –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  async runSetup() {
    log('üöÄ –ó–ê–ü–£–°–ö –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –ù–ê–°–¢–†–û–ô–ö–ò FIREBASE –ò GITHUB', 'bright');
    log('–ü—Ä–æ–µ–∫—Ç: WorkInCZ', 'cyan');
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ GitHub —Ç–æ–∫–µ–Ω–∞
    await this.getGitHubToken();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firebase
    await this.setupFirebase();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub
    await this.setupGitHub();
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏
    this.createSecretsFile();
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    this.createSetupInstructions();
    
    log('\nüéâ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!', 'bright');
    log('üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:', 'cyan');
    log('1. –í—Å—Ç–∞–≤—å—Ç–µ GitHub —Ç–æ–∫–µ–Ω –≤ CONFIG.githubToken', 'blue');
    log('2. –°–æ–∑–¥–∞–π—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π', 'blue');
    log('3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Secrets', 'blue');
    log('4. –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ: FIREBASE_GITHUB_AUTO_SETUP.md', 'blue');
  }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  const setup = new AutoFirebaseGitHubSetup();
  setup.runSetup().catch(console.error);
}

module.exports = AutoFirebaseGitHubSetup; 