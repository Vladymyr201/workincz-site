#!/usr/bin/env node

const { spawn } = require('child_process');
const fs = require('fs');

console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï FULLAUTOQA\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
const server = spawn('node', ['servers/src/testing/full-auto-qa-minimal.cjs'], {
  stdio: ['pipe', 'pipe', 'pipe']
});

setTimeout(() => {
  if (!server.killed) {
    server.kill();
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  }
}, 2000);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
try {
  const mcpConfig = JSON.parse(fs.readFileSync('mcp.json', 'utf8'));
  const fullAutoQA = mcpConfig.mcpServers.FullAutoQA;
  
  console.log('‚úÖ mcp.json –∑–∞–≥—Ä—É–∂–µ–Ω');
  console.log(`üìã FullAutoQA –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:`);
  console.log(`   –ö–æ–º–∞–Ω–¥–∞: ${fullAutoQA.command}`);
  console.log(`   –ê—Ä–≥—É–º–µ–Ω—Ç—ã: ${JSON.stringify(fullAutoQA.args)}`);
  
  const serverPath = fullAutoQA.args[0];
  if (fs.existsSync(serverPath)) {
    console.log(`‚úÖ –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${serverPath}`);
  } else {
    console.log(`‚ùå –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${serverPath}`);
  }
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error.message);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞...');
if (fs.existsSync('test-component.jsx')) {
  console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω: test-component.jsx');
} else {
  console.log('‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
const devDeps = packageJson.devDependencies || {};

const requiredDeps = ['vitest', 'jest', 'eslint', 'prettier'];
requiredDeps.forEach(dep => {
  if (devDeps[dep]) {
    console.log(`‚úÖ ${dep} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
  } else {
    console.log(`‚ùå ${dep} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω`);
  }
});

console.log('\nüéØ –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –í CURSOR:');
console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Cursor');
console.log('2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí MCP Tools');
console.log('3. –ù–∞–π–¥–∏—Ç–µ FullAutoQA');
console.log('4. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å "5 tools enabled":');
console.log('   - analyze_file');
console.log('   - generate_tests');
console.log('   - run_tests');
console.log('   - add_comments');
console.log('   - lint_code');

console.log('\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –°–†–ê–ë–ê–¢–´–í–ê–ù–ò–Ø:');
console.log('1. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ª—é–±–æ–π .jsx –∏–ª–∏ .tsx —Ñ–∞–π–ª');
console.log('2. FullAutoQA –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:');
console.log('   - –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª');
console.log('   - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç—ã');
console.log('   - –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏');
console.log('   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º');

console.log('\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!'); 