// üîê AuthManager - –µ–¥–∏–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (v1.0.4)
// –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑—É–µ—Ç –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ onAuthStateChanged

class AuthManager {
  constructor() {
    this.unsubscribe = null;
    this.isInitialized = false;
    this.currentUser = null;
    this.handlers = new Map();
    this.DEFAULT_TIMEOUT = 300000; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–æ 5 –º–∏–Ω—É—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
    
    console.log('[AuthManager] v1.0.4 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
    this.init().catch(error => {
      console.error('[AuthManager] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Auth
  async init() {
    if (this.isInitialized) {
      console.log('[AuthManager] —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return;
    }

    try {
      console.log('[AuthManager] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
      
      if (typeof firebase === 'undefined') {
        throw new Error('Firebase –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
      }
      console.log('[AuthManager] Firebase SDK –¥–æ—Å—Ç—É–ø–µ–Ω');

      this.auth = firebase.auth();
      console.log('[AuthManager] Firebase Auth –ø–æ–¥–∫–ª—é—á–µ–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ auth –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
      if (!this.auth) {
        throw new Error('Firebase Auth –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
      console.log('[AuthManager] Firebase Auth –ø—Ä–æ–≤–µ—Ä–µ–Ω');
      
      this.isInitialized = true;
      console.log('[AuthManager] –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –¥–ª—è AppInitializer
      this.ready = true;
      console.log('[AuthManager] —Ñ–ª–∞–≥ ready —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      
    } catch (error) {
      console.error('[AuthManager] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
      throw error;
    }
  }

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  async subscribe(options = {}) {
    if (!this.isInitialized) {
      console.error('[AuthManager] –ù–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
      return;
    }

    const {
      onLoggedIn = () => {},
      onLoggedOut = () => {},
      timeout = this.DEFAULT_TIMEOUT,
      id = 'default'
    } = options;

    console.log(`[AuthManager] –ü–æ–¥–ø–∏—Å–∫–∞ ${id} —Å —Ç–∞–π–º–∞—É—Ç–æ–º ${timeout}ms`);

    // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
    if (this.unsubscribe) {
      this.unsubscribe();
    }

    let handled = false;
    let timeoutId = null;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–µ–º–æ-–≤—Ö–æ–¥–∞
    const urlParams = new URLSearchParams(window.location.search);
    const isDemo = urlParams.get('demo') === 'true';
    const demoRole = urlParams.get('role');
    
    if (isDemo && demoRole) {
      console.log(`[AuthManager] ${id}: –æ–±–Ω–∞—Ä—É–∂–µ–Ω –¥–µ–º–æ-–≤—Ö–æ–¥ —Å —Ä–æ–ª—å—é ${demoRole}`);
      // –î–ª—è –¥–µ–º–æ-–≤—Ö–æ–¥–∞ —Å–æ–∑–¥–∞–µ–º –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      try {
                      const anonymousUser = await firebase.auth().signInAnonymously();
        console.log(`[AuthManager] ${id}: –∞–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω`);
        handled = true;
        this.currentUser = anonymousUser.user;
        onLoggedIn(anonymousUser.user);
        return;
      } catch (error) {
        console.warn(`[AuthManager] ${id}: –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`, error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –æ–±—ã—á–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
      }
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
    timeoutId = setTimeout(() => {
      if (!handled) {
        console.log(`[AuthManager] ${id}: —Ç–∞–π–º–∞—É—Ç –≤—ã—à–µ–ª, —Å—á–∏—Ç–∞–µ–º user = null`);
        handled = true;
        onLoggedOut();
        this.unsubscribe();
      }
    }, timeout);

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    this.unsubscribe = this.auth.onAuthStateChanged((user) => {
      console.log(`[AuthManager] ${id}: onAuthStateChanged ‚Üí`, user?.email || '–í—ã—Ö–æ–¥');
      
      if (user && !handled) {
        handled = true;
        clearTimeout(timeoutId);
        this.currentUser = user;
        console.log(`[AuthManager] ${id}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω`, user.email);
        onLoggedIn(user);
      } else if (!user && !handled) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ localStorage –µ—â–µ —Ä–∞–∑ (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –æ–Ω–∞ –ø–æ—è–≤–∏–ª–∞—Å—å –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
        const demoAuth = this.checkDemoAuth();
        if (demoAuth) {
          console.log(`[AuthManager] ${id}: –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è ${demoAuth.email}`);
          handled = true;
          clearTimeout(timeoutId);
          this.currentUser = demoAuth;
          onLoggedIn(demoAuth);
        } else {
          // –ù–µ –≤—ã–∑—ã–≤–∞–µ–º onLoggedOut —Å—Ä–∞–∑—É, –∂–¥–µ–º —Ç–∞–π–º–∞—É—Ç
          console.log(`[AuthManager] ${id}: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∂–¥–µ–º —Ç–∞–π–º–∞—É—Ç`);
        }
      }
    });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–ø–∏—Å–∫–∏
    this.handlers.set(id, {
      onLoggedIn,
      onLoggedOut,
      timeoutId,
      handled
    });

    return () => this.unsubscribe(id);
  }

  // –û—Ç–ø–∏—Å–∫–∞ –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
  unsubscribe(id = 'default') {
    const handler = this.handlers.get(id);
    if (handler) {
      if (handler.timeoutId) {
        clearTimeout(handler.timeoutId);
      }
      this.handlers.delete(id);
      console.log(`[AuthManager] –û—Ç–ø–∏—Å–∫–∞ ${id} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞`);
    }

    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  getCurrentUser() {
    return this.currentUser || this.auth?.currentUser;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  isAuthenticated() {
    return !!this.getCurrentUser();
  }

  // –í—ã—Ö–æ–¥
  async signOut() {
    if (this.auth) {
      await this.auth.signOut();
      this.currentUser = null;
      console.log('[AuthManager] –í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
    }
    // –û—á–∏—â–∞–µ–º –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    localStorage.removeItem('demoAuth');
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ localStorage
  checkDemoAuth() {
    try {
      const demoAuthStr = localStorage.getItem('demoAuth');
      if (!demoAuthStr) return null;

      const demoAuth = JSON.parse(demoAuthStr);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É—Å—Ç–∞—Ä–µ–ª–∞ (24 —á–∞—Å–∞)
      const now = Date.now();
      const authAge = now - demoAuth.timestamp;
      const maxAge = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞
      
      if (authAge > maxAge) {
        console.log('[AuthManager] –î–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞, –æ—á–∏—â–∞–µ–º');
        localStorage.removeItem('demoAuth');
        return null;
      }

      console.log(`[AuthManager] –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é: ${demoAuth.email}`);
      return demoAuth;
    } catch (error) {
      console.error('[AuthManager] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
      localStorage.removeItem('demoAuth');
      return null;
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.authManager = new AuthManager();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = AuthManager;
} 