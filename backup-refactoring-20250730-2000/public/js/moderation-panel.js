/**
 * –ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä—É—á–Ω–æ–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */

class ModerationPanel {
    constructor(moderationSystem) {
        this.system = moderationSystem;
        this.currentModerator = null;
        this.currentItem = null;
        this.isVisible = false;
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–Ω–µ–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
     */
    init() {
        this.createModerationPanel();
        this.setupEventListeners();
        console.log('üë®‚Äç‚öñÔ∏è –ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
     */
    createModerationPanel() {
        const panel = document.createElement('div');
        panel.id = 'moderationPanel';
        panel.className = 'fixed inset-0 bg-black bg-opacity-50 hidden z-50';
        panel.innerHTML = `
            <div class="flex items-center justify-center min-h-screen p-4">
                <div class="bg-white rounded-lg p-6 max-w-6xl w-full max-h-screen overflow-y-auto">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-2xl font-bold text-gray-800 flex items-center">
                            <span class="mr-2">üë®‚Äç‚öñÔ∏è</span>
                            –ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
                        </h3>
                        <button id="closeModerationPanel" class="text-gray-500 hover:text-gray-700">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                    
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                        <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                        <div class="lg:col-span-1">
                            <div class="bg-gray-50 rounded-lg p-4">
                                <h4 class="text-lg font-semibold mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h4>
                                <div id="moderationStats" class="space-y-3">
                                    <div class="flex justify-between">
                                        <span>–í –æ—á–µ—Ä–µ–¥–∏:</span>
                                        <span id="queueSize" class="font-semibold">0</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ:</span>
                                        <span id="processedCount" class="font-semibold">0</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>–ñ–∞–ª–æ–±—ã:</span>
                                        <span id="reportsCount" class="font-semibold">0</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>–ê–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏—è:</span>
                                        <span id="autoModStatus" class="font-semibold">–í–∫–ª—é—á–µ–Ω–∞</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- –û—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ -->
                            <div class="bg-gray-50 rounded-lg p-4 mt-4">
                                <h4 class="text-lg font-semibold mb-4">üìã –û—á–µ—Ä–µ–¥—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h4>
                                <div id="moderationQueue" class="space-y-2 max-h-64 overflow-y-auto">
                                    <div class="text-center text-gray-500 py-4">
                                        –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ -->
                        <div class="lg:col-span-2">
                            <div id="moderationContent" class="bg-gray-50 rounded-lg p-4 min-h-96">
                                <div class="text-center text-gray-500 py-20">
                                    <div class="text-4xl mb-4">üë®‚Äç‚öñÔ∏è</div>
                                    <p class="text-lg">–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏</p>
                                </div>
                            </div>
                            
                            <!-- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏ -->
                            <div id="moderationTools" class="hidden mt-4 bg-white rounded-lg p-4 border">
                                <h4 class="text-lg font-semibold mb-4">üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏</h4>
                                <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
                                    <button id="approveBtn" class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 transition-colors">
                                        ‚úÖ –û–¥–æ–±—Ä–∏—Ç—å
                                    </button>
                                    <button id="rejectBtn" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 transition-colors">
                                        ‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                                    </button>
                                    <button id="flagBtn" class="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 transition-colors">
                                        ‚ö†Ô∏è –ü–æ–º–µ—Ç–∏—Ç—å
                                    </button>
                                    <button id="deleteBtn" class="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 transition-colors">
                                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                                    </button>
                                </div>
                                
                                <div class="mt-4">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">
                                        –ü—Ä–∏—á–∏–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è:
                                    </label>
                                    <textarea id="moderationReason" class="w-full border border-gray-300 rounded px-3 py-2 text-sm" rows="3" placeholder="–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –¥–µ–π—Å—Ç–≤–∏—è..."></textarea>
                                </div>
                                
                                <div class="mt-4 flex justify-end space-x-3">
                                    <button id="skipBtn" class="px-4 py-2 text-gray-600 border border-gray-300 rounded hover:bg-gray-50">
                                        –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
                                    </button>
                                    <button id="applyActionBtn" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                                        –ü—Ä–∏–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;

        document.body.appendChild(panel);
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏
        document.addEventListener('click', (e) => {
            if (e.target.id === 'closeModerationPanel') {
                this.hidePanel();
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –ø–∞–Ω–µ–ª–∏
        document.addEventListener('click', (e) => {
            const panel = document.getElementById('moderationPanel');
            if (e.target === panel) {
                this.hidePanel();
            }
        });

        // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏
        document.addEventListener('click', (e) => {
            if (e.target.id === 'approveBtn') {
                this.setModerationAction('approve');
            } else if (e.target.id === 'rejectBtn') {
                this.setModerationAction('reject');
            } else if (e.target.id === 'flagBtn') {
                this.setModerationAction('flag');
            } else if (e.target.id === 'deleteBtn') {
                this.setModerationAction('delete');
            } else if (e.target.id === 'skipBtn') {
                this.skipCurrentItem();
            } else if (e.target.id === 'applyActionBtn') {
                this.applyModerationAction();
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
     */
    showPanel() {
        const panel = document.getElementById('moderationPanel');
        if (panel) {
            panel.classList.remove('hidden');
            this.isVisible = true;
            this.loadModerationData();
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
     */
    hidePanel() {
        const panel = document.getElementById('moderationPanel');
        if (panel) {
            panel.classList.add('hidden');
            this.isVisible = false;
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–¥–µ—Ä–∞—Ü–∏–∏
     */
    loadModerationData() {
        this.updateStats();
        this.updateQueue();
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
     */
    updateStats() {
        const stats = this.system.getModerationStats();
        
        document.getElementById('queueSize').textContent = stats.queueSize;
        document.getElementById('processedCount').textContent = stats.processedItems;
        document.getElementById('reportsCount').textContent = stats.activeReports;
        document.getElementById('autoModStatus').textContent = stats.autoModerationEnabled ? '–í–∫–ª—é—á–µ–Ω–∞' : '–û—Ç–∫–ª—é—á–µ–Ω–∞';
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
     */
    updateQueue() {
        const queue = this.system.getModerationQueue(20);
        const queueContainer = document.getElementById('moderationQueue');
        
        if (queue.length === 0) {
            queueContainer.innerHTML = `
                <div class="text-center text-gray-500 py-4">
                    –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞
                </div>
            `;
            return;
        }

        const queueHTML = queue.map((item, index) => {
            const priorityColor = {
                high: 'bg-red-100 border-red-300',
                medium: 'bg-yellow-100 border-yellow-300',
                low: 'bg-green-100 border-green-300'
            }[item.priority] || 'bg-gray-100 border-gray-300';

            const priorityText = {
                high: '–í—ã—Å–æ–∫–∏–π',
                medium: '–°—Ä–µ–¥–Ω–∏–π',
                low: '–ù–∏–∑–∫–∏–π'
            }[item.priority] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

            return `
                <div class="queue-item ${priorityColor} border rounded p-3 cursor-pointer hover:opacity-75 transition-opacity" 
                     data-item-id="${item.id}">
                    <div class="flex items-center justify-between mb-2">
                        <span class="text-sm font-medium">#${index + 1}</span>
                        <span class="text-xs px-2 py-1 rounded ${priorityColor.replace('100', '200')}">
                            ${priorityText}
                        </span>
                    </div>
                    <div class="text-sm text-gray-600">
                        ${this.getContentPreview(item)}
                    </div>
                    <div class="text-xs text-gray-500 mt-1">
                        ${this.formatTimestamp(item.timestamp)}
                    </div>
                </div>
            `;
        }).join('');

        queueContainer.innerHTML = queueHTML;

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–ª–∏–∫–æ–≤
        queueContainer.querySelectorAll('.queue-item').forEach(item => {
            item.addEventListener('click', () => {
                const itemId = item.dataset.itemId;
                this.loadModerationItem(itemId);
            });
        });
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞
     */
    getContentPreview(item) {
        if (item.type === 'report') {
            return `–ñ–∞–ª–æ–±–∞: ${item.report.reason}`;
        }
        
        const content = item.content || {};
        const text = content.title || content.description || content.message || '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞';
        return text.length > 50 ? text.substring(0, 50) + '...' : text;
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏
     */
    formatTimestamp(timestamp) {
        const date = new Date(timestamp);
        const now = new Date();
        const diff = now - date;
        
        if (diff < 60000) return '–¢–æ–ª—å–∫–æ —á—Ç–æ';
        if (diff < 3600000) return `${Math.floor(diff / 60000)} –º–∏–Ω –Ω–∞–∑–∞–¥`;
        if (diff < 86400000) return `${Math.floor(diff / 3600000)} —á –Ω–∞–∑–∞–¥`;
        return date.toLocaleDateString('ru-RU');
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
     */
    loadModerationItem(itemId) {
        const item = this.system.moderationQueue.find(i => i.id === itemId);
        if (!item) return;

        this.currentItem = item;
        this.displayModerationContent(item);
        this.showModerationTools();
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
     */
    displayModerationContent(item) {
        const content = document.getElementById('moderationContent');
        
        if (item.type === 'report') {
            this.displayReportContent(item.report, content);
        } else {
            this.displayRegularContent(item, content);
        }
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
     */
    displayRegularContent(item, container) {
        const content = item.content || {};
        const flags = item.flags || [];
        
        container.innerHTML = `
            <div class="space-y-4">
                <div class="flex items-center justify-between">
                    <h4 class="text-lg font-semibold">–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞</h4>
                    <div class="flex space-x-2">
                        ${flags.map(flag => `
                            <span class="text-xs px-2 py-1 bg-red-100 text-red-800 rounded">
                                ${flag}
                            </span>
                        `).join('')}
                    </div>
                </div>
                
                <div class="bg-white rounded-lg p-4 border">
                    <div class="space-y-3">
                        ${content.title ? `
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                                <div class="text-gray-900">${content.title}</div>
                            </div>
                        ` : ''}
                        
                        ${content.description ? `
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                                <div class="text-gray-900">${content.description}</div>
                            </div>
                        ` : ''}
                        
                        ${content.location ? `
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</label>
                                <div class="text-gray-900">${content.location}</div>
                            </div>
                        ` : ''}
                        
                        ${content.salary ? `
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ó–∞—Ä–ø–ª–∞—Ç–∞:</label>
                                <div class="text-gray-900">${content.salary}</div>
                            </div>
                        ` : ''}
                        
                        ${content.name ? `
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ò–º—è:</label>
                                <div class="text-gray-900">${content.name}</div>
                            </div>
                        ` : ''}
                        
                        ${content.bio ? `
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ë–∏–æ–≥—Ä–∞—Ñ–∏—è:</label>
                                <div class="text-gray-900">${content.bio}</div>
                            </div>
                        ` : ''}
                        
                        ${content.skills ? `
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–ù–∞–≤—ã–∫–∏:</label>
                                <div class="text-gray-900">${Array.isArray(content.skills) ? content.skills.join(', ') : content.skills}</div>
                            </div>
                        ` : ''}
                    </div>
                </div>
                
                <div class="bg-blue-50 rounded-lg p-3">
                    <div class="text-sm text-blue-800">
                        <strong>–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:</strong> ${item.contentType}<br>
                        <strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> ${item.userId}<br>
                        <strong>–í—Ä–µ–º—è:</strong> ${this.formatTimestamp(item.timestamp)}<br>
                        <strong>–°—á–µ—Ç –º–æ–¥–µ—Ä–∞—Ü–∏–∏:</strong> ${item.score || 0}
                    </div>
                </div>
            </div>
        `;
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∂–∞–ª–æ–±—ã
     */
    displayReportContent(report, container) {
        container.innerHTML = `
            <div class="space-y-4">
                <div class="flex items-center justify-between">
                    <h4 class="text-lg font-semibold">–ñ–∞–ª–æ–±–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç</h4>
                    <span class="text-xs px-2 py-1 bg-red-100 text-red-800 rounded">
                        ${report.priority} –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
                    </span>
                </div>
                
                <div class="bg-white rounded-lg p-4 border">
                    <div class="space-y-3">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–ü—Ä–∏—á–∏–Ω–∞ –∂–∞–ª–æ–±—ã:</label>
                            <div class="text-gray-900 font-medium">${this.getReasonText(report.reason)}</div>
                        </div>
                        
                        ${report.description ? `
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                                <div class="text-gray-900">${report.description}</div>
                            </div>
                        ` : ''}
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–ñ–∞–ª–æ–±—â–∏–∫:</label>
                            <div class="text-gray-900">${report.reporterId}</div>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏:</label>
                            <div class="text-gray-900">${this.formatTimestamp(report.timestamp)}</div>
                        </div>
                    </div>
                </div>
                
                <div class="bg-yellow-50 rounded-lg p-3">
                    <div class="text-sm text-yellow-800">
                        <strong>ID –∫–æ–Ω—Ç–µ–Ω—Ç–∞:</strong> ${report.contentId}<br>
                        <strong>–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:</strong> ${report.contentType}<br>
                        <strong>–°—Ç–∞—Ç—É—Å:</strong> ${this.getStatusText(report.status)}
                    </div>
                </div>
            </div>
        `;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏—á–∏–Ω—ã
     */
    getReasonText(reason) {
        const reasons = {
            spam: '–°–ø–∞–º',
            scam: '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ',
            inappropriate: '–ù–µ—É–º–µ—Å—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',
            duplicate: '–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ',
            incomplete: '–ù–µ–ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
            other: '–î—Ä—É–≥–æ–µ'
        };
        return reasons[reason] || reason;
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞
     */
    getStatusText(status) {
        const statuses = {
            pending: '–û–∂–∏–¥–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è',
            resolved: '–†–∞–∑—Ä–µ—à–µ–Ω–æ',
            rejected: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ'
        };
        return statuses[status] || status;
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏
     */
    showModerationTools() {
        const tools = document.getElementById('moderationTools');
        if (tools) {
            tools.classList.remove('hidden');
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏
     */
    hideModerationTools() {
        const tools = document.getElementById('moderationTools');
        if (tools) {
            tools.classList.add('hidden');
        }
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏
     */
    setModerationAction(action) {
        // –°–±—Ä–æ—Å –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        document.querySelectorAll('#moderationTools button').forEach(btn => {
            btn.classList.remove('ring-2', 'ring-blue-500');
        });

        // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏
        const actionBtn = document.getElementById(`${action}Btn`);
        if (actionBtn) {
            actionBtn.classList.add('ring-2', 'ring-blue-500');
        }

        this.currentAction = action;
    }

    /**
     * –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç
     */
    skipCurrentItem() {
        this.currentItem = null;
        this.currentAction = null;
        this.hideModerationTools();
        
        const content = document.getElementById('moderationContent');
        content.innerHTML = `
            <div class="text-center text-gray-500 py-20">
                <div class="text-4xl mb-4">üë®‚Äç‚öñÔ∏è</div>
                <p class="text-lg">–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏</p>
            </div>
        `;
    }

    /**
     * –ü—Ä–∏–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
     */
    applyModerationAction() {
        if (!this.currentItem || !this.currentAction) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏');
            return;
        }

        const reason = document.getElementById('moderationReason').value.trim();
        if (!reason) {
            alert('–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –¥–µ–π—Å—Ç–≤–∏—è');
            return;
        }

        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        const success = this.system.processModerationItem(
            this.currentItem.id,
            this.currentModerator || 'moderator-1',
            this.currentAction,
            reason
        );

        if (success) {
            this.showSuccessMessage(`–î–µ–π—Å—Ç–≤–∏–µ "${this.currentAction}" –ø—Ä–∏–º–µ–Ω–µ–Ω–æ`);
            this.skipCurrentItem();
            this.loadModerationData(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        } else {
            this.showErrorMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
     */
    showSuccessMessage(message) {
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform transition-all duration-300 translate-x-full';
        toast.textContent = message;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.classList.remove('translate-x-full');
        }, 100);
        
        setTimeout(() => {
            toast.classList.add('translate-x-full');
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        }, 3000);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    showErrorMessage(message) {
        const toast = document.createElement('div');
        toast.className = 'fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform transition-all duration-300 translate-x-full';
        toast.textContent = message;
        
        document.body.appendChild(toast);
        
        setTimeout(() => {
            toast.classList.remove('translate-x-full');
        }, 100);
        
        setTimeout(() => {
            toast.classList.add('translate-x-full');
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        }, 3000);
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
     */
    createModerationButton() {
        const button = document.createElement('button');
        button.id = 'openModerationPanel';
        button.className = 'fixed bottom-4 right-4 bg-red-600 text-white p-3 rounded-full shadow-lg hover:bg-red-700 transition-colors z-50';
        button.innerHTML = `
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
        `;
        button.title = '–ü–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤';

        button.addEventListener('click', () => {
            this.showPanel();
        });

        document.body.appendChild(button);
    }

    /**
     * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
     */
    integrateWithMainPage() {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        const nav = document.querySelector('nav') || document.querySelector('.navbar');
        if (nav) {
            const moderationNavItem = document.createElement('div');
            moderationNavItem.className = 'flex items-center space-x-2';
            moderationNavItem.innerHTML = `
                <button id="navModeration" class="text-gray-600 hover:text-red-500 transition-colors flex items-center space-x-1">
                    <span>üõ°Ô∏è</span>
                    <span class="hidden md:inline">–ú–æ–¥–µ—Ä–∞—Ü–∏—è</span>
                </button>
            `;
            
            nav.appendChild(moderationNavItem);
            
            document.getElementById('navModeration').addEventListener('click', () => {
                this.showPanel();
            });
        }

        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É
        this.createModerationButton();
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–∞–Ω–µ–ª–∏
     */
    getStats() {
        return {
            isVisible: this.isVisible,
            currentItem: this.currentItem ? this.currentItem.id : null,
            systemStats: this.system.getModerationStats()
        };
    }

    /**
     * –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
     */
    enableTestMode() {
        console.log('üß™ –í–∫–ª—é—á–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –ø–∞–Ω–µ–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å
        this.showPanel();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            this.loadModerationData();
        }, 2000);
        
        return {
            stats: this.getStats(),
            systemStats: this.system.getModerationStats()
        };
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.ModerationPanel = ModerationPanel; 