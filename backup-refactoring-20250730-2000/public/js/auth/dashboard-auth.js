// üé≠ DashboardAuth - —Å–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–æ–≤ (v1.0.3)
// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –¥–∞—à–±–æ—Ä–¥–æ–≤

console.log('üé≠ DashboardAuth: –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è', window.location.pathname);

class DashboardAuth {
  constructor() {
    console.log('üé≠ DashboardAuth: –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ã–∑–≤–∞–Ω');
    this.isInitialized = false;
    this.init();
  }

  init() {
    console.log('üé≠ DashboardAuth: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞—Ç–∞');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => {
        this.setupAuthCheck();
      });
    } else {
      this.setupAuthCheck();
    }
  }

  setupAuthCheck() {
    console.log('üé≠ DashboardAuth: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å—Ä–∞–∑—É
    this.checkAuth();

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (window.authManager) {
      window.authManager.subscribe('default', (user) => {
        console.log('üé≠ DashboardAuth: –ø–æ–ª—É—á–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', user ? user.uid : 'null');
        this.checkAuth();
      });
    } else {
      console.warn('üé≠ DashboardAuth: AuthManager –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é –ø—Ä–æ–≤–µ—Ä–∫—É Firebase');
      // Fallback: –ø—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Firebase Auth
      if (firebase && firebase.auth) {
        firebase.auth().onAuthStateChanged((user) => {
          console.log('üé≠ DashboardAuth: Firebase Auth –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', user ? user.uid : 'null');
          this.checkAuth();
        });
      }
    }
    
    this.isInitialized = true;
    console.log('üé≠ DashboardAuth: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }

  checkAuth() {
    console.log('üé≠ DashboardAuth: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    let user = window.authManager?.getCurrentUser();
    let profile = null; // getCurrentProfile –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏

    // FALLBACK: –ï—Å–ª–∏ AuthManager –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º Firebase Auth –Ω–∞–ø—Ä—è–º—É—é
    if (!user && firebase && firebase.auth) {
      console.log('üé≠ DashboardAuth: AuthManager –Ω–µ –≤–µ—Ä–Ω—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º Firebase Auth –Ω–∞–ø—Ä—è–º—É—é');
      user = firebase.auth().currentUser;

      if (user) {
        console.log('üé≠ DashboardAuth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ Firebase Auth –Ω–∞–ø—Ä—è–º—É—é:', user.uid);
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ Firestore
        firebase.firestore().collection('users').doc(user.uid).get()
          .then(userDoc => {
            profile = userDoc.data();
            console.log('üé≠ DashboardAuth: –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω –∏–∑ Firestore:', profile);
            this.handleAuthenticatedUser(user, profile);
          })
          .catch(error => {
            console.warn('üé≠ DashboardAuth: –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ Firestore:', error);
            this.handleAuthenticatedUser(user, null);
          });
        return;
      }
    }

    // –ï—Å–ª–∏ AuthManager –≤–µ—Ä–Ω—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è
    if (user && !profile) {
      console.log('üé≠ DashboardAuth: –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ Firestore –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.uid);
      firebase.firestore().collection('users').doc(user.uid).get()
        .then(userDoc => {
          profile = userDoc.data();
          console.log('üé≠ DashboardAuth: –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω –∏–∑ Firestore:', profile);
          this.handleAuthenticatedUser(user, profile);
        })
        .catch(error => {
          console.warn('üé≠ DashboardAuth: –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ Firestore:', error);
          this.handleAuthenticatedUser(user, null);
        });
      return;
    }

    if (user) {
      console.log('üé≠ DashboardAuth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', user.uid);
      this.handleAuthenticatedUser(user, profile);
    } else {
      console.log('üé≠ DashboardAuth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      this.handleUnauthenticatedUser();
    }
  }

  handleAuthenticatedUser(user, profile) {
    console.log('üé≠ DashboardAuth: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.uid);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userRole = profile?.role || 'candidate';
    const currentPath = window.location.pathname;
    
    console.log('üé≠ DashboardAuth: —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userRole, '—Ç–µ–∫—É—â–∏–π –ø—É—Ç—å:', currentPath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–æ–ª–∏ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const rolePages = {
      'candidate': '/dashboard.html',
      'employer': '/employer-dashboard.html',
      'agency': '/agency-dashboard.html'
    };
    
    const expectedPage = rolePages[userRole];
    
    if (expectedPage && currentPath !== expectedPage) {
      console.log('üé≠ DashboardAuth: –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É:', expectedPage);
      window.location.href = expectedPage;
      return;
    }
    
    console.log('üé≠ DashboardAuth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    this.updateUIForAuthenticatedUser(user, profile);
  }

  handleUnauthenticatedUser() {
    console.log('üé≠ DashboardAuth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–º–æ –∏ dev-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');

    // FALLBACK: –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase Auth –Ω–∞–ø—Ä—è–º—É—é
    if (firebase && firebase.auth) {
      const currentUser = firebase.auth().currentUser;
      if (currentUser) {
        console.log('üé≠ DashboardAuth: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ Firebase Auth –Ω–∞–ø—Ä—è–º—É—é:', currentUser.uid);
        
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ Firestore
        firebase.firestore().collection('users').doc(currentUser.uid).get()
          .then(userDoc => {
            const profile = userDoc.data();
            console.log('üé≠ DashboardAuth: –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω –∏–∑ Firestore:', profile);
            this.handleAuthenticatedUser(currentUser, profile);
          })
          .catch(error => {
            console.warn('üé≠ DashboardAuth: –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ Firestore:', error);
            this.handleAuthenticatedUser(currentUser, null);
          });
        return;
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–º–æ –∏ dev-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    const urlParams = new URLSearchParams(window.location.search);
    const isDemo = urlParams.get('demo') === 'true';
    const isDev = urlParams.get('dev') === 'true';
    const role = urlParams.get('role');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–º–æ –∏–ª–∏ dev-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if (role && (isDemo || isDev)) {
      console.log('üé≠ DashboardAuth: –æ–±–Ω–∞—Ä—É–∂–µ–Ω –¥–µ–º–æ/dev-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é:', role);
      // –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–µ–º–æ-–≤—Ö–æ–¥–∞
      const fakeUser = {
        uid: `demo-${Date.now()}`,
        email: `demo-${role}@workincz.cz`,
        isAnonymous: true
      };
      this.handleAuthenticatedUser(fakeUser, { role: role, isDemoAccount: true });
      return;
    }

    console.log('üé≠ DashboardAuth: –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      window.location.href = '/';
    }, 3000);
  }

  updateUIForAuthenticatedUser(user, profile) {
    console.log('üé≠ DashboardAuth: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    
    // –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const authElements = document.querySelectorAll('.auth-required');
    authElements.forEach(el => {
      el.style.display = 'none';
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const userElements = document.querySelectorAll('.user-only');
    userElements.forEach(el => {
      el.style.display = 'block';
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    if (profile) {
      const userNameElement = document.getElementById('userName');
      if (userNameElement) {
        userNameElement.textContent = profile.name || profile.email || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      }
      
      const userRoleElement = document.getElementById('userRole');
      if (userRoleElement) {
    const roleNames = {
          'candidate': '–°–æ–∏—Å–∫–∞—Ç–µ–ª—å',
          'employer': '–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å',
          'agency': '–ê–≥–µ–Ω—Ç—Å—Ç–≤–æ'
        };
        userRoleElement.textContent = roleNames[profile.role] || profile.role;
      }
    }
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
console.log('üé≠ DashboardAuth: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
  window.dashboardAuth = new DashboardAuth();